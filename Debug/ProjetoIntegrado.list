
ProjetoIntegrado.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002d58  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000a720  08002e64  08002e64  00012e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d584  0800d584  000200ec  2**0
                  CONTENTS
  4 .ARM          00000000  0800d584  0800d584  000200ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800d584  0800d584  000200ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d584  0800d584  0001d584  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d588  0800d588  0001d588  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ec  20000000  0800d58c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000bc  200000ec  0800d678  000200ec  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001a8  0800d678  000201a8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007c34  00000000  00000000  00020115  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000168f  00000000  00000000  00027d49  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000710  00000000  00000000  000293d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  00016d22  00000000  00000000  00029ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   000064f7  00000000  00000000  0004080a  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    0008174b  00000000  00000000  00046d01  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .comment      0000007b  00000000  00000000  000c844c  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00000640  00000000  00000000  000c84c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame  00001cbc  00000000  00000000  000c8b08  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000ec 	.word	0x200000ec
 8000128:	00000000 	.word	0x00000000
 800012c:	08002e4c 	.word	0x08002e4c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000f0 	.word	0x200000f0
 8000148:	08002e4c 	.word	0x08002e4c

0800014c <ST7735_Select>:
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
 8000150:	2200      	movs	r2, #0
 8000152:	2110      	movs	r1, #16
 8000154:	4802      	ldr	r0, [pc, #8]	; (8000160 <ST7735_Select+0x14>)
 8000156:	f001 fede 	bl	8001f16 <HAL_GPIO_WritePin>
 800015a:	bf00      	nop
 800015c:	bd80      	pop	{r7, pc}
 800015e:	bf00      	nop
 8000160:	40010800 	.word	0x40010800

08000164 <ST7735_Unselect>:
 8000164:	b580      	push	{r7, lr}
 8000166:	af00      	add	r7, sp, #0
 8000168:	2201      	movs	r2, #1
 800016a:	2110      	movs	r1, #16
 800016c:	4802      	ldr	r0, [pc, #8]	; (8000178 <ST7735_Unselect+0x14>)
 800016e:	f001 fed2 	bl	8001f16 <HAL_GPIO_WritePin>
 8000172:	bf00      	nop
 8000174:	bd80      	pop	{r7, pc}
 8000176:	bf00      	nop
 8000178:	40010800 	.word	0x40010800

0800017c <ST7735_Reset>:
 800017c:	b580      	push	{r7, lr}
 800017e:	af00      	add	r7, sp, #0
 8000180:	2200      	movs	r2, #0
 8000182:	2102      	movs	r1, #2
 8000184:	4806      	ldr	r0, [pc, #24]	; (80001a0 <ST7735_Reset+0x24>)
 8000186:	f001 fec6 	bl	8001f16 <HAL_GPIO_WritePin>
 800018a:	2005      	movs	r0, #5
 800018c:	f001 fc4c 	bl	8001a28 <HAL_Delay>
 8000190:	2201      	movs	r2, #1
 8000192:	2102      	movs	r1, #2
 8000194:	4802      	ldr	r0, [pc, #8]	; (80001a0 <ST7735_Reset+0x24>)
 8000196:	f001 febe 	bl	8001f16 <HAL_GPIO_WritePin>
 800019a:	bf00      	nop
 800019c:	bd80      	pop	{r7, pc}
 800019e:	bf00      	nop
 80001a0:	40010c00 	.word	0x40010c00

080001a4 <ST7735_WriteCommand>:
 80001a4:	b580      	push	{r7, lr}
 80001a6:	b082      	sub	sp, #8
 80001a8:	af00      	add	r7, sp, #0
 80001aa:	4603      	mov	r3, r0
 80001ac:	71fb      	strb	r3, [r7, #7]
 80001ae:	2200      	movs	r2, #0
 80001b0:	2101      	movs	r1, #1
 80001b2:	4807      	ldr	r0, [pc, #28]	; (80001d0 <ST7735_WriteCommand+0x2c>)
 80001b4:	f001 feaf 	bl	8001f16 <HAL_GPIO_WritePin>
 80001b8:	1df9      	adds	r1, r7, #7
 80001ba:	f04f 33ff 	mov.w	r3, #4294967295
 80001be:	2201      	movs	r2, #1
 80001c0:	4804      	ldr	r0, [pc, #16]	; (80001d4 <ST7735_WriteCommand+0x30>)
 80001c2:	f002 fb2f 	bl	8002824 <HAL_SPI_Transmit>
 80001c6:	bf00      	nop
 80001c8:	3708      	adds	r7, #8
 80001ca:	46bd      	mov	sp, r7
 80001cc:	bd80      	pop	{r7, pc}
 80001ce:	bf00      	nop
 80001d0:	40010c00 	.word	0x40010c00
 80001d4:	20000148 	.word	0x20000148

080001d8 <ST7735_WriteData>:
 80001d8:	b580      	push	{r7, lr}
 80001da:	b082      	sub	sp, #8
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	6039      	str	r1, [r7, #0]
 80001e2:	2201      	movs	r2, #1
 80001e4:	2101      	movs	r1, #1
 80001e6:	4807      	ldr	r0, [pc, #28]	; (8000204 <ST7735_WriteData+0x2c>)
 80001e8:	f001 fe95 	bl	8001f16 <HAL_GPIO_WritePin>
 80001ec:	683b      	ldr	r3, [r7, #0]
 80001ee:	b29a      	uxth	r2, r3
 80001f0:	f04f 33ff 	mov.w	r3, #4294967295
 80001f4:	6879      	ldr	r1, [r7, #4]
 80001f6:	4804      	ldr	r0, [pc, #16]	; (8000208 <ST7735_WriteData+0x30>)
 80001f8:	f002 fb14 	bl	8002824 <HAL_SPI_Transmit>
 80001fc:	bf00      	nop
 80001fe:	3708      	adds	r7, #8
 8000200:	46bd      	mov	sp, r7
 8000202:	bd80      	pop	{r7, pc}
 8000204:	40010c00 	.word	0x40010c00
 8000208:	20000148 	.word	0x20000148

0800020c <ST7735_ExecuteCommandList>:
 800020c:	b580      	push	{r7, lr}
 800020e:	b084      	sub	sp, #16
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	1c5a      	adds	r2, r3, #1
 8000218:	607a      	str	r2, [r7, #4]
 800021a:	781b      	ldrb	r3, [r3, #0]
 800021c:	73fb      	strb	r3, [r7, #15]
 800021e:	e034      	b.n	800028a <ST7735_ExecuteCommandList+0x7e>
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	1c5a      	adds	r2, r3, #1
 8000224:	607a      	str	r2, [r7, #4]
 8000226:	781b      	ldrb	r3, [r3, #0]
 8000228:	72fb      	strb	r3, [r7, #11]
 800022a:	7afb      	ldrb	r3, [r7, #11]
 800022c:	4618      	mov	r0, r3
 800022e:	f7ff ffb9 	bl	80001a4 <ST7735_WriteCommand>
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	1c5a      	adds	r2, r3, #1
 8000236:	607a      	str	r2, [r7, #4]
 8000238:	781b      	ldrb	r3, [r3, #0]
 800023a:	72bb      	strb	r3, [r7, #10]
 800023c:	7abb      	ldrb	r3, [r7, #10]
 800023e:	b29b      	uxth	r3, r3
 8000240:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000244:	81bb      	strh	r3, [r7, #12]
 8000246:	7abb      	ldrb	r3, [r7, #10]
 8000248:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800024c:	72bb      	strb	r3, [r7, #10]
 800024e:	7abb      	ldrb	r3, [r7, #10]
 8000250:	2b00      	cmp	r3, #0
 8000252:	d008      	beq.n	8000266 <ST7735_ExecuteCommandList+0x5a>
 8000254:	7abb      	ldrb	r3, [r7, #10]
 8000256:	4619      	mov	r1, r3
 8000258:	6878      	ldr	r0, [r7, #4]
 800025a:	f7ff ffbd 	bl	80001d8 <ST7735_WriteData>
 800025e:	7abb      	ldrb	r3, [r7, #10]
 8000260:	687a      	ldr	r2, [r7, #4]
 8000262:	4413      	add	r3, r2
 8000264:	607b      	str	r3, [r7, #4]
 8000266:	89bb      	ldrh	r3, [r7, #12]
 8000268:	2b00      	cmp	r3, #0
 800026a:	d00e      	beq.n	800028a <ST7735_ExecuteCommandList+0x7e>
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	1c5a      	adds	r2, r3, #1
 8000270:	607a      	str	r2, [r7, #4]
 8000272:	781b      	ldrb	r3, [r3, #0]
 8000274:	81bb      	strh	r3, [r7, #12]
 8000276:	89bb      	ldrh	r3, [r7, #12]
 8000278:	2bff      	cmp	r3, #255	; 0xff
 800027a:	d102      	bne.n	8000282 <ST7735_ExecuteCommandList+0x76>
 800027c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000280:	81bb      	strh	r3, [r7, #12]
 8000282:	89bb      	ldrh	r3, [r7, #12]
 8000284:	4618      	mov	r0, r3
 8000286:	f001 fbcf 	bl	8001a28 <HAL_Delay>
 800028a:	7bfb      	ldrb	r3, [r7, #15]
 800028c:	1e5a      	subs	r2, r3, #1
 800028e:	73fa      	strb	r2, [r7, #15]
 8000290:	2b00      	cmp	r3, #0
 8000292:	d1c5      	bne.n	8000220 <ST7735_ExecuteCommandList+0x14>
 8000294:	bf00      	nop
 8000296:	3710      	adds	r7, #16
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}

0800029c <ST7735_SetAddressWindow>:
 800029c:	b590      	push	{r4, r7, lr}
 800029e:	b085      	sub	sp, #20
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	4604      	mov	r4, r0
 80002a4:	4608      	mov	r0, r1
 80002a6:	4611      	mov	r1, r2
 80002a8:	461a      	mov	r2, r3
 80002aa:	4623      	mov	r3, r4
 80002ac:	71fb      	strb	r3, [r7, #7]
 80002ae:	4603      	mov	r3, r0
 80002b0:	71bb      	strb	r3, [r7, #6]
 80002b2:	460b      	mov	r3, r1
 80002b4:	717b      	strb	r3, [r7, #5]
 80002b6:	4613      	mov	r3, r2
 80002b8:	713b      	strb	r3, [r7, #4]
 80002ba:	202a      	movs	r0, #42	; 0x2a
 80002bc:	f7ff ff72 	bl	80001a4 <ST7735_WriteCommand>
 80002c0:	2300      	movs	r3, #0
 80002c2:	733b      	strb	r3, [r7, #12]
 80002c4:	79fb      	ldrb	r3, [r7, #7]
 80002c6:	3301      	adds	r3, #1
 80002c8:	b2db      	uxtb	r3, r3
 80002ca:	737b      	strb	r3, [r7, #13]
 80002cc:	2300      	movs	r3, #0
 80002ce:	73bb      	strb	r3, [r7, #14]
 80002d0:	797b      	ldrb	r3, [r7, #5]
 80002d2:	3301      	adds	r3, #1
 80002d4:	b2db      	uxtb	r3, r3
 80002d6:	73fb      	strb	r3, [r7, #15]
 80002d8:	f107 030c 	add.w	r3, r7, #12
 80002dc:	2104      	movs	r1, #4
 80002de:	4618      	mov	r0, r3
 80002e0:	f7ff ff7a 	bl	80001d8 <ST7735_WriteData>
 80002e4:	202b      	movs	r0, #43	; 0x2b
 80002e6:	f7ff ff5d 	bl	80001a4 <ST7735_WriteCommand>
 80002ea:	79bb      	ldrb	r3, [r7, #6]
 80002ec:	331a      	adds	r3, #26
 80002ee:	b2db      	uxtb	r3, r3
 80002f0:	737b      	strb	r3, [r7, #13]
 80002f2:	793b      	ldrb	r3, [r7, #4]
 80002f4:	331a      	adds	r3, #26
 80002f6:	b2db      	uxtb	r3, r3
 80002f8:	73fb      	strb	r3, [r7, #15]
 80002fa:	f107 030c 	add.w	r3, r7, #12
 80002fe:	2104      	movs	r1, #4
 8000300:	4618      	mov	r0, r3
 8000302:	f7ff ff69 	bl	80001d8 <ST7735_WriteData>
 8000306:	202c      	movs	r0, #44	; 0x2c
 8000308:	f7ff ff4c 	bl	80001a4 <ST7735_WriteCommand>
 800030c:	bf00      	nop
 800030e:	3714      	adds	r7, #20
 8000310:	46bd      	mov	sp, r7
 8000312:	bd90      	pop	{r4, r7, pc}

08000314 <ST7735_Init>:
 8000314:	b580      	push	{r7, lr}
 8000316:	af00      	add	r7, sp, #0
 8000318:	f7ff ff18 	bl	800014c <ST7735_Select>
 800031c:	f7ff ff2e 	bl	800017c <ST7735_Reset>
 8000320:	4806      	ldr	r0, [pc, #24]	; (800033c <ST7735_Init+0x28>)
 8000322:	f7ff ff73 	bl	800020c <ST7735_ExecuteCommandList>
 8000326:	4806      	ldr	r0, [pc, #24]	; (8000340 <ST7735_Init+0x2c>)
 8000328:	f7ff ff70 	bl	800020c <ST7735_ExecuteCommandList>
 800032c:	4805      	ldr	r0, [pc, #20]	; (8000344 <ST7735_Init+0x30>)
 800032e:	f7ff ff6d 	bl	800020c <ST7735_ExecuteCommandList>
 8000332:	f7ff ff17 	bl	8000164 <ST7735_Unselect>
 8000336:	bf00      	nop
 8000338:	bd80      	pop	{r7, pc}
 800033a:	bf00      	nop
 800033c:	08003c34 	.word	0x08003c34
 8000340:	08003c70 	.word	0x08003c70
 8000344:	08003c80 	.word	0x08003c80

08000348 <ST7735_WriteChar>:
 8000348:	b082      	sub	sp, #8
 800034a:	b590      	push	{r4, r7, lr}
 800034c:	b089      	sub	sp, #36	; 0x24
 800034e:	af00      	add	r7, sp, #0
 8000350:	637b      	str	r3, [r7, #52]	; 0x34
 8000352:	4603      	mov	r3, r0
 8000354:	80fb      	strh	r3, [r7, #6]
 8000356:	460b      	mov	r3, r1
 8000358:	80bb      	strh	r3, [r7, #4]
 800035a:	4613      	mov	r3, r2
 800035c:	70fb      	strb	r3, [r7, #3]
 800035e:	88fb      	ldrh	r3, [r7, #6]
 8000360:	b2d8      	uxtb	r0, r3
 8000362:	88bb      	ldrh	r3, [r7, #4]
 8000364:	b2d9      	uxtb	r1, r3
 8000366:	88fb      	ldrh	r3, [r7, #6]
 8000368:	b2da      	uxtb	r2, r3
 800036a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800036e:	4413      	add	r3, r2
 8000370:	b2db      	uxtb	r3, r3
 8000372:	3b01      	subs	r3, #1
 8000374:	b2dc      	uxtb	r4, r3
 8000376:	88bb      	ldrh	r3, [r7, #4]
 8000378:	b2da      	uxtb	r2, r3
 800037a:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 800037e:	4413      	add	r3, r2
 8000380:	b2db      	uxtb	r3, r3
 8000382:	3b01      	subs	r3, #1
 8000384:	b2db      	uxtb	r3, r3
 8000386:	4622      	mov	r2, r4
 8000388:	f7ff ff88 	bl	800029c <ST7735_SetAddressWindow>
 800038c:	2300      	movs	r3, #0
 800038e:	61fb      	str	r3, [r7, #28]
 8000390:	e043      	b.n	800041a <ST7735_WriteChar+0xd2>
 8000392:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000394:	78fb      	ldrb	r3, [r7, #3]
 8000396:	3b20      	subs	r3, #32
 8000398:	f897 1035 	ldrb.w	r1, [r7, #53]	; 0x35
 800039c:	fb01 f303 	mul.w	r3, r1, r3
 80003a0:	4619      	mov	r1, r3
 80003a2:	69fb      	ldr	r3, [r7, #28]
 80003a4:	440b      	add	r3, r1
 80003a6:	005b      	lsls	r3, r3, #1
 80003a8:	4413      	add	r3, r2
 80003aa:	881b      	ldrh	r3, [r3, #0]
 80003ac:	617b      	str	r3, [r7, #20]
 80003ae:	2300      	movs	r3, #0
 80003b0:	61bb      	str	r3, [r7, #24]
 80003b2:	e029      	b.n	8000408 <ST7735_WriteChar+0xc0>
 80003b4:	697a      	ldr	r2, [r7, #20]
 80003b6:	69bb      	ldr	r3, [r7, #24]
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
 80003bc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d00e      	beq.n	80003e2 <ST7735_WriteChar+0x9a>
 80003c4:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 80003c6:	0a1b      	lsrs	r3, r3, #8
 80003c8:	b29b      	uxth	r3, r3
 80003ca:	b2db      	uxtb	r3, r3
 80003cc:	743b      	strb	r3, [r7, #16]
 80003ce:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 80003d0:	b2db      	uxtb	r3, r3
 80003d2:	747b      	strb	r3, [r7, #17]
 80003d4:	f107 0310 	add.w	r3, r7, #16
 80003d8:	2102      	movs	r1, #2
 80003da:	4618      	mov	r0, r3
 80003dc:	f7ff fefc 	bl	80001d8 <ST7735_WriteData>
 80003e0:	e00f      	b.n	8000402 <ST7735_WriteChar+0xba>
 80003e2:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80003e6:	0a1b      	lsrs	r3, r3, #8
 80003e8:	b29b      	uxth	r3, r3
 80003ea:	b2db      	uxtb	r3, r3
 80003ec:	733b      	strb	r3, [r7, #12]
 80003ee:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80003f2:	b2db      	uxtb	r3, r3
 80003f4:	737b      	strb	r3, [r7, #13]
 80003f6:	f107 030c 	add.w	r3, r7, #12
 80003fa:	2102      	movs	r1, #2
 80003fc:	4618      	mov	r0, r3
 80003fe:	f7ff feeb 	bl	80001d8 <ST7735_WriteData>
 8000402:	69bb      	ldr	r3, [r7, #24]
 8000404:	3301      	adds	r3, #1
 8000406:	61bb      	str	r3, [r7, #24]
 8000408:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800040c:	461a      	mov	r2, r3
 800040e:	69bb      	ldr	r3, [r7, #24]
 8000410:	4293      	cmp	r3, r2
 8000412:	d3cf      	bcc.n	80003b4 <ST7735_WriteChar+0x6c>
 8000414:	69fb      	ldr	r3, [r7, #28]
 8000416:	3301      	adds	r3, #1
 8000418:	61fb      	str	r3, [r7, #28]
 800041a:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 800041e:	461a      	mov	r2, r3
 8000420:	69fb      	ldr	r3, [r7, #28]
 8000422:	4293      	cmp	r3, r2
 8000424:	d3b5      	bcc.n	8000392 <ST7735_WriteChar+0x4a>
 8000426:	bf00      	nop
 8000428:	3724      	adds	r7, #36	; 0x24
 800042a:	46bd      	mov	sp, r7
 800042c:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 8000430:	b002      	add	sp, #8
 8000432:	4770      	bx	lr

08000434 <ST7735_WriteString>:
 8000434:	b082      	sub	sp, #8
 8000436:	b580      	push	{r7, lr}
 8000438:	b086      	sub	sp, #24
 800043a:	af04      	add	r7, sp, #16
 800043c:	603a      	str	r2, [r7, #0]
 800043e:	617b      	str	r3, [r7, #20]
 8000440:	4603      	mov	r3, r0
 8000442:	80fb      	strh	r3, [r7, #6]
 8000444:	460b      	mov	r3, r1
 8000446:	80bb      	strh	r3, [r7, #4]
 8000448:	f7ff fe80 	bl	800014c <ST7735_Select>
 800044c:	e02d      	b.n	80004aa <ST7735_WriteString+0x76>
 800044e:	88fb      	ldrh	r3, [r7, #6]
 8000450:	7d3a      	ldrb	r2, [r7, #20]
 8000452:	4413      	add	r3, r2
 8000454:	2b9f      	cmp	r3, #159	; 0x9f
 8000456:	dd13      	ble.n	8000480 <ST7735_WriteString+0x4c>
 8000458:	2300      	movs	r3, #0
 800045a:	80fb      	strh	r3, [r7, #6]
 800045c:	7d7b      	ldrb	r3, [r7, #21]
 800045e:	b29a      	uxth	r2, r3
 8000460:	88bb      	ldrh	r3, [r7, #4]
 8000462:	4413      	add	r3, r2
 8000464:	80bb      	strh	r3, [r7, #4]
 8000466:	88bb      	ldrh	r3, [r7, #4]
 8000468:	7d7a      	ldrb	r2, [r7, #21]
 800046a:	4413      	add	r3, r2
 800046c:	2b4f      	cmp	r3, #79	; 0x4f
 800046e:	dc21      	bgt.n	80004b4 <ST7735_WriteString+0x80>
 8000470:	683b      	ldr	r3, [r7, #0]
 8000472:	781b      	ldrb	r3, [r3, #0]
 8000474:	2b20      	cmp	r3, #32
 8000476:	d103      	bne.n	8000480 <ST7735_WriteString+0x4c>
 8000478:	683b      	ldr	r3, [r7, #0]
 800047a:	3301      	adds	r3, #1
 800047c:	603b      	str	r3, [r7, #0]
 800047e:	e014      	b.n	80004aa <ST7735_WriteString+0x76>
 8000480:	683b      	ldr	r3, [r7, #0]
 8000482:	781a      	ldrb	r2, [r3, #0]
 8000484:	88b9      	ldrh	r1, [r7, #4]
 8000486:	88f8      	ldrh	r0, [r7, #6]
 8000488:	8c3b      	ldrh	r3, [r7, #32]
 800048a:	9302      	str	r3, [sp, #8]
 800048c:	8bbb      	ldrh	r3, [r7, #28]
 800048e:	9301      	str	r3, [sp, #4]
 8000490:	69bb      	ldr	r3, [r7, #24]
 8000492:	9300      	str	r3, [sp, #0]
 8000494:	697b      	ldr	r3, [r7, #20]
 8000496:	f7ff ff57 	bl	8000348 <ST7735_WriteChar>
 800049a:	7d3b      	ldrb	r3, [r7, #20]
 800049c:	b29a      	uxth	r2, r3
 800049e:	88fb      	ldrh	r3, [r7, #6]
 80004a0:	4413      	add	r3, r2
 80004a2:	80fb      	strh	r3, [r7, #6]
 80004a4:	683b      	ldr	r3, [r7, #0]
 80004a6:	3301      	adds	r3, #1
 80004a8:	603b      	str	r3, [r7, #0]
 80004aa:	683b      	ldr	r3, [r7, #0]
 80004ac:	781b      	ldrb	r3, [r3, #0]
 80004ae:	2b00      	cmp	r3, #0
 80004b0:	d1cd      	bne.n	800044e <ST7735_WriteString+0x1a>
 80004b2:	e000      	b.n	80004b6 <ST7735_WriteString+0x82>
 80004b4:	bf00      	nop
 80004b6:	f7ff fe55 	bl	8000164 <ST7735_Unselect>
 80004ba:	bf00      	nop
 80004bc:	3708      	adds	r7, #8
 80004be:	46bd      	mov	sp, r7
 80004c0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80004c4:	b002      	add	sp, #8
 80004c6:	4770      	bx	lr

080004c8 <ST7735_FillRectangle>:
 80004c8:	b590      	push	{r4, r7, lr}
 80004ca:	b085      	sub	sp, #20
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	4604      	mov	r4, r0
 80004d0:	4608      	mov	r0, r1
 80004d2:	4611      	mov	r1, r2
 80004d4:	461a      	mov	r2, r3
 80004d6:	4623      	mov	r3, r4
 80004d8:	80fb      	strh	r3, [r7, #6]
 80004da:	4603      	mov	r3, r0
 80004dc:	80bb      	strh	r3, [r7, #4]
 80004de:	460b      	mov	r3, r1
 80004e0:	807b      	strh	r3, [r7, #2]
 80004e2:	4613      	mov	r3, r2
 80004e4:	803b      	strh	r3, [r7, #0]
 80004e6:	88fb      	ldrh	r3, [r7, #6]
 80004e8:	2b9f      	cmp	r3, #159	; 0x9f
 80004ea:	d859      	bhi.n	80005a0 <ST7735_FillRectangle+0xd8>
 80004ec:	88bb      	ldrh	r3, [r7, #4]
 80004ee:	2b4f      	cmp	r3, #79	; 0x4f
 80004f0:	d856      	bhi.n	80005a0 <ST7735_FillRectangle+0xd8>
 80004f2:	88fa      	ldrh	r2, [r7, #6]
 80004f4:	887b      	ldrh	r3, [r7, #2]
 80004f6:	4413      	add	r3, r2
 80004f8:	3b01      	subs	r3, #1
 80004fa:	2b9f      	cmp	r3, #159	; 0x9f
 80004fc:	dd03      	ble.n	8000506 <ST7735_FillRectangle+0x3e>
 80004fe:	88fb      	ldrh	r3, [r7, #6]
 8000500:	f1c3 03a0 	rsb	r3, r3, #160	; 0xa0
 8000504:	807b      	strh	r3, [r7, #2]
 8000506:	88ba      	ldrh	r2, [r7, #4]
 8000508:	883b      	ldrh	r3, [r7, #0]
 800050a:	4413      	add	r3, r2
 800050c:	3b01      	subs	r3, #1
 800050e:	2b4f      	cmp	r3, #79	; 0x4f
 8000510:	dd03      	ble.n	800051a <ST7735_FillRectangle+0x52>
 8000512:	88bb      	ldrh	r3, [r7, #4]
 8000514:	f1c3 0350 	rsb	r3, r3, #80	; 0x50
 8000518:	803b      	strh	r3, [r7, #0]
 800051a:	f7ff fe17 	bl	800014c <ST7735_Select>
 800051e:	88fb      	ldrh	r3, [r7, #6]
 8000520:	b2d8      	uxtb	r0, r3
 8000522:	88bb      	ldrh	r3, [r7, #4]
 8000524:	b2d9      	uxtb	r1, r3
 8000526:	88fb      	ldrh	r3, [r7, #6]
 8000528:	b2da      	uxtb	r2, r3
 800052a:	887b      	ldrh	r3, [r7, #2]
 800052c:	b2db      	uxtb	r3, r3
 800052e:	4413      	add	r3, r2
 8000530:	b2db      	uxtb	r3, r3
 8000532:	3b01      	subs	r3, #1
 8000534:	b2dc      	uxtb	r4, r3
 8000536:	88bb      	ldrh	r3, [r7, #4]
 8000538:	b2da      	uxtb	r2, r3
 800053a:	883b      	ldrh	r3, [r7, #0]
 800053c:	b2db      	uxtb	r3, r3
 800053e:	4413      	add	r3, r2
 8000540:	b2db      	uxtb	r3, r3
 8000542:	3b01      	subs	r3, #1
 8000544:	b2db      	uxtb	r3, r3
 8000546:	4622      	mov	r2, r4
 8000548:	f7ff fea8 	bl	800029c <ST7735_SetAddressWindow>
 800054c:	8c3b      	ldrh	r3, [r7, #32]
 800054e:	0a1b      	lsrs	r3, r3, #8
 8000550:	b29b      	uxth	r3, r3
 8000552:	b2db      	uxtb	r3, r3
 8000554:	733b      	strb	r3, [r7, #12]
 8000556:	8c3b      	ldrh	r3, [r7, #32]
 8000558:	b2db      	uxtb	r3, r3
 800055a:	737b      	strb	r3, [r7, #13]
 800055c:	2201      	movs	r2, #1
 800055e:	2101      	movs	r1, #1
 8000560:	4811      	ldr	r0, [pc, #68]	; (80005a8 <ST7735_FillRectangle+0xe0>)
 8000562:	f001 fcd8 	bl	8001f16 <HAL_GPIO_WritePin>
 8000566:	883b      	ldrh	r3, [r7, #0]
 8000568:	80bb      	strh	r3, [r7, #4]
 800056a:	e013      	b.n	8000594 <ST7735_FillRectangle+0xcc>
 800056c:	887b      	ldrh	r3, [r7, #2]
 800056e:	80fb      	strh	r3, [r7, #6]
 8000570:	e00a      	b.n	8000588 <ST7735_FillRectangle+0xc0>
 8000572:	f107 010c 	add.w	r1, r7, #12
 8000576:	f04f 33ff 	mov.w	r3, #4294967295
 800057a:	2202      	movs	r2, #2
 800057c:	480b      	ldr	r0, [pc, #44]	; (80005ac <ST7735_FillRectangle+0xe4>)
 800057e:	f002 f951 	bl	8002824 <HAL_SPI_Transmit>
 8000582:	88fb      	ldrh	r3, [r7, #6]
 8000584:	3b01      	subs	r3, #1
 8000586:	80fb      	strh	r3, [r7, #6]
 8000588:	88fb      	ldrh	r3, [r7, #6]
 800058a:	2b00      	cmp	r3, #0
 800058c:	d1f1      	bne.n	8000572 <ST7735_FillRectangle+0xaa>
 800058e:	88bb      	ldrh	r3, [r7, #4]
 8000590:	3b01      	subs	r3, #1
 8000592:	80bb      	strh	r3, [r7, #4]
 8000594:	88bb      	ldrh	r3, [r7, #4]
 8000596:	2b00      	cmp	r3, #0
 8000598:	d1e8      	bne.n	800056c <ST7735_FillRectangle+0xa4>
 800059a:	f7ff fde3 	bl	8000164 <ST7735_Unselect>
 800059e:	e000      	b.n	80005a2 <ST7735_FillRectangle+0xda>
 80005a0:	bf00      	nop
 80005a2:	3714      	adds	r7, #20
 80005a4:	46bd      	mov	sp, r7
 80005a6:	bd90      	pop	{r4, r7, pc}
 80005a8:	40010c00 	.word	0x40010c00
 80005ac:	20000148 	.word	0x20000148

080005b0 <ST7735_FillScreen>:
 80005b0:	b580      	push	{r7, lr}
 80005b2:	b084      	sub	sp, #16
 80005b4:	af02      	add	r7, sp, #8
 80005b6:	4603      	mov	r3, r0
 80005b8:	80fb      	strh	r3, [r7, #6]
 80005ba:	88fb      	ldrh	r3, [r7, #6]
 80005bc:	9300      	str	r3, [sp, #0]
 80005be:	2350      	movs	r3, #80	; 0x50
 80005c0:	22a0      	movs	r2, #160	; 0xa0
 80005c2:	2100      	movs	r1, #0
 80005c4:	2000      	movs	r0, #0
 80005c6:	f7ff ff7f 	bl	80004c8 <ST7735_FillRectangle>
 80005ca:	bf00      	nop
 80005cc:	3708      	adds	r7, #8
 80005ce:	46bd      	mov	sp, r7
 80005d0:	bd80      	pop	{r7, pc}

080005d2 <ST7735_DrawImage>:
 80005d2:	b590      	push	{r4, r7, lr}
 80005d4:	b083      	sub	sp, #12
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	4604      	mov	r4, r0
 80005da:	4608      	mov	r0, r1
 80005dc:	4611      	mov	r1, r2
 80005de:	461a      	mov	r2, r3
 80005e0:	4623      	mov	r3, r4
 80005e2:	80fb      	strh	r3, [r7, #6]
 80005e4:	4603      	mov	r3, r0
 80005e6:	80bb      	strh	r3, [r7, #4]
 80005e8:	460b      	mov	r3, r1
 80005ea:	807b      	strh	r3, [r7, #2]
 80005ec:	4613      	mov	r3, r2
 80005ee:	803b      	strh	r3, [r7, #0]
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	2b9f      	cmp	r3, #159	; 0x9f
 80005f4:	d833      	bhi.n	800065e <ST7735_DrawImage+0x8c>
 80005f6:	88bb      	ldrh	r3, [r7, #4]
 80005f8:	2b4f      	cmp	r3, #79	; 0x4f
 80005fa:	d830      	bhi.n	800065e <ST7735_DrawImage+0x8c>
 80005fc:	88fa      	ldrh	r2, [r7, #6]
 80005fe:	887b      	ldrh	r3, [r7, #2]
 8000600:	4413      	add	r3, r2
 8000602:	3b01      	subs	r3, #1
 8000604:	2b9f      	cmp	r3, #159	; 0x9f
 8000606:	dc2c      	bgt.n	8000662 <ST7735_DrawImage+0x90>
 8000608:	88ba      	ldrh	r2, [r7, #4]
 800060a:	883b      	ldrh	r3, [r7, #0]
 800060c:	4413      	add	r3, r2
 800060e:	3b01      	subs	r3, #1
 8000610:	2b4f      	cmp	r3, #79	; 0x4f
 8000612:	dc28      	bgt.n	8000666 <ST7735_DrawImage+0x94>
 8000614:	f7ff fd9a 	bl	800014c <ST7735_Select>
 8000618:	88fb      	ldrh	r3, [r7, #6]
 800061a:	b2d8      	uxtb	r0, r3
 800061c:	88bb      	ldrh	r3, [r7, #4]
 800061e:	b2d9      	uxtb	r1, r3
 8000620:	88fb      	ldrh	r3, [r7, #6]
 8000622:	b2da      	uxtb	r2, r3
 8000624:	887b      	ldrh	r3, [r7, #2]
 8000626:	b2db      	uxtb	r3, r3
 8000628:	4413      	add	r3, r2
 800062a:	b2db      	uxtb	r3, r3
 800062c:	3b01      	subs	r3, #1
 800062e:	b2dc      	uxtb	r4, r3
 8000630:	88bb      	ldrh	r3, [r7, #4]
 8000632:	b2da      	uxtb	r2, r3
 8000634:	883b      	ldrh	r3, [r7, #0]
 8000636:	b2db      	uxtb	r3, r3
 8000638:	4413      	add	r3, r2
 800063a:	b2db      	uxtb	r3, r3
 800063c:	3b01      	subs	r3, #1
 800063e:	b2db      	uxtb	r3, r3
 8000640:	4622      	mov	r2, r4
 8000642:	f7ff fe2b 	bl	800029c <ST7735_SetAddressWindow>
 8000646:	887b      	ldrh	r3, [r7, #2]
 8000648:	883a      	ldrh	r2, [r7, #0]
 800064a:	fb02 f303 	mul.w	r3, r2, r3
 800064e:	005b      	lsls	r3, r3, #1
 8000650:	4619      	mov	r1, r3
 8000652:	69b8      	ldr	r0, [r7, #24]
 8000654:	f7ff fdc0 	bl	80001d8 <ST7735_WriteData>
 8000658:	f7ff fd84 	bl	8000164 <ST7735_Unselect>
 800065c:	e004      	b.n	8000668 <ST7735_DrawImage+0x96>
 800065e:	bf00      	nop
 8000660:	e002      	b.n	8000668 <ST7735_DrawImage+0x96>
 8000662:	bf00      	nop
 8000664:	e000      	b.n	8000668 <ST7735_DrawImage+0x96>
 8000666:	bf00      	nop
 8000668:	370c      	adds	r7, #12
 800066a:	46bd      	mov	sp, r7
 800066c:	bd90      	pop	{r4, r7, pc}
	...

08000670 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	b086      	sub	sp, #24
 8000674:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000676:	f001 f975 	bl	8001964 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800067a:	f000 f857 	bl	800072c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800067e:	f000 f8cf 	bl	8000820 <MX_GPIO_Init>
  MX_SPI1_Init();
 8000682:	f000 f895 	bl	80007b0 <MX_SPI1_Init>
  /* USER CODE BEGIN 2 */
  ST7735_Init();
 8000686:	f7ff fe45 	bl	8000314 <ST7735_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  IniciarJogo();
 800068a:	f000 f929 	bl	80008e0 <IniciarJogo>
	  NavegarCursor(8);
 800068e:	2008      	movs	r0, #8
 8000690:	f000 fc2a 	bl	8000ee8 <NavegarCursor>
	  while(JogoAndamento == 1)
 8000694:	e03c      	b.n	8000710 <main+0xa0>
	  {
		  int nav = 0;
 8000696:	2300      	movs	r3, #0
 8000698:	617b      	str	r3, [r7, #20]
		  int cima = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_12);
 800069a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800069e:	4821      	ldr	r0, [pc, #132]	; (8000724 <main+0xb4>)
 80006a0:	f001 fc22 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80006a4:	4603      	mov	r3, r0
 80006a6:	613b      	str	r3, [r7, #16]
		  int direita = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11);
 80006a8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80006ac:	481d      	ldr	r0, [pc, #116]	; (8000724 <main+0xb4>)
 80006ae:	f001 fc1b 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80006b2:	4603      	mov	r3, r0
 80006b4:	60fb      	str	r3, [r7, #12]
		  int esquerda = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9);
 80006b6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80006ba:	481a      	ldr	r0, [pc, #104]	; (8000724 <main+0xb4>)
 80006bc:	f001 fc14 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80006c0:	4603      	mov	r3, r0
 80006c2:	60bb      	str	r3, [r7, #8]
		  int btnSelec = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10);
 80006c4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006c8:	4816      	ldr	r0, [pc, #88]	; (8000724 <main+0xb4>)
 80006ca:	f001 fc0d 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80006ce:	4603      	mov	r3, r0
 80006d0:	607b      	str	r3, [r7, #4]
		  if(esquerda == 0)
 80006d2:	68bb      	ldr	r3, [r7, #8]
 80006d4:	2b00      	cmp	r3, #0
 80006d6:	d104      	bne.n	80006e2 <main+0x72>
		  {
			  nav = 1;
 80006d8:	2301      	movs	r3, #1
 80006da:	617b      	str	r3, [r7, #20]
			  NavegarCursor(nav);
 80006dc:	6978      	ldr	r0, [r7, #20]
 80006de:	f000 fc03 	bl	8000ee8 <NavegarCursor>
		  }
		  if(cima == 0)
 80006e2:	693b      	ldr	r3, [r7, #16]
 80006e4:	2b00      	cmp	r3, #0
 80006e6:	d104      	bne.n	80006f2 <main+0x82>
		  {
			  nav = 2;
 80006e8:	2302      	movs	r3, #2
 80006ea:	617b      	str	r3, [r7, #20]
			  NavegarCursor(nav);
 80006ec:	6978      	ldr	r0, [r7, #20]
 80006ee:	f000 fbfb 	bl	8000ee8 <NavegarCursor>
		  }
		  if(direita == 0)
 80006f2:	68fb      	ldr	r3, [r7, #12]
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d104      	bne.n	8000702 <main+0x92>
		  {
			  nav = 3;
 80006f8:	2303      	movs	r3, #3
 80006fa:	617b      	str	r3, [r7, #20]
			  NavegarCursor(nav);
 80006fc:	6978      	ldr	r0, [r7, #20]
 80006fe:	f000 fbf3 	bl	8000ee8 <NavegarCursor>
		  }
		  if(btnSelec == 0)
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	2b00      	cmp	r3, #0
 8000706:	d103      	bne.n	8000710 <main+0xa0>
		  {
			  //HAL_Delay(200);
			  CompararCarta();
 8000708:	f000 fcf6 	bl	80010f8 <CompararCarta>
			  VerificarFimDeJogo();
 800070c:	f000 fdf0 	bl	80012f0 <VerificarFimDeJogo>
	  while(JogoAndamento == 1)
 8000710:	4b05      	ldr	r3, [pc, #20]	; (8000728 <main+0xb8>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	2b01      	cmp	r3, #1
 8000716:	d0be      	beq.n	8000696 <main+0x26>
		  }
	  }
	  AtualizarRecorde();
 8000718:	f000 fe38 	bl	800138c <AtualizarRecorde>
	  ExibirFimDeJogo();
 800071c:	f000 fe54 	bl	80013c8 <ExibirFimDeJogo>
	  IniciarJogo();
 8000720:	e7b3      	b.n	800068a <main+0x1a>
 8000722:	bf00      	nop
 8000724:	40010800 	.word	0x40010800
 8000728:	2000012c 	.word	0x2000012c

0800072c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800072c:	b580      	push	{r7, lr}
 800072e:	b090      	sub	sp, #64	; 0x40
 8000730:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000732:	f107 0318 	add.w	r3, r7, #24
 8000736:	2228      	movs	r2, #40	; 0x28
 8000738:	2100      	movs	r1, #0
 800073a:	4618      	mov	r0, r3
 800073c:	f002 faa0 	bl	8002c80 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000740:	1d3b      	adds	r3, r7, #4
 8000742:	2200      	movs	r2, #0
 8000744:	601a      	str	r2, [r3, #0]
 8000746:	605a      	str	r2, [r3, #4]
 8000748:	609a      	str	r2, [r3, #8]
 800074a:	60da      	str	r2, [r3, #12]
 800074c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800074e:	2302      	movs	r3, #2
 8000750:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000752:	2301      	movs	r3, #1
 8000754:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000756:	2310      	movs	r3, #16
 8000758:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800075a:	2302      	movs	r3, #2
 800075c:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800075e:	2300      	movs	r3, #0
 8000760:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000762:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000766:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000768:	f107 0318 	add.w	r3, r7, #24
 800076c:	4618      	mov	r0, r3
 800076e:	f001 fbeb 	bl	8001f48 <HAL_RCC_OscConfig>
 8000772:	4603      	mov	r3, r0
 8000774:	2b00      	cmp	r3, #0
 8000776:	d001      	beq.n	800077c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000778:	f000 fff6 	bl	8001768 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800077c:	230f      	movs	r3, #15
 800077e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000780:	2302      	movs	r3, #2
 8000782:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000784:	2300      	movs	r3, #0
 8000786:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000788:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800078c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800078e:	2300      	movs	r3, #0
 8000790:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000792:	1d3b      	adds	r3, r7, #4
 8000794:	2102      	movs	r1, #2
 8000796:	4618      	mov	r0, r3
 8000798:	f001 fe56 	bl	8002448 <HAL_RCC_ClockConfig>
 800079c:	4603      	mov	r3, r0
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d001      	beq.n	80007a6 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 80007a2:	f000 ffe1 	bl	8001768 <Error_Handler>
  }
}
 80007a6:	bf00      	nop
 80007a8:	3740      	adds	r7, #64	; 0x40
 80007aa:	46bd      	mov	sp, r7
 80007ac:	bd80      	pop	{r7, pc}
	...

080007b0 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80007b0:	b580      	push	{r7, lr}
 80007b2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80007b4:	4b18      	ldr	r3, [pc, #96]	; (8000818 <MX_SPI1_Init+0x68>)
 80007b6:	4a19      	ldr	r2, [pc, #100]	; (800081c <MX_SPI1_Init+0x6c>)
 80007b8:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80007ba:	4b17      	ldr	r3, [pc, #92]	; (8000818 <MX_SPI1_Init+0x68>)
 80007bc:	f44f 7282 	mov.w	r2, #260	; 0x104
 80007c0:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 80007c2:	4b15      	ldr	r3, [pc, #84]	; (8000818 <MX_SPI1_Init+0x68>)
 80007c4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80007c8:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80007ca:	4b13      	ldr	r3, [pc, #76]	; (8000818 <MX_SPI1_Init+0x68>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80007d0:	4b11      	ldr	r3, [pc, #68]	; (8000818 <MX_SPI1_Init+0x68>)
 80007d2:	2200      	movs	r2, #0
 80007d4:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80007d6:	4b10      	ldr	r3, [pc, #64]	; (8000818 <MX_SPI1_Init+0x68>)
 80007d8:	2200      	movs	r2, #0
 80007da:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80007dc:	4b0e      	ldr	r3, [pc, #56]	; (8000818 <MX_SPI1_Init+0x68>)
 80007de:	f44f 7200 	mov.w	r2, #512	; 0x200
 80007e2:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 80007e4:	4b0c      	ldr	r3, [pc, #48]	; (8000818 <MX_SPI1_Init+0x68>)
 80007e6:	2220      	movs	r2, #32
 80007e8:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80007ea:	4b0b      	ldr	r3, [pc, #44]	; (8000818 <MX_SPI1_Init+0x68>)
 80007ec:	2200      	movs	r2, #0
 80007ee:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80007f0:	4b09      	ldr	r3, [pc, #36]	; (8000818 <MX_SPI1_Init+0x68>)
 80007f2:	2200      	movs	r2, #0
 80007f4:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80007f6:	4b08      	ldr	r3, [pc, #32]	; (8000818 <MX_SPI1_Init+0x68>)
 80007f8:	2200      	movs	r2, #0
 80007fa:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80007fc:	4b06      	ldr	r3, [pc, #24]	; (8000818 <MX_SPI1_Init+0x68>)
 80007fe:	220a      	movs	r2, #10
 8000800:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000802:	4805      	ldr	r0, [pc, #20]	; (8000818 <MX_SPI1_Init+0x68>)
 8000804:	f001 ff8a 	bl	800271c <HAL_SPI_Init>
 8000808:	4603      	mov	r3, r0
 800080a:	2b00      	cmp	r3, #0
 800080c:	d001      	beq.n	8000812 <MX_SPI1_Init+0x62>
  {
    Error_Handler();
 800080e:	f000 ffab 	bl	8001768 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000812:	bf00      	nop
 8000814:	bd80      	pop	{r7, pc}
 8000816:	bf00      	nop
 8000818:	20000148 	.word	0x20000148
 800081c:	40013000 	.word	0x40013000

08000820 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000820:	b580      	push	{r7, lr}
 8000822:	b086      	sub	sp, #24
 8000824:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000826:	f107 0308 	add.w	r3, r7, #8
 800082a:	2200      	movs	r2, #0
 800082c:	601a      	str	r2, [r3, #0]
 800082e:	605a      	str	r2, [r3, #4]
 8000830:	609a      	str	r2, [r3, #8]
 8000832:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000834:	4b27      	ldr	r3, [pc, #156]	; (80008d4 <MX_GPIO_Init+0xb4>)
 8000836:	699b      	ldr	r3, [r3, #24]
 8000838:	4a26      	ldr	r2, [pc, #152]	; (80008d4 <MX_GPIO_Init+0xb4>)
 800083a:	f043 0304 	orr.w	r3, r3, #4
 800083e:	6193      	str	r3, [r2, #24]
 8000840:	4b24      	ldr	r3, [pc, #144]	; (80008d4 <MX_GPIO_Init+0xb4>)
 8000842:	699b      	ldr	r3, [r3, #24]
 8000844:	f003 0304 	and.w	r3, r3, #4
 8000848:	607b      	str	r3, [r7, #4]
 800084a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800084c:	4b21      	ldr	r3, [pc, #132]	; (80008d4 <MX_GPIO_Init+0xb4>)
 800084e:	699b      	ldr	r3, [r3, #24]
 8000850:	4a20      	ldr	r2, [pc, #128]	; (80008d4 <MX_GPIO_Init+0xb4>)
 8000852:	f043 0308 	orr.w	r3, r3, #8
 8000856:	6193      	str	r3, [r2, #24]
 8000858:	4b1e      	ldr	r3, [pc, #120]	; (80008d4 <MX_GPIO_Init+0xb4>)
 800085a:	699b      	ldr	r3, [r3, #24]
 800085c:	f003 0308 	and.w	r3, r3, #8
 8000860:	603b      	str	r3, [r7, #0]
 8000862:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ST7735_CS_GPIO_Port, ST7735_CS_Pin, GPIO_PIN_RESET);
 8000864:	2200      	movs	r2, #0
 8000866:	2110      	movs	r1, #16
 8000868:	481b      	ldr	r0, [pc, #108]	; (80008d8 <MX_GPIO_Init+0xb8>)
 800086a:	f001 fb54 	bl	8001f16 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ST7735_DC_Pin|ST7735_RES_Pin|GPIO_PIN_3|GPIO_PIN_4
 800086e:	2200      	movs	r2, #0
 8000870:	217b      	movs	r1, #123	; 0x7b
 8000872:	481a      	ldr	r0, [pc, #104]	; (80008dc <MX_GPIO_Init+0xbc>)
 8000874:	f001 fb4f 	bl	8001f16 <HAL_GPIO_WritePin>
                          |GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);

  /*Configure GPIO pin : ST7735_CS_Pin */
  GPIO_InitStruct.Pin = ST7735_CS_Pin;
 8000878:	2310      	movs	r3, #16
 800087a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800087c:	2301      	movs	r3, #1
 800087e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000880:	2300      	movs	r3, #0
 8000882:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000884:	2302      	movs	r3, #2
 8000886:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(ST7735_CS_GPIO_Port, &GPIO_InitStruct);
 8000888:	f107 0308 	add.w	r3, r7, #8
 800088c:	4619      	mov	r1, r3
 800088e:	4812      	ldr	r0, [pc, #72]	; (80008d8 <MX_GPIO_Init+0xb8>)
 8000890:	f001 f9d0 	bl	8001c34 <HAL_GPIO_Init>

  /*Configure GPIO pins : ST7735_DC_Pin ST7735_RES_Pin PB3 PB4
                           PB5 PB6 */
  GPIO_InitStruct.Pin = ST7735_DC_Pin|ST7735_RES_Pin|GPIO_PIN_3|GPIO_PIN_4
 8000894:	237b      	movs	r3, #123	; 0x7b
 8000896:	60bb      	str	r3, [r7, #8]
                          |GPIO_PIN_5|GPIO_PIN_6;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000898:	2301      	movs	r3, #1
 800089a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800089c:	2300      	movs	r3, #0
 800089e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80008a0:	2302      	movs	r3, #2
 80008a2:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80008a4:	f107 0308 	add.w	r3, r7, #8
 80008a8:	4619      	mov	r1, r3
 80008aa:	480c      	ldr	r0, [pc, #48]	; (80008dc <MX_GPIO_Init+0xbc>)
 80008ac:	f001 f9c2 	bl	8001c34 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA9 PA10 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 80008b0:	f44f 53f0 	mov.w	r3, #7680	; 0x1e00
 80008b4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80008b6:	2300      	movs	r3, #0
 80008b8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80008ba:	2301      	movs	r3, #1
 80008bc:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008be:	f107 0308 	add.w	r3, r7, #8
 80008c2:	4619      	mov	r1, r3
 80008c4:	4804      	ldr	r0, [pc, #16]	; (80008d8 <MX_GPIO_Init+0xb8>)
 80008c6:	f001 f9b5 	bl	8001c34 <HAL_GPIO_Init>

}
 80008ca:	bf00      	nop
 80008cc:	3718      	adds	r7, #24
 80008ce:	46bd      	mov	sp, r7
 80008d0:	bd80      	pop	{r7, pc}
 80008d2:	bf00      	nop
 80008d4:	40021000 	.word	0x40021000
 80008d8:	40010800 	.word	0x40010800
 80008dc:	40010c00 	.word	0x40010c00

080008e0 <IniciarJogo>:

/* USER CODE BEGIN 4 */

void IniciarJogo(){
 80008e0:	b580      	push	{r7, lr}
 80008e2:	b08a      	sub	sp, #40	; 0x28
 80008e4:	af04      	add	r7, sp, #16
	int sair = 0;
 80008e6:	2300      	movs	r3, #0
 80008e8:	617b      	str	r3, [r7, #20]
	QuantidadeJogadores = 0;
 80008ea:	4b8a      	ldr	r3, [pc, #552]	; (8000b14 <IniciarJogo+0x234>)
 80008ec:	2200      	movs	r2, #0
 80008ee:	601a      	str	r2, [r3, #0]
	ST7735_FillScreen(BLACK);
 80008f0:	2000      	movs	r0, #0
 80008f2:	f7ff fe5d 	bl	80005b0 <ST7735_FillScreen>
	ST7735_WriteString(39, 0, "Escolha", Font_11x18, WHITE, BLACK);
 80008f6:	4b88      	ldr	r3, [pc, #544]	; (8000b18 <IniciarJogo+0x238>)
 80008f8:	2200      	movs	r2, #0
 80008fa:	9202      	str	r2, [sp, #8]
 80008fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000900:	9201      	str	r2, [sp, #4]
 8000902:	685a      	ldr	r2, [r3, #4]
 8000904:	9200      	str	r2, [sp, #0]
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	4a84      	ldr	r2, [pc, #528]	; (8000b1c <IniciarJogo+0x23c>)
 800090a:	2100      	movs	r1, #0
 800090c:	2027      	movs	r0, #39	; 0x27
 800090e:	f7ff fd91 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(43, 20, "1P", Font_11x18, WHITE, BLACK);
 8000912:	4b81      	ldr	r3, [pc, #516]	; (8000b18 <IniciarJogo+0x238>)
 8000914:	2200      	movs	r2, #0
 8000916:	9202      	str	r2, [sp, #8]
 8000918:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800091c:	9201      	str	r2, [sp, #4]
 800091e:	685a      	ldr	r2, [r3, #4]
 8000920:	9200      	str	r2, [sp, #0]
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	4a7e      	ldr	r2, [pc, #504]	; (8000b20 <IniciarJogo+0x240>)
 8000926:	2114      	movs	r1, #20
 8000928:	202b      	movs	r0, #43	; 0x2b
 800092a:	f7ff fd83 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(95, 20, "2P", Font_11x18, WHITE, BLACK);
 800092e:	4b7a      	ldr	r3, [pc, #488]	; (8000b18 <IniciarJogo+0x238>)
 8000930:	2200      	movs	r2, #0
 8000932:	9202      	str	r2, [sp, #8]
 8000934:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000938:	9201      	str	r2, [sp, #4]
 800093a:	685a      	ldr	r2, [r3, #4]
 800093c:	9200      	str	r2, [sp, #0]
 800093e:	681b      	ldr	r3, [r3, #0]
 8000940:	4a78      	ldr	r2, [pc, #480]	; (8000b24 <IniciarJogo+0x244>)
 8000942:	2114      	movs	r1, #20
 8000944:	205f      	movs	r0, #95	; 0x5f
 8000946:	f7ff fd75 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(0, 50, "Recorde:", Font_11x18, WHITE, BLACK);
 800094a:	4b73      	ldr	r3, [pc, #460]	; (8000b18 <IniciarJogo+0x238>)
 800094c:	2200      	movs	r2, #0
 800094e:	9202      	str	r2, [sp, #8]
 8000950:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000954:	9201      	str	r2, [sp, #4]
 8000956:	685a      	ldr	r2, [r3, #4]
 8000958:	9200      	str	r2, [sp, #0]
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	4a72      	ldr	r2, [pc, #456]	; (8000b28 <IniciarJogo+0x248>)
 800095e:	2132      	movs	r1, #50	; 0x32
 8000960:	2000      	movs	r0, #0
 8000962:	f7ff fd67 	bl	8000434 <ST7735_WriteString>
	itoa(TentativasRecorde, po, 10);
 8000966:	4b71      	ldr	r3, [pc, #452]	; (8000b2c <IniciarJogo+0x24c>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	220a      	movs	r2, #10
 800096c:	4970      	ldr	r1, [pc, #448]	; (8000b30 <IniciarJogo+0x250>)
 800096e:	4618      	mov	r0, r3
 8000970:	f002 f97c 	bl	8002c6c <itoa>
	ST7735_WriteString(98, 50, po, Font_11x18, WHITE, BLACK);
 8000974:	4b68      	ldr	r3, [pc, #416]	; (8000b18 <IniciarJogo+0x238>)
 8000976:	2200      	movs	r2, #0
 8000978:	9202      	str	r2, [sp, #8]
 800097a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800097e:	9201      	str	r2, [sp, #4]
 8000980:	685a      	ldr	r2, [r3, #4]
 8000982:	9200      	str	r2, [sp, #0]
 8000984:	681b      	ldr	r3, [r3, #0]
 8000986:	4a6a      	ldr	r2, [pc, #424]	; (8000b30 <IniciarJogo+0x250>)
 8000988:	2132      	movs	r1, #50	; 0x32
 800098a:	2062      	movs	r0, #98	; 0x62
 800098c:	f7ff fd52 	bl	8000434 <ST7735_WriteString>
	int escolha = 1;
 8000990:	2301      	movs	r3, #1
 8000992:	613b      	str	r3, [r7, #16]
	while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10)== 1)
 8000994:	e04b      	b.n	8000a2e <IniciarJogo+0x14e>
	{
		int esquerdaMenu = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9);
 8000996:	f44f 7100 	mov.w	r1, #512	; 0x200
 800099a:	4866      	ldr	r0, [pc, #408]	; (8000b34 <IniciarJogo+0x254>)
 800099c:	f001 faa4 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80009a0:	4603      	mov	r3, r0
 80009a2:	607b      	str	r3, [r7, #4]
		int direitaMenu = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11);
 80009a4:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80009a8:	4862      	ldr	r0, [pc, #392]	; (8000b34 <IniciarJogo+0x254>)
 80009aa:	f001 fa9d 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80009ae:	4603      	mov	r3, r0
 80009b0:	603b      	str	r3, [r7, #0]
		if(esquerdaMenu == 0)
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	2b00      	cmp	r3, #0
 80009b6:	d102      	bne.n	80009be <IniciarJogo+0xde>
		{
			escolha--;
 80009b8:	693b      	ldr	r3, [r7, #16]
 80009ba:	3b01      	subs	r3, #1
 80009bc:	613b      	str	r3, [r7, #16]
		}
		if(direitaMenu == 0)
 80009be:	683b      	ldr	r3, [r7, #0]
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d102      	bne.n	80009ca <IniciarJogo+0xea>
		{
			escolha++;
 80009c4:	693b      	ldr	r3, [r7, #16]
 80009c6:	3301      	adds	r3, #1
 80009c8:	613b      	str	r3, [r7, #16]
		}
		if(escolha == 1)
 80009ca:	693b      	ldr	r3, [r7, #16]
 80009cc:	2b01      	cmp	r3, #1
 80009ce:	d111      	bne.n	80009f4 <IniciarJogo+0x114>
		{
			ST7735_FillRectangle(95, 40, 22, 3, BLACK);
 80009d0:	2300      	movs	r3, #0
 80009d2:	9300      	str	r3, [sp, #0]
 80009d4:	2303      	movs	r3, #3
 80009d6:	2216      	movs	r2, #22
 80009d8:	2128      	movs	r1, #40	; 0x28
 80009da:	205f      	movs	r0, #95	; 0x5f
 80009dc:	f7ff fd74 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(43, 40, 22, 3, MAGENTA);
 80009e0:	f64f 031f 	movw	r3, #63519	; 0xf81f
 80009e4:	9300      	str	r3, [sp, #0]
 80009e6:	2303      	movs	r3, #3
 80009e8:	2216      	movs	r2, #22
 80009ea:	2128      	movs	r1, #40	; 0x28
 80009ec:	202b      	movs	r0, #43	; 0x2b
 80009ee:	f7ff fd6b 	bl	80004c8 <ST7735_FillRectangle>
 80009f2:	e01c      	b.n	8000a2e <IniciarJogo+0x14e>
		}
		else if(escolha == 2)
 80009f4:	693b      	ldr	r3, [r7, #16]
 80009f6:	2b02      	cmp	r3, #2
 80009f8:	d111      	bne.n	8000a1e <IniciarJogo+0x13e>
		{
			ST7735_FillRectangle(43, 40, 22, 3, BLACK);
 80009fa:	2300      	movs	r3, #0
 80009fc:	9300      	str	r3, [sp, #0]
 80009fe:	2303      	movs	r3, #3
 8000a00:	2216      	movs	r2, #22
 8000a02:	2128      	movs	r1, #40	; 0x28
 8000a04:	202b      	movs	r0, #43	; 0x2b
 8000a06:	f7ff fd5f 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(95, 40, 22, 3, MAGENTA);
 8000a0a:	f64f 031f 	movw	r3, #63519	; 0xf81f
 8000a0e:	9300      	str	r3, [sp, #0]
 8000a10:	2303      	movs	r3, #3
 8000a12:	2216      	movs	r2, #22
 8000a14:	2128      	movs	r1, #40	; 0x28
 8000a16:	205f      	movs	r0, #95	; 0x5f
 8000a18:	f7ff fd56 	bl	80004c8 <ST7735_FillRectangle>
 8000a1c:	e007      	b.n	8000a2e <IniciarJogo+0x14e>
		}
		else if(escolha > 2)
 8000a1e:	693b      	ldr	r3, [r7, #16]
 8000a20:	2b02      	cmp	r3, #2
 8000a22:	dd02      	ble.n	8000a2a <IniciarJogo+0x14a>
		{
			escolha = 2;
 8000a24:	2302      	movs	r3, #2
 8000a26:	613b      	str	r3, [r7, #16]
 8000a28:	e001      	b.n	8000a2e <IniciarJogo+0x14e>
		}
		else
		{
			escolha = 1;
 8000a2a:	2301      	movs	r3, #1
 8000a2c:	613b      	str	r3, [r7, #16]
	while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10)== 1)
 8000a2e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000a32:	4840      	ldr	r0, [pc, #256]	; (8000b34 <IniciarJogo+0x254>)
 8000a34:	f001 fa58 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b01      	cmp	r3, #1
 8000a3c:	d0ab      	beq.n	8000996 <IniciarJogo+0xb6>
		}
	}

	QuantidadeJogadores = escolha;
 8000a3e:	4a35      	ldr	r2, [pc, #212]	; (8000b14 <IniciarJogo+0x234>)
 8000a40:	693b      	ldr	r3, [r7, #16]
 8000a42:	6013      	str	r3, [r2, #0]
	HAL_Delay(1000);
 8000a44:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a48:	f000 ffee 	bl	8001a28 <HAL_Delay>
	TamanhoMatriz();
 8000a4c:	f000 f88a 	bl	8000b64 <TamanhoMatriz>

	GerarParesAleatorios();
 8000a50:	f000 f9f4 	bl	8000e3c <GerarParesAleatorios>

	while(sair==0){
 8000a54:	e045      	b.n	8000ae2 <IniciarJogo+0x202>
		ST7735_FillScreen(BLACK);
 8000a56:	2000      	movs	r0, #0
 8000a58:	f7ff fdaa 	bl	80005b0 <ST7735_FillScreen>
		MostrarCartas();
 8000a5c:	f000 fdf8 	bl	8001650 <MostrarCartas>
		HAL_Delay(1000);
 8000a60:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a64:	f000 ffe0 	bl	8001a28 <HAL_Delay>
		for(int j=0;j<ColunaMatriz;j++)
 8000a68:	2300      	movs	r3, #0
 8000a6a:	60fb      	str	r3, [r7, #12]
 8000a6c:	e032      	b.n	8000ad4 <IniciarJogo+0x1f4>
		{
			for(int i = 0; i < LinhaMatriz; i++)
 8000a6e:	2300      	movs	r3, #0
 8000a70:	60bb      	str	r3, [r7, #8]
 8000a72:	e027      	b.n	8000ac4 <IniciarJogo+0x1e4>
			{
				ST7735_DrawImage((PaddingX + j*(PaddingX+15)), (i*(15+PaddingY))+PaddingY, 15, 15, Carta);
 8000a74:	4b30      	ldr	r3, [pc, #192]	; (8000b38 <IniciarJogo+0x258>)
 8000a76:	681b      	ldr	r3, [r3, #0]
 8000a78:	330f      	adds	r3, #15
 8000a7a:	b29b      	uxth	r3, r3
 8000a7c:	68fa      	ldr	r2, [r7, #12]
 8000a7e:	b292      	uxth	r2, r2
 8000a80:	fb02 f303 	mul.w	r3, r2, r3
 8000a84:	b29a      	uxth	r2, r3
 8000a86:	4b2c      	ldr	r3, [pc, #176]	; (8000b38 <IniciarJogo+0x258>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	b29b      	uxth	r3, r3
 8000a8c:	4413      	add	r3, r2
 8000a8e:	b298      	uxth	r0, r3
 8000a90:	4b2a      	ldr	r3, [pc, #168]	; (8000b3c <IniciarJogo+0x25c>)
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	330f      	adds	r3, #15
 8000a96:	b29b      	uxth	r3, r3
 8000a98:	68ba      	ldr	r2, [r7, #8]
 8000a9a:	b292      	uxth	r2, r2
 8000a9c:	fb02 f303 	mul.w	r3, r2, r3
 8000aa0:	b29a      	uxth	r2, r3
 8000aa2:	4b26      	ldr	r3, [pc, #152]	; (8000b3c <IniciarJogo+0x25c>)
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	b29b      	uxth	r3, r3
 8000aa8:	4413      	add	r3, r2
 8000aaa:	b299      	uxth	r1, r3
 8000aac:	4b24      	ldr	r3, [pc, #144]	; (8000b40 <IniciarJogo+0x260>)
 8000aae:	9300      	str	r3, [sp, #0]
 8000ab0:	230f      	movs	r3, #15
 8000ab2:	220f      	movs	r2, #15
 8000ab4:	f7ff fd8d 	bl	80005d2 <ST7735_DrawImage>
				HAL_Delay(200);
 8000ab8:	20c8      	movs	r0, #200	; 0xc8
 8000aba:	f000 ffb5 	bl	8001a28 <HAL_Delay>
			for(int i = 0; i < LinhaMatriz; i++)
 8000abe:	68bb      	ldr	r3, [r7, #8]
 8000ac0:	3301      	adds	r3, #1
 8000ac2:	60bb      	str	r3, [r7, #8]
 8000ac4:	4b1f      	ldr	r3, [pc, #124]	; (8000b44 <IniciarJogo+0x264>)
 8000ac6:	681b      	ldr	r3, [r3, #0]
 8000ac8:	68ba      	ldr	r2, [r7, #8]
 8000aca:	429a      	cmp	r2, r3
 8000acc:	dbd2      	blt.n	8000a74 <IniciarJogo+0x194>
		for(int j=0;j<ColunaMatriz;j++)
 8000ace:	68fb      	ldr	r3, [r7, #12]
 8000ad0:	3301      	adds	r3, #1
 8000ad2:	60fb      	str	r3, [r7, #12]
 8000ad4:	4b1c      	ldr	r3, [pc, #112]	; (8000b48 <IniciarJogo+0x268>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	68fa      	ldr	r2, [r7, #12]
 8000ada:	429a      	cmp	r2, r3
 8000adc:	dbc7      	blt.n	8000a6e <IniciarJogo+0x18e>
			}
		}
		sair = 1;
 8000ade:	2301      	movs	r3, #1
 8000ae0:	617b      	str	r3, [r7, #20]
	while(sair==0){
 8000ae2:	697b      	ldr	r3, [r7, #20]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	d0b6      	beq.n	8000a56 <IniciarJogo+0x176>
	}
	JogoAndamento = 1;
 8000ae8:	4b18      	ldr	r3, [pc, #96]	; (8000b4c <IniciarJogo+0x26c>)
 8000aea:	2201      	movs	r2, #1
 8000aec:	601a      	str	r2, [r3, #0]
	PontosJogador1 = 0;
 8000aee:	4b18      	ldr	r3, [pc, #96]	; (8000b50 <IniciarJogo+0x270>)
 8000af0:	2200      	movs	r2, #0
 8000af2:	601a      	str	r2, [r3, #0]
	PontosJogador2 = 0;
 8000af4:	4b17      	ldr	r3, [pc, #92]	; (8000b54 <IniciarJogo+0x274>)
 8000af6:	2200      	movs	r2, #0
 8000af8:	601a      	str	r2, [r3, #0]
	tentativas = 0;
 8000afa:	4b17      	ldr	r3, [pc, #92]	; (8000b58 <IniciarJogo+0x278>)
 8000afc:	2200      	movs	r2, #0
 8000afe:	601a      	str	r2, [r3, #0]
	linha = 0;
 8000b00:	4b16      	ldr	r3, [pc, #88]	; (8000b5c <IniciarJogo+0x27c>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	601a      	str	r2, [r3, #0]
	coluna = 0;
 8000b06:	4b16      	ldr	r3, [pc, #88]	; (8000b60 <IniciarJogo+0x280>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	601a      	str	r2, [r3, #0]
}
 8000b0c:	bf00      	nop
 8000b0e:	3718      	adds	r7, #24
 8000b10:	46bd      	mov	sp, r7
 8000b12:	bd80      	pop	{r7, pc}
 8000b14:	20000108 	.word	0x20000108
 8000b18:	20000000 	.word	0x20000000
 8000b1c:	08002e64 	.word	0x08002e64
 8000b20:	08002e6c 	.word	0x08002e6c
 8000b24:	08002e70 	.word	0x08002e70
 8000b28:	08002e74 	.word	0x08002e74
 8000b2c:	20000134 	.word	0x20000134
 8000b30:	20000144 	.word	0x20000144
 8000b34:	40010800 	.word	0x40010800
 8000b38:	2000011c 	.word	0x2000011c
 8000b3c:	20000120 	.word	0x20000120
 8000b40:	0800d2ac 	.word	0x0800d2ac
 8000b44:	20000118 	.word	0x20000118
 8000b48:	20000114 	.word	0x20000114
 8000b4c:	2000012c 	.word	0x2000012c
 8000b50:	2000010c 	.word	0x2000010c
 8000b54:	20000110 	.word	0x20000110
 8000b58:	20000130 	.word	0x20000130
 8000b5c:	20000124 	.word	0x20000124
 8000b60:	20000128 	.word	0x20000128

08000b64 <TamanhoMatriz>:

void TamanhoMatriz()
{
 8000b64:	b580      	push	{r7, lr}
 8000b66:	b088      	sub	sp, #32
 8000b68:	af04      	add	r7, sp, #16
	ST7735_FillScreen(BLACK);
 8000b6a:	2000      	movs	r0, #0
 8000b6c:	f7ff fd20 	bl	80005b0 <ST7735_FillScreen>
	ST7735_WriteString(39, 0, "Tamanho", Font_11x18, WHITE, BLACK);
 8000b70:	4ba7      	ldr	r3, [pc, #668]	; (8000e10 <TamanhoMatriz+0x2ac>)
 8000b72:	2200      	movs	r2, #0
 8000b74:	9202      	str	r2, [sp, #8]
 8000b76:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000b7a:	9201      	str	r2, [sp, #4]
 8000b7c:	685a      	ldr	r2, [r3, #4]
 8000b7e:	9200      	str	r2, [sp, #0]
 8000b80:	681b      	ldr	r3, [r3, #0]
 8000b82:	4aa4      	ldr	r2, [pc, #656]	; (8000e14 <TamanhoMatriz+0x2b0>)
 8000b84:	2100      	movs	r1, #0
 8000b86:	2027      	movs	r0, #39	; 0x27
 8000b88:	f7ff fc54 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(19, 20, "4x4", Font_11x18, WHITE, BLACK);
 8000b8c:	4ba0      	ldr	r3, [pc, #640]	; (8000e10 <TamanhoMatriz+0x2ac>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	9202      	str	r2, [sp, #8]
 8000b92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000b96:	9201      	str	r2, [sp, #4]
 8000b98:	685a      	ldr	r2, [r3, #4]
 8000b9a:	9200      	str	r2, [sp, #0]
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	4a9e      	ldr	r2, [pc, #632]	; (8000e18 <TamanhoMatriz+0x2b4>)
 8000ba0:	2114      	movs	r1, #20
 8000ba2:	2013      	movs	r0, #19
 8000ba4:	f7ff fc46 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(109, 20, "4x3", Font_11x18, WHITE, BLACK);
 8000ba8:	4b99      	ldr	r3, [pc, #612]	; (8000e10 <TamanhoMatriz+0x2ac>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	9202      	str	r2, [sp, #8]
 8000bae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000bb2:	9201      	str	r2, [sp, #4]
 8000bb4:	685a      	ldr	r2, [r3, #4]
 8000bb6:	9200      	str	r2, [sp, #0]
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	4a98      	ldr	r2, [pc, #608]	; (8000e1c <TamanhoMatriz+0x2b8>)
 8000bbc:	2114      	movs	r1, #20
 8000bbe:	206d      	movs	r0, #109	; 0x6d
 8000bc0:	f7ff fc38 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(19, 50, "4x2", Font_11x18, WHITE, BLACK);
 8000bc4:	4b92      	ldr	r3, [pc, #584]	; (8000e10 <TamanhoMatriz+0x2ac>)
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	9202      	str	r2, [sp, #8]
 8000bca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000bce:	9201      	str	r2, [sp, #4]
 8000bd0:	685a      	ldr	r2, [r3, #4]
 8000bd2:	9200      	str	r2, [sp, #0]
 8000bd4:	681b      	ldr	r3, [r3, #0]
 8000bd6:	4a92      	ldr	r2, [pc, #584]	; (8000e20 <TamanhoMatriz+0x2bc>)
 8000bd8:	2132      	movs	r1, #50	; 0x32
 8000bda:	2013      	movs	r0, #19
 8000bdc:	f7ff fc2a 	bl	8000434 <ST7735_WriteString>
	ST7735_WriteString(109, 50, "2x2", Font_11x18, WHITE, BLACK);
 8000be0:	4b8b      	ldr	r3, [pc, #556]	; (8000e10 <TamanhoMatriz+0x2ac>)
 8000be2:	2200      	movs	r2, #0
 8000be4:	9202      	str	r2, [sp, #8]
 8000be6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000bea:	9201      	str	r2, [sp, #4]
 8000bec:	685a      	ldr	r2, [r3, #4]
 8000bee:	9200      	str	r2, [sp, #0]
 8000bf0:	681b      	ldr	r3, [r3, #0]
 8000bf2:	4a8c      	ldr	r2, [pc, #560]	; (8000e24 <TamanhoMatriz+0x2c0>)
 8000bf4:	2132      	movs	r1, #50	; 0x32
 8000bf6:	206d      	movs	r0, #109	; 0x6d
 8000bf8:	f7ff fc1c 	bl	8000434 <ST7735_WriteString>
	int escolhaTamanho = 1;
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	60fb      	str	r3, [r7, #12]
	while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10)== 1)
 8000c00:	e0b8      	b.n	8000d74 <TamanhoMatriz+0x210>
	{
		int esquerdaTamanho = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9);
 8000c02:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000c06:	4888      	ldr	r0, [pc, #544]	; (8000e28 <TamanhoMatriz+0x2c4>)
 8000c08:	f001 f96e 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8000c0c:	4603      	mov	r3, r0
 8000c0e:	60bb      	str	r3, [r7, #8]
		int direitaTamanho = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_11);
 8000c10:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000c14:	4884      	ldr	r0, [pc, #528]	; (8000e28 <TamanhoMatriz+0x2c4>)
 8000c16:	f001 f967 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8000c1a:	4603      	mov	r3, r0
 8000c1c:	607b      	str	r3, [r7, #4]
		if(esquerdaTamanho == 0)
 8000c1e:	68bb      	ldr	r3, [r7, #8]
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d102      	bne.n	8000c2a <TamanhoMatriz+0xc6>
		{
			escolhaTamanho--;
 8000c24:	68fb      	ldr	r3, [r7, #12]
 8000c26:	3b01      	subs	r3, #1
 8000c28:	60fb      	str	r3, [r7, #12]
		}
		if(direitaTamanho == 0)
 8000c2a:	687b      	ldr	r3, [r7, #4]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d102      	bne.n	8000c36 <TamanhoMatriz+0xd2>
		{
			escolhaTamanho++;
 8000c30:	68fb      	ldr	r3, [r7, #12]
 8000c32:	3301      	adds	r3, #1
 8000c34:	60fb      	str	r3, [r7, #12]
		}
		if(escolhaTamanho == 1)
 8000c36:	68fb      	ldr	r3, [r7, #12]
 8000c38:	2b01      	cmp	r3, #1
 8000c3a:	d121      	bne.n	8000c80 <TamanhoMatriz+0x11c>
		{
			ST7735_FillRectangle(109, 40, 33, 3, BLACK);
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	9300      	str	r3, [sp, #0]
 8000c40:	2303      	movs	r3, #3
 8000c42:	2221      	movs	r2, #33	; 0x21
 8000c44:	2128      	movs	r1, #40	; 0x28
 8000c46:	206d      	movs	r0, #109	; 0x6d
 8000c48:	f7ff fc3e 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 70, 33, 3, BLACK);
 8000c4c:	2300      	movs	r3, #0
 8000c4e:	9300      	str	r3, [sp, #0]
 8000c50:	2303      	movs	r3, #3
 8000c52:	2221      	movs	r2, #33	; 0x21
 8000c54:	2146      	movs	r1, #70	; 0x46
 8000c56:	2013      	movs	r0, #19
 8000c58:	f7ff fc36 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 70, 33, 3, BLACK);
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	9300      	str	r3, [sp, #0]
 8000c60:	2303      	movs	r3, #3
 8000c62:	2221      	movs	r2, #33	; 0x21
 8000c64:	2146      	movs	r1, #70	; 0x46
 8000c66:	206d      	movs	r0, #109	; 0x6d
 8000c68:	f7ff fc2e 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 40, 33, 3, MAGENTA);
 8000c6c:	f64f 031f 	movw	r3, #63519	; 0xf81f
 8000c70:	9300      	str	r3, [sp, #0]
 8000c72:	2303      	movs	r3, #3
 8000c74:	2221      	movs	r2, #33	; 0x21
 8000c76:	2128      	movs	r1, #40	; 0x28
 8000c78:	2013      	movs	r0, #19
 8000c7a:	f7ff fc25 	bl	80004c8 <ST7735_FillRectangle>
 8000c7e:	e076      	b.n	8000d6e <TamanhoMatriz+0x20a>
		}
		else if(escolhaTamanho == 2)
 8000c80:	68fb      	ldr	r3, [r7, #12]
 8000c82:	2b02      	cmp	r3, #2
 8000c84:	d121      	bne.n	8000cca <TamanhoMatriz+0x166>
		{
			ST7735_FillRectangle(19, 40, 33, 3, BLACK);
 8000c86:	2300      	movs	r3, #0
 8000c88:	9300      	str	r3, [sp, #0]
 8000c8a:	2303      	movs	r3, #3
 8000c8c:	2221      	movs	r2, #33	; 0x21
 8000c8e:	2128      	movs	r1, #40	; 0x28
 8000c90:	2013      	movs	r0, #19
 8000c92:	f7ff fc19 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 70, 33, 3, BLACK);
 8000c96:	2300      	movs	r3, #0
 8000c98:	9300      	str	r3, [sp, #0]
 8000c9a:	2303      	movs	r3, #3
 8000c9c:	2221      	movs	r2, #33	; 0x21
 8000c9e:	2146      	movs	r1, #70	; 0x46
 8000ca0:	2013      	movs	r0, #19
 8000ca2:	f7ff fc11 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 70, 33, 3, BLACK);
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	9300      	str	r3, [sp, #0]
 8000caa:	2303      	movs	r3, #3
 8000cac:	2221      	movs	r2, #33	; 0x21
 8000cae:	2146      	movs	r1, #70	; 0x46
 8000cb0:	206d      	movs	r0, #109	; 0x6d
 8000cb2:	f7ff fc09 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 40, 33, 3, MAGENTA);
 8000cb6:	f64f 031f 	movw	r3, #63519	; 0xf81f
 8000cba:	9300      	str	r3, [sp, #0]
 8000cbc:	2303      	movs	r3, #3
 8000cbe:	2221      	movs	r2, #33	; 0x21
 8000cc0:	2128      	movs	r1, #40	; 0x28
 8000cc2:	206d      	movs	r0, #109	; 0x6d
 8000cc4:	f7ff fc00 	bl	80004c8 <ST7735_FillRectangle>
 8000cc8:	e051      	b.n	8000d6e <TamanhoMatriz+0x20a>
		}
		else if(escolhaTamanho == 3)
 8000cca:	68fb      	ldr	r3, [r7, #12]
 8000ccc:	2b03      	cmp	r3, #3
 8000cce:	d121      	bne.n	8000d14 <TamanhoMatriz+0x1b0>
		{
			ST7735_FillRectangle(109, 70, 33, 3, BLACK);
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	9300      	str	r3, [sp, #0]
 8000cd4:	2303      	movs	r3, #3
 8000cd6:	2221      	movs	r2, #33	; 0x21
 8000cd8:	2146      	movs	r1, #70	; 0x46
 8000cda:	206d      	movs	r0, #109	; 0x6d
 8000cdc:	f7ff fbf4 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 40, 33, 3, BLACK);
 8000ce0:	2300      	movs	r3, #0
 8000ce2:	9300      	str	r3, [sp, #0]
 8000ce4:	2303      	movs	r3, #3
 8000ce6:	2221      	movs	r2, #33	; 0x21
 8000ce8:	2128      	movs	r1, #40	; 0x28
 8000cea:	2013      	movs	r0, #19
 8000cec:	f7ff fbec 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 40, 33, 3, BLACK);
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	9300      	str	r3, [sp, #0]
 8000cf4:	2303      	movs	r3, #3
 8000cf6:	2221      	movs	r2, #33	; 0x21
 8000cf8:	2128      	movs	r1, #40	; 0x28
 8000cfa:	206d      	movs	r0, #109	; 0x6d
 8000cfc:	f7ff fbe4 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 70, 33, 3, MAGENTA);
 8000d00:	f64f 031f 	movw	r3, #63519	; 0xf81f
 8000d04:	9300      	str	r3, [sp, #0]
 8000d06:	2303      	movs	r3, #3
 8000d08:	2221      	movs	r2, #33	; 0x21
 8000d0a:	2146      	movs	r1, #70	; 0x46
 8000d0c:	2013      	movs	r0, #19
 8000d0e:	f7ff fbdb 	bl	80004c8 <ST7735_FillRectangle>
 8000d12:	e02c      	b.n	8000d6e <TamanhoMatriz+0x20a>
		}
		else if(escolhaTamanho == 4)
 8000d14:	68fb      	ldr	r3, [r7, #12]
 8000d16:	2b04      	cmp	r3, #4
 8000d18:	d121      	bne.n	8000d5e <TamanhoMatriz+0x1fa>
		{
			ST7735_FillRectangle(19, 40, 33, 3, BLACK);
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	9300      	str	r3, [sp, #0]
 8000d1e:	2303      	movs	r3, #3
 8000d20:	2221      	movs	r2, #33	; 0x21
 8000d22:	2128      	movs	r1, #40	; 0x28
 8000d24:	2013      	movs	r0, #19
 8000d26:	f7ff fbcf 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 40, 33, 3, BLACK);
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	9300      	str	r3, [sp, #0]
 8000d2e:	2303      	movs	r3, #3
 8000d30:	2221      	movs	r2, #33	; 0x21
 8000d32:	2128      	movs	r1, #40	; 0x28
 8000d34:	206d      	movs	r0, #109	; 0x6d
 8000d36:	f7ff fbc7 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(19, 70, 33, 3, BLACK);
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	9300      	str	r3, [sp, #0]
 8000d3e:	2303      	movs	r3, #3
 8000d40:	2221      	movs	r2, #33	; 0x21
 8000d42:	2146      	movs	r1, #70	; 0x46
 8000d44:	2013      	movs	r0, #19
 8000d46:	f7ff fbbf 	bl	80004c8 <ST7735_FillRectangle>
			ST7735_FillRectangle(109, 70, 33, 3, MAGENTA);
 8000d4a:	f64f 031f 	movw	r3, #63519	; 0xf81f
 8000d4e:	9300      	str	r3, [sp, #0]
 8000d50:	2303      	movs	r3, #3
 8000d52:	2221      	movs	r2, #33	; 0x21
 8000d54:	2146      	movs	r1, #70	; 0x46
 8000d56:	206d      	movs	r0, #109	; 0x6d
 8000d58:	f7ff fbb6 	bl	80004c8 <ST7735_FillRectangle>
 8000d5c:	e007      	b.n	8000d6e <TamanhoMatriz+0x20a>
		}
		else if(escolhaTamanho > 4)
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	2b04      	cmp	r3, #4
 8000d62:	dd02      	ble.n	8000d6a <TamanhoMatriz+0x206>
		{
			escolhaTamanho = 4;
 8000d64:	2304      	movs	r3, #4
 8000d66:	60fb      	str	r3, [r7, #12]
 8000d68:	e001      	b.n	8000d6e <TamanhoMatriz+0x20a>
		}
		else
		{
			escolhaTamanho = 1;
 8000d6a:	2301      	movs	r3, #1
 8000d6c:	60fb      	str	r3, [r7, #12]
		}
		HAL_Delay(150);
 8000d6e:	2096      	movs	r0, #150	; 0x96
 8000d70:	f000 fe5a 	bl	8001a28 <HAL_Delay>
	while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10)== 1)
 8000d74:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000d78:	482b      	ldr	r0, [pc, #172]	; (8000e28 <TamanhoMatriz+0x2c4>)
 8000d7a:	f001 f8b5 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8000d7e:	4603      	mov	r3, r0
 8000d80:	2b01      	cmp	r3, #1
 8000d82:	f43f af3e 	beq.w	8000c02 <TamanhoMatriz+0x9e>
	}
	if(escolhaTamanho == 1)
 8000d86:	68fb      	ldr	r3, [r7, #12]
 8000d88:	2b01      	cmp	r3, #1
 8000d8a:	d106      	bne.n	8000d9a <TamanhoMatriz+0x236>
	{
		ColunaMatriz = 4;
 8000d8c:	4b27      	ldr	r3, [pc, #156]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000d8e:	2204      	movs	r2, #4
 8000d90:	601a      	str	r2, [r3, #0]
		LinhaMatriz = 4;
 8000d92:	4b27      	ldr	r3, [pc, #156]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000d94:	2204      	movs	r2, #4
 8000d96:	601a      	str	r2, [r3, #0]
 8000d98:	e019      	b.n	8000dce <TamanhoMatriz+0x26a>
	}
	else if( escolhaTamanho == 2)
 8000d9a:	68fb      	ldr	r3, [r7, #12]
 8000d9c:	2b02      	cmp	r3, #2
 8000d9e:	d106      	bne.n	8000dae <TamanhoMatriz+0x24a>
	{
		ColunaMatriz = 4;
 8000da0:	4b22      	ldr	r3, [pc, #136]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000da2:	2204      	movs	r2, #4
 8000da4:	601a      	str	r2, [r3, #0]
		LinhaMatriz = 3;
 8000da6:	4b22      	ldr	r3, [pc, #136]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000da8:	2203      	movs	r2, #3
 8000daa:	601a      	str	r2, [r3, #0]
 8000dac:	e00f      	b.n	8000dce <TamanhoMatriz+0x26a>
	}
	else if( escolhaTamanho == 3)
 8000dae:	68fb      	ldr	r3, [r7, #12]
 8000db0:	2b03      	cmp	r3, #3
 8000db2:	d106      	bne.n	8000dc2 <TamanhoMatriz+0x25e>
	{
		ColunaMatriz = 4;
 8000db4:	4b1d      	ldr	r3, [pc, #116]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000db6:	2204      	movs	r2, #4
 8000db8:	601a      	str	r2, [r3, #0]
		LinhaMatriz = 2;
 8000dba:	4b1d      	ldr	r3, [pc, #116]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000dbc:	2202      	movs	r2, #2
 8000dbe:	601a      	str	r2, [r3, #0]
 8000dc0:	e005      	b.n	8000dce <TamanhoMatriz+0x26a>
	}
	else
	{
		ColunaMatriz = 2;
 8000dc2:	4b1a      	ldr	r3, [pc, #104]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000dc4:	2202      	movs	r2, #2
 8000dc6:	601a      	str	r2, [r3, #0]
		LinhaMatriz = 2;
 8000dc8:	4b19      	ldr	r3, [pc, #100]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000dca:	2202      	movs	r2, #2
 8000dcc:	601a      	str	r2, [r3, #0]
	}
	PaddingX = ((160 - ColunaMatriz * 15))/(ColunaMatriz + 1);
 8000dce:	4b17      	ldr	r3, [pc, #92]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000dd0:	681b      	ldr	r3, [r3, #0]
 8000dd2:	461a      	mov	r2, r3
 8000dd4:	011b      	lsls	r3, r3, #4
 8000dd6:	1ad3      	subs	r3, r2, r3
 8000dd8:	f103 02a0 	add.w	r2, r3, #160	; 0xa0
 8000ddc:	4b13      	ldr	r3, [pc, #76]	; (8000e2c <TamanhoMatriz+0x2c8>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	3301      	adds	r3, #1
 8000de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8000de6:	4a13      	ldr	r2, [pc, #76]	; (8000e34 <TamanhoMatriz+0x2d0>)
 8000de8:	6013      	str	r3, [r2, #0]
	PaddingY = ((80 - LinhaMatriz * 15))/(LinhaMatriz + 1);
 8000dea:	4b11      	ldr	r3, [pc, #68]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	461a      	mov	r2, r3
 8000df0:	011b      	lsls	r3, r3, #4
 8000df2:	1ad3      	subs	r3, r2, r3
 8000df4:	f103 0250 	add.w	r2, r3, #80	; 0x50
 8000df8:	4b0d      	ldr	r3, [pc, #52]	; (8000e30 <TamanhoMatriz+0x2cc>)
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	3301      	adds	r3, #1
 8000dfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8000e02:	4a0d      	ldr	r2, [pc, #52]	; (8000e38 <TamanhoMatriz+0x2d4>)
 8000e04:	6013      	str	r3, [r2, #0]
}
 8000e06:	bf00      	nop
 8000e08:	3710      	adds	r7, #16
 8000e0a:	46bd      	mov	sp, r7
 8000e0c:	bd80      	pop	{r7, pc}
 8000e0e:	bf00      	nop
 8000e10:	20000000 	.word	0x20000000
 8000e14:	08002e80 	.word	0x08002e80
 8000e18:	08002e88 	.word	0x08002e88
 8000e1c:	08002e8c 	.word	0x08002e8c
 8000e20:	08002e90 	.word	0x08002e90
 8000e24:	08002e94 	.word	0x08002e94
 8000e28:	40010800 	.word	0x40010800
 8000e2c:	20000114 	.word	0x20000114
 8000e30:	20000118 	.word	0x20000118
 8000e34:	2000011c 	.word	0x2000011c
 8000e38:	20000120 	.word	0x20000120

08000e3c <GerarParesAleatorios>:

void GerarParesAleatorios(){
 8000e3c:	b580      	push	{r7, lr}
 8000e3e:	b084      	sub	sp, #16
 8000e40:	af00      	add	r7, sp, #0

	for(int i = 0; i < ((ColunaMatriz * LinhaMatriz)/2); i++)
 8000e42:	2300      	movs	r3, #0
 8000e44:	60fb      	str	r3, [r7, #12]
 8000e46:	e038      	b.n	8000eba <GerarParesAleatorios+0x7e>
	{
		int contador = 0;
 8000e48:	2300      	movs	r3, #0
 8000e4a:	60bb      	str	r3, [r7, #8]
		while(contador < 2)
 8000e4c:	e02f      	b.n	8000eae <GerarParesAleatorios+0x72>
		{

			int n1 = (rand()%ColunaMatriz);
 8000e4e:	f001 ff79 	bl	8002d44 <rand>
 8000e52:	4602      	mov	r2, r0
 8000e54:	4b21      	ldr	r3, [pc, #132]	; (8000edc <GerarParesAleatorios+0xa0>)
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	fb92 f1f3 	sdiv	r1, r2, r3
 8000e5c:	fb03 f301 	mul.w	r3, r3, r1
 8000e60:	1ad3      	subs	r3, r2, r3
 8000e62:	607b      	str	r3, [r7, #4]
			HAL_Delay(5);
 8000e64:	2005      	movs	r0, #5
 8000e66:	f000 fddf 	bl	8001a28 <HAL_Delay>
			int n2 = (rand()%LinhaMatriz);
 8000e6a:	f001 ff6b 	bl	8002d44 <rand>
 8000e6e:	4602      	mov	r2, r0
 8000e70:	4b1b      	ldr	r3, [pc, #108]	; (8000ee0 <GerarParesAleatorios+0xa4>)
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	fb92 f1f3 	sdiv	r1, r2, r3
 8000e78:	fb03 f301 	mul.w	r3, r3, r1
 8000e7c:	1ad3      	subs	r3, r2, r3
 8000e7e:	603b      	str	r3, [r7, #0]
			HAL_Delay(5);
 8000e80:	2005      	movs	r0, #5
 8000e82:	f000 fdd1 	bl	8001a28 <HAL_Delay>

			if(posicoes[n1][n2] == 8)
 8000e86:	4917      	ldr	r1, [pc, #92]	; (8000ee4 <GerarParesAleatorios+0xa8>)
 8000e88:	687b      	ldr	r3, [r7, #4]
 8000e8a:	009a      	lsls	r2, r3, #2
 8000e8c:	683b      	ldr	r3, [r7, #0]
 8000e8e:	4413      	add	r3, r2
 8000e90:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000e94:	2b08      	cmp	r3, #8
 8000e96:	d10a      	bne.n	8000eae <GerarParesAleatorios+0x72>
			{
				posicoes[n1][n2] = i;
 8000e98:	4912      	ldr	r1, [pc, #72]	; (8000ee4 <GerarParesAleatorios+0xa8>)
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	009a      	lsls	r2, r3, #2
 8000e9e:	683b      	ldr	r3, [r7, #0]
 8000ea0:	4413      	add	r3, r2
 8000ea2:	68fa      	ldr	r2, [r7, #12]
 8000ea4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				contador++;
 8000ea8:	68bb      	ldr	r3, [r7, #8]
 8000eaa:	3301      	adds	r3, #1
 8000eac:	60bb      	str	r3, [r7, #8]
		while(contador < 2)
 8000eae:	68bb      	ldr	r3, [r7, #8]
 8000eb0:	2b01      	cmp	r3, #1
 8000eb2:	ddcc      	ble.n	8000e4e <GerarParesAleatorios+0x12>
	for(int i = 0; i < ((ColunaMatriz * LinhaMatriz)/2); i++)
 8000eb4:	68fb      	ldr	r3, [r7, #12]
 8000eb6:	3301      	adds	r3, #1
 8000eb8:	60fb      	str	r3, [r7, #12]
 8000eba:	4b08      	ldr	r3, [pc, #32]	; (8000edc <GerarParesAleatorios+0xa0>)
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	4a08      	ldr	r2, [pc, #32]	; (8000ee0 <GerarParesAleatorios+0xa4>)
 8000ec0:	6812      	ldr	r2, [r2, #0]
 8000ec2:	fb02 f303 	mul.w	r3, r2, r3
 8000ec6:	0fda      	lsrs	r2, r3, #31
 8000ec8:	4413      	add	r3, r2
 8000eca:	105b      	asrs	r3, r3, #1
 8000ecc:	461a      	mov	r2, r3
 8000ece:	68fb      	ldr	r3, [r7, #12]
 8000ed0:	4293      	cmp	r3, r2
 8000ed2:	dbb9      	blt.n	8000e48 <GerarParesAleatorios+0xc>
			}

		}
	}

}
 8000ed4:	bf00      	nop
 8000ed6:	3710      	adds	r7, #16
 8000ed8:	46bd      	mov	sp, r7
 8000eda:	bd80      	pop	{r7, pc}
 8000edc:	20000114 	.word	0x20000114
 8000ee0:	20000118 	.word	0x20000118
 8000ee4:	2000002c 	.word	0x2000002c

08000ee8 <NavegarCursor>:

void NavegarCursor(int nav){
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	b086      	sub	sp, #24
 8000eec:	af02      	add	r7, sp, #8
 8000eee:	6078      	str	r0, [r7, #4]
	if(nav == 1)
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	2b01      	cmp	r3, #1
 8000ef4:	d109      	bne.n	8000f0a <NavegarCursor+0x22>
	{
		if(coluna != 0)
 8000ef6:	4b57      	ldr	r3, [pc, #348]	; (8001054 <NavegarCursor+0x16c>)
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	d027      	beq.n	8000f4e <NavegarCursor+0x66>
		{
			coluna--;
 8000efe:	4b55      	ldr	r3, [pc, #340]	; (8001054 <NavegarCursor+0x16c>)
 8000f00:	681b      	ldr	r3, [r3, #0]
 8000f02:	3b01      	subs	r3, #1
 8000f04:	4a53      	ldr	r2, [pc, #332]	; (8001054 <NavegarCursor+0x16c>)
 8000f06:	6013      	str	r3, [r2, #0]
 8000f08:	e021      	b.n	8000f4e <NavegarCursor+0x66>
		}
	}
	else if(nav == 2)
 8000f0a:	687b      	ldr	r3, [r7, #4]
 8000f0c:	2b02      	cmp	r3, #2
 8000f0e:	d10f      	bne.n	8000f30 <NavegarCursor+0x48>
	{
		if(linha == 0)
 8000f10:	4b51      	ldr	r3, [pc, #324]	; (8001058 <NavegarCursor+0x170>)
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	2b00      	cmp	r3, #0
 8000f16:	d105      	bne.n	8000f24 <NavegarCursor+0x3c>
		{
			linha = LinhaMatriz - 1;
 8000f18:	4b50      	ldr	r3, [pc, #320]	; (800105c <NavegarCursor+0x174>)
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	3b01      	subs	r3, #1
 8000f1e:	4a4e      	ldr	r2, [pc, #312]	; (8001058 <NavegarCursor+0x170>)
 8000f20:	6013      	str	r3, [r2, #0]
 8000f22:	e014      	b.n	8000f4e <NavegarCursor+0x66>
		}
		else
		{
			linha--;
 8000f24:	4b4c      	ldr	r3, [pc, #304]	; (8001058 <NavegarCursor+0x170>)
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	3b01      	subs	r3, #1
 8000f2a:	4a4b      	ldr	r2, [pc, #300]	; (8001058 <NavegarCursor+0x170>)
 8000f2c:	6013      	str	r3, [r2, #0]
 8000f2e:	e00e      	b.n	8000f4e <NavegarCursor+0x66>
		}
	}
	else if(nav == 3)
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	2b03      	cmp	r3, #3
 8000f34:	d10b      	bne.n	8000f4e <NavegarCursor+0x66>
	{
		if(coluna != (ColunaMatriz - 1))
 8000f36:	4b4a      	ldr	r3, [pc, #296]	; (8001060 <NavegarCursor+0x178>)
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	1e5a      	subs	r2, r3, #1
 8000f3c:	4b45      	ldr	r3, [pc, #276]	; (8001054 <NavegarCursor+0x16c>)
 8000f3e:	681b      	ldr	r3, [r3, #0]
 8000f40:	429a      	cmp	r2, r3
 8000f42:	d004      	beq.n	8000f4e <NavegarCursor+0x66>
		{
			coluna++;
 8000f44:	4b43      	ldr	r3, [pc, #268]	; (8001054 <NavegarCursor+0x16c>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	4a42      	ldr	r2, [pc, #264]	; (8001054 <NavegarCursor+0x16c>)
 8000f4c:	6013      	str	r3, [r2, #0]
		}
	}
	for(int j=0;j<ColunaMatriz;j++)
 8000f4e:	2300      	movs	r3, #0
 8000f50:	60fb      	str	r3, [r7, #12]
 8000f52:	e02b      	b.n	8000fac <NavegarCursor+0xc4>
				{
					for(int i = 0; i < LinhaMatriz; i++)
 8000f54:	2300      	movs	r3, #0
 8000f56:	60bb      	str	r3, [r7, #8]
 8000f58:	e020      	b.n	8000f9c <NavegarCursor+0xb4>
					{
						ST7735_FillRectangle((PaddingX + j*(PaddingX+15)), (i*(15+PaddingY))+(PaddingY + 15), 15, 3, BLACK);
 8000f5a:	4b42      	ldr	r3, [pc, #264]	; (8001064 <NavegarCursor+0x17c>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	330f      	adds	r3, #15
 8000f60:	b29b      	uxth	r3, r3
 8000f62:	68fa      	ldr	r2, [r7, #12]
 8000f64:	b292      	uxth	r2, r2
 8000f66:	fb02 f303 	mul.w	r3, r2, r3
 8000f6a:	b29a      	uxth	r2, r3
 8000f6c:	4b3d      	ldr	r3, [pc, #244]	; (8001064 <NavegarCursor+0x17c>)
 8000f6e:	681b      	ldr	r3, [r3, #0]
 8000f70:	b29b      	uxth	r3, r3
 8000f72:	4413      	add	r3, r2
 8000f74:	b298      	uxth	r0, r3
 8000f76:	68bb      	ldr	r3, [r7, #8]
 8000f78:	3301      	adds	r3, #1
 8000f7a:	b29b      	uxth	r3, r3
 8000f7c:	4a3a      	ldr	r2, [pc, #232]	; (8001068 <NavegarCursor+0x180>)
 8000f7e:	6812      	ldr	r2, [r2, #0]
 8000f80:	320f      	adds	r2, #15
 8000f82:	b292      	uxth	r2, r2
 8000f84:	fb02 f303 	mul.w	r3, r2, r3
 8000f88:	b299      	uxth	r1, r3
 8000f8a:	2300      	movs	r3, #0
 8000f8c:	9300      	str	r3, [sp, #0]
 8000f8e:	2303      	movs	r3, #3
 8000f90:	220f      	movs	r2, #15
 8000f92:	f7ff fa99 	bl	80004c8 <ST7735_FillRectangle>
					for(int i = 0; i < LinhaMatriz; i++)
 8000f96:	68bb      	ldr	r3, [r7, #8]
 8000f98:	3301      	adds	r3, #1
 8000f9a:	60bb      	str	r3, [r7, #8]
 8000f9c:	4b2f      	ldr	r3, [pc, #188]	; (800105c <NavegarCursor+0x174>)
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	68ba      	ldr	r2, [r7, #8]
 8000fa2:	429a      	cmp	r2, r3
 8000fa4:	dbd9      	blt.n	8000f5a <NavegarCursor+0x72>
	for(int j=0;j<ColunaMatriz;j++)
 8000fa6:	68fb      	ldr	r3, [r7, #12]
 8000fa8:	3301      	adds	r3, #1
 8000faa:	60fb      	str	r3, [r7, #12]
 8000fac:	4b2c      	ldr	r3, [pc, #176]	; (8001060 <NavegarCursor+0x178>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	68fa      	ldr	r2, [r7, #12]
 8000fb2:	429a      	cmp	r2, r3
 8000fb4:	dbce      	blt.n	8000f54 <NavegarCursor+0x6c>
					}
				}
	HAL_Delay(200);
 8000fb6:	20c8      	movs	r0, #200	; 0xc8
 8000fb8:	f000 fd36 	bl	8001a28 <HAL_Delay>
	if(VerificarJogador % 2 == 0)
 8000fbc:	4b2b      	ldr	r3, [pc, #172]	; (800106c <NavegarCursor+0x184>)
 8000fbe:	681b      	ldr	r3, [r3, #0]
 8000fc0:	f003 0301 	and.w	r3, r3, #1
 8000fc4:	2b00      	cmp	r3, #0
 8000fc6:	d121      	bne.n	800100c <NavegarCursor+0x124>
	{
		ST7735_FillRectangle((PaddingX + coluna*(PaddingX+15)), (linha*(15+PaddingY))+(PaddingY + 15), 15, 3, RED);
 8000fc8:	4b26      	ldr	r3, [pc, #152]	; (8001064 <NavegarCursor+0x17c>)
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	330f      	adds	r3, #15
 8000fce:	b29b      	uxth	r3, r3
 8000fd0:	4a20      	ldr	r2, [pc, #128]	; (8001054 <NavegarCursor+0x16c>)
 8000fd2:	6812      	ldr	r2, [r2, #0]
 8000fd4:	b292      	uxth	r2, r2
 8000fd6:	fb02 f303 	mul.w	r3, r2, r3
 8000fda:	b29a      	uxth	r2, r3
 8000fdc:	4b21      	ldr	r3, [pc, #132]	; (8001064 <NavegarCursor+0x17c>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	b29b      	uxth	r3, r3
 8000fe2:	4413      	add	r3, r2
 8000fe4:	b298      	uxth	r0, r3
 8000fe6:	4b1c      	ldr	r3, [pc, #112]	; (8001058 <NavegarCursor+0x170>)
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	3301      	adds	r3, #1
 8000fec:	b29b      	uxth	r3, r3
 8000fee:	4a1e      	ldr	r2, [pc, #120]	; (8001068 <NavegarCursor+0x180>)
 8000ff0:	6812      	ldr	r2, [r2, #0]
 8000ff2:	320f      	adds	r2, #15
 8000ff4:	b292      	uxth	r2, r2
 8000ff6:	fb02 f303 	mul.w	r3, r2, r3
 8000ffa:	b299      	uxth	r1, r3
 8000ffc:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001000:	9300      	str	r3, [sp, #0]
 8001002:	2303      	movs	r3, #3
 8001004:	220f      	movs	r2, #15
 8001006:	f7ff fa5f 	bl	80004c8 <ST7735_FillRectangle>
	}
	else
	{
		ST7735_FillRectangle((PaddingX + coluna*(PaddingX+15)), (linha*(15+PaddingY))+(PaddingY + 15), 15, 3, BLUE);
	}
}
 800100a:	e01f      	b.n	800104c <NavegarCursor+0x164>
		ST7735_FillRectangle((PaddingX + coluna*(PaddingX+15)), (linha*(15+PaddingY))+(PaddingY + 15), 15, 3, BLUE);
 800100c:	4b15      	ldr	r3, [pc, #84]	; (8001064 <NavegarCursor+0x17c>)
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	330f      	adds	r3, #15
 8001012:	b29b      	uxth	r3, r3
 8001014:	4a0f      	ldr	r2, [pc, #60]	; (8001054 <NavegarCursor+0x16c>)
 8001016:	6812      	ldr	r2, [r2, #0]
 8001018:	b292      	uxth	r2, r2
 800101a:	fb02 f303 	mul.w	r3, r2, r3
 800101e:	b29a      	uxth	r2, r3
 8001020:	4b10      	ldr	r3, [pc, #64]	; (8001064 <NavegarCursor+0x17c>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	b29b      	uxth	r3, r3
 8001026:	4413      	add	r3, r2
 8001028:	b298      	uxth	r0, r3
 800102a:	4b0b      	ldr	r3, [pc, #44]	; (8001058 <NavegarCursor+0x170>)
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	3301      	adds	r3, #1
 8001030:	b29b      	uxth	r3, r3
 8001032:	4a0d      	ldr	r2, [pc, #52]	; (8001068 <NavegarCursor+0x180>)
 8001034:	6812      	ldr	r2, [r2, #0]
 8001036:	320f      	adds	r2, #15
 8001038:	b292      	uxth	r2, r2
 800103a:	fb02 f303 	mul.w	r3, r2, r3
 800103e:	b299      	uxth	r1, r3
 8001040:	231f      	movs	r3, #31
 8001042:	9300      	str	r3, [sp, #0]
 8001044:	2303      	movs	r3, #3
 8001046:	220f      	movs	r2, #15
 8001048:	f7ff fa3e 	bl	80004c8 <ST7735_FillRectangle>
}
 800104c:	bf00      	nop
 800104e:	3710      	adds	r7, #16
 8001050:	46bd      	mov	sp, r7
 8001052:	bd80      	pop	{r7, pc}
 8001054:	20000128 	.word	0x20000128
 8001058:	20000124 	.word	0x20000124
 800105c:	20000118 	.word	0x20000118
 8001060:	20000114 	.word	0x20000114
 8001064:	2000011c 	.word	0x2000011c
 8001068:	20000120 	.word	0x20000120
 800106c:	20000008 	.word	0x20000008

08001070 <SelecionarCarta>:

void SelecionarCarta()
{
 8001070:	b590      	push	{r4, r7, lr}
 8001072:	b083      	sub	sp, #12
 8001074:	af02      	add	r7, sp, #8
	ST7735_FillRectangle((PaddingX + coluna*(PaddingX+15)), (linha*(15+PaddingY))+PaddingY, 15, 15, cores[posicoes[coluna][linha]]);
 8001076:	4b1a      	ldr	r3, [pc, #104]	; (80010e0 <SelecionarCarta+0x70>)
 8001078:	681b      	ldr	r3, [r3, #0]
 800107a:	330f      	adds	r3, #15
 800107c:	b29b      	uxth	r3, r3
 800107e:	4a19      	ldr	r2, [pc, #100]	; (80010e4 <SelecionarCarta+0x74>)
 8001080:	6812      	ldr	r2, [r2, #0]
 8001082:	b292      	uxth	r2, r2
 8001084:	fb02 f303 	mul.w	r3, r2, r3
 8001088:	b29a      	uxth	r2, r3
 800108a:	4b15      	ldr	r3, [pc, #84]	; (80010e0 <SelecionarCarta+0x70>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	b29b      	uxth	r3, r3
 8001090:	4413      	add	r3, r2
 8001092:	b298      	uxth	r0, r3
 8001094:	4b14      	ldr	r3, [pc, #80]	; (80010e8 <SelecionarCarta+0x78>)
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	330f      	adds	r3, #15
 800109a:	b29b      	uxth	r3, r3
 800109c:	4a13      	ldr	r2, [pc, #76]	; (80010ec <SelecionarCarta+0x7c>)
 800109e:	6812      	ldr	r2, [r2, #0]
 80010a0:	b292      	uxth	r2, r2
 80010a2:	fb02 f303 	mul.w	r3, r2, r3
 80010a6:	b29a      	uxth	r2, r3
 80010a8:	4b0f      	ldr	r3, [pc, #60]	; (80010e8 <SelecionarCarta+0x78>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	b29b      	uxth	r3, r3
 80010ae:	4413      	add	r3, r2
 80010b0:	b29c      	uxth	r4, r3
 80010b2:	4b0c      	ldr	r3, [pc, #48]	; (80010e4 <SelecionarCarta+0x74>)
 80010b4:	681a      	ldr	r2, [r3, #0]
 80010b6:	4b0d      	ldr	r3, [pc, #52]	; (80010ec <SelecionarCarta+0x7c>)
 80010b8:	681b      	ldr	r3, [r3, #0]
 80010ba:	490d      	ldr	r1, [pc, #52]	; (80010f0 <SelecionarCarta+0x80>)
 80010bc:	0092      	lsls	r2, r2, #2
 80010be:	4413      	add	r3, r2
 80010c0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80010c4:	4a0b      	ldr	r2, [pc, #44]	; (80010f4 <SelecionarCarta+0x84>)
 80010c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010ca:	b29b      	uxth	r3, r3
 80010cc:	9300      	str	r3, [sp, #0]
 80010ce:	230f      	movs	r3, #15
 80010d0:	220f      	movs	r2, #15
 80010d2:	4621      	mov	r1, r4
 80010d4:	f7ff f9f8 	bl	80004c8 <ST7735_FillRectangle>
}
 80010d8:	bf00      	nop
 80010da:	3704      	adds	r7, #4
 80010dc:	46bd      	mov	sp, r7
 80010de:	bd90      	pop	{r4, r7, pc}
 80010e0:	2000011c 	.word	0x2000011c
 80010e4:	20000128 	.word	0x20000128
 80010e8:	20000120 	.word	0x20000120
 80010ec:	20000124 	.word	0x20000124
 80010f0:	2000002c 	.word	0x2000002c
 80010f4:	2000000c 	.word	0x2000000c

080010f8 <CompararCarta>:

void CompararCarta()
{
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b082      	sub	sp, #8
 80010fc:	af02      	add	r7, sp, #8
	if(pos_selec1[0] == 8 && pos_selec1[1] == 8)
 80010fe:	4b73      	ldr	r3, [pc, #460]	; (80012cc <CompararCarta+0x1d4>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	2b08      	cmp	r3, #8
 8001104:	d120      	bne.n	8001148 <CompararCarta+0x50>
 8001106:	4b71      	ldr	r3, [pc, #452]	; (80012cc <CompararCarta+0x1d4>)
 8001108:	685b      	ldr	r3, [r3, #4]
 800110a:	2b08      	cmp	r3, #8
 800110c:	d11c      	bne.n	8001148 <CompararCarta+0x50>
	{
		pos_selec1[0] = coluna;
 800110e:	4b70      	ldr	r3, [pc, #448]	; (80012d0 <CompararCarta+0x1d8>)
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	4a6e      	ldr	r2, [pc, #440]	; (80012cc <CompararCarta+0x1d4>)
 8001114:	6013      	str	r3, [r2, #0]
		pos_selec1[1] = linha;
 8001116:	4b6f      	ldr	r3, [pc, #444]	; (80012d4 <CompararCarta+0x1dc>)
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	4a6c      	ldr	r2, [pc, #432]	; (80012cc <CompararCarta+0x1d4>)
 800111c:	6053      	str	r3, [r2, #4]
		if(posicoes[pos_selec1[0]][pos_selec1[1]] == 8)
 800111e:	4b6b      	ldr	r3, [pc, #428]	; (80012cc <CompararCarta+0x1d4>)
 8001120:	681a      	ldr	r2, [r3, #0]
 8001122:	4b6a      	ldr	r3, [pc, #424]	; (80012cc <CompararCarta+0x1d4>)
 8001124:	685b      	ldr	r3, [r3, #4]
 8001126:	496c      	ldr	r1, [pc, #432]	; (80012d8 <CompararCarta+0x1e0>)
 8001128:	0092      	lsls	r2, r2, #2
 800112a:	4413      	add	r3, r2
 800112c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001130:	2b08      	cmp	r3, #8
 8001132:	d106      	bne.n	8001142 <CompararCarta+0x4a>
		{
			pos_selec1[0] = 8;
 8001134:	4b65      	ldr	r3, [pc, #404]	; (80012cc <CompararCarta+0x1d4>)
 8001136:	2208      	movs	r2, #8
 8001138:	601a      	str	r2, [r3, #0]
			pos_selec1[1] = 8;
 800113a:	4b64      	ldr	r3, [pc, #400]	; (80012cc <CompararCarta+0x1d4>)
 800113c:	2208      	movs	r2, #8
 800113e:	605a      	str	r2, [r3, #4]
		if(posicoes[pos_selec1[0]][pos_selec1[1]] == 8)
 8001140:	e0c1      	b.n	80012c6 <CompararCarta+0x1ce>
		}
		else
		{
			SelecionarCarta();
 8001142:	f7ff ff95 	bl	8001070 <SelecionarCarta>
		if(posicoes[pos_selec1[0]][pos_selec1[1]] == 8)
 8001146:	e0be      	b.n	80012c6 <CompararCarta+0x1ce>
		}
	}
	else if(pos_selec2[0] == 8 && pos_selec2[1] == 8)
 8001148:	4b64      	ldr	r3, [pc, #400]	; (80012dc <CompararCarta+0x1e4>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	2b08      	cmp	r3, #8
 800114e:	f040 80ba 	bne.w	80012c6 <CompararCarta+0x1ce>
 8001152:	4b62      	ldr	r3, [pc, #392]	; (80012dc <CompararCarta+0x1e4>)
 8001154:	685b      	ldr	r3, [r3, #4]
 8001156:	2b08      	cmp	r3, #8
 8001158:	f040 80b5 	bne.w	80012c6 <CompararCarta+0x1ce>
	{
		pos_selec2[0] = coluna;
 800115c:	4b5c      	ldr	r3, [pc, #368]	; (80012d0 <CompararCarta+0x1d8>)
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	4a5e      	ldr	r2, [pc, #376]	; (80012dc <CompararCarta+0x1e4>)
 8001162:	6013      	str	r3, [r2, #0]
		pos_selec2[1] = linha;
 8001164:	4b5b      	ldr	r3, [pc, #364]	; (80012d4 <CompararCarta+0x1dc>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	4a5c      	ldr	r2, [pc, #368]	; (80012dc <CompararCarta+0x1e4>)
 800116a:	6053      	str	r3, [r2, #4]
		if(posicoes[pos_selec2[0]][pos_selec2[1]] != 8 && (pos_selec2[0] != pos_selec1[0] || pos_selec2[1] != pos_selec1[1]))
 800116c:	4b5b      	ldr	r3, [pc, #364]	; (80012dc <CompararCarta+0x1e4>)
 800116e:	681a      	ldr	r2, [r3, #0]
 8001170:	4b5a      	ldr	r3, [pc, #360]	; (80012dc <CompararCarta+0x1e4>)
 8001172:	685b      	ldr	r3, [r3, #4]
 8001174:	4958      	ldr	r1, [pc, #352]	; (80012d8 <CompararCarta+0x1e0>)
 8001176:	0092      	lsls	r2, r2, #2
 8001178:	4413      	add	r3, r2
 800117a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800117e:	2b08      	cmp	r3, #8
 8001180:	f000 809a 	beq.w	80012b8 <CompararCarta+0x1c0>
 8001184:	4b55      	ldr	r3, [pc, #340]	; (80012dc <CompararCarta+0x1e4>)
 8001186:	681a      	ldr	r2, [r3, #0]
 8001188:	4b50      	ldr	r3, [pc, #320]	; (80012cc <CompararCarta+0x1d4>)
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	429a      	cmp	r2, r3
 800118e:	d106      	bne.n	800119e <CompararCarta+0xa6>
 8001190:	4b52      	ldr	r3, [pc, #328]	; (80012dc <CompararCarta+0x1e4>)
 8001192:	685a      	ldr	r2, [r3, #4]
 8001194:	4b4d      	ldr	r3, [pc, #308]	; (80012cc <CompararCarta+0x1d4>)
 8001196:	685b      	ldr	r3, [r3, #4]
 8001198:	429a      	cmp	r2, r3
 800119a:	f000 808d 	beq.w	80012b8 <CompararCarta+0x1c0>
		{
			SelecionarCarta();
 800119e:	f7ff ff67 	bl	8001070 <SelecionarCarta>
			HAL_Delay(500);
 80011a2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80011a6:	f000 fc3f 	bl	8001a28 <HAL_Delay>
			if(posicoes[pos_selec1[0]][pos_selec1[1]] == posicoes[pos_selec2[0]][pos_selec2[1]])
 80011aa:	4b48      	ldr	r3, [pc, #288]	; (80012cc <CompararCarta+0x1d4>)
 80011ac:	681a      	ldr	r2, [r3, #0]
 80011ae:	4b47      	ldr	r3, [pc, #284]	; (80012cc <CompararCarta+0x1d4>)
 80011b0:	685b      	ldr	r3, [r3, #4]
 80011b2:	4949      	ldr	r1, [pc, #292]	; (80012d8 <CompararCarta+0x1e0>)
 80011b4:	0092      	lsls	r2, r2, #2
 80011b6:	4413      	add	r3, r2
 80011b8:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 80011bc:	4b47      	ldr	r3, [pc, #284]	; (80012dc <CompararCarta+0x1e4>)
 80011be:	6819      	ldr	r1, [r3, #0]
 80011c0:	4b46      	ldr	r3, [pc, #280]	; (80012dc <CompararCarta+0x1e4>)
 80011c2:	685b      	ldr	r3, [r3, #4]
 80011c4:	4844      	ldr	r0, [pc, #272]	; (80012d8 <CompararCarta+0x1e0>)
 80011c6:	0089      	lsls	r1, r1, #2
 80011c8:	440b      	add	r3, r1
 80011ca:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80011ce:	429a      	cmp	r2, r3
 80011d0:	d114      	bne.n	80011fc <CompararCarta+0x104>
			{
				posicoes[pos_selec1[0]][pos_selec1[1]] = 8;
 80011d2:	4b3e      	ldr	r3, [pc, #248]	; (80012cc <CompararCarta+0x1d4>)
 80011d4:	681a      	ldr	r2, [r3, #0]
 80011d6:	4b3d      	ldr	r3, [pc, #244]	; (80012cc <CompararCarta+0x1d4>)
 80011d8:	685b      	ldr	r3, [r3, #4]
 80011da:	493f      	ldr	r1, [pc, #252]	; (80012d8 <CompararCarta+0x1e0>)
 80011dc:	0092      	lsls	r2, r2, #2
 80011de:	4413      	add	r3, r2
 80011e0:	2208      	movs	r2, #8
 80011e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				posicoes[pos_selec2[0]][pos_selec2[1]] = 8;
 80011e6:	4b3d      	ldr	r3, [pc, #244]	; (80012dc <CompararCarta+0x1e4>)
 80011e8:	681a      	ldr	r2, [r3, #0]
 80011ea:	4b3c      	ldr	r3, [pc, #240]	; (80012dc <CompararCarta+0x1e4>)
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	493a      	ldr	r1, [pc, #232]	; (80012d8 <CompararCarta+0x1e0>)
 80011f0:	0092      	lsls	r2, r2, #2
 80011f2:	4413      	add	r3, r2
 80011f4:	2208      	movs	r2, #8
 80011f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80011fa:	e047      	b.n	800128c <CompararCarta+0x194>
			}
			else
			{
				ST7735_DrawImage((PaddingX + pos_selec1[0]*(PaddingX+15)), (pos_selec1[1]*(15+PaddingY))+PaddingY, 15, 15, Carta);
 80011fc:	4b33      	ldr	r3, [pc, #204]	; (80012cc <CompararCarta+0x1d4>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	b29b      	uxth	r3, r3
 8001202:	4a37      	ldr	r2, [pc, #220]	; (80012e0 <CompararCarta+0x1e8>)
 8001204:	6812      	ldr	r2, [r2, #0]
 8001206:	320f      	adds	r2, #15
 8001208:	b292      	uxth	r2, r2
 800120a:	fb02 f303 	mul.w	r3, r2, r3
 800120e:	b29a      	uxth	r2, r3
 8001210:	4b33      	ldr	r3, [pc, #204]	; (80012e0 <CompararCarta+0x1e8>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	b29b      	uxth	r3, r3
 8001216:	4413      	add	r3, r2
 8001218:	b298      	uxth	r0, r3
 800121a:	4b2c      	ldr	r3, [pc, #176]	; (80012cc <CompararCarta+0x1d4>)
 800121c:	685b      	ldr	r3, [r3, #4]
 800121e:	b29b      	uxth	r3, r3
 8001220:	4a30      	ldr	r2, [pc, #192]	; (80012e4 <CompararCarta+0x1ec>)
 8001222:	6812      	ldr	r2, [r2, #0]
 8001224:	320f      	adds	r2, #15
 8001226:	b292      	uxth	r2, r2
 8001228:	fb02 f303 	mul.w	r3, r2, r3
 800122c:	b29a      	uxth	r2, r3
 800122e:	4b2d      	ldr	r3, [pc, #180]	; (80012e4 <CompararCarta+0x1ec>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	b29b      	uxth	r3, r3
 8001234:	4413      	add	r3, r2
 8001236:	b299      	uxth	r1, r3
 8001238:	4b2b      	ldr	r3, [pc, #172]	; (80012e8 <CompararCarta+0x1f0>)
 800123a:	9300      	str	r3, [sp, #0]
 800123c:	230f      	movs	r3, #15
 800123e:	220f      	movs	r2, #15
 8001240:	f7ff f9c7 	bl	80005d2 <ST7735_DrawImage>
				ST7735_DrawImage((PaddingX + pos_selec2[0]*(PaddingX+15)), (pos_selec2[1]*(15+PaddingY))+PaddingY, 15, 15, Carta);
 8001244:	4b25      	ldr	r3, [pc, #148]	; (80012dc <CompararCarta+0x1e4>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	b29b      	uxth	r3, r3
 800124a:	4a25      	ldr	r2, [pc, #148]	; (80012e0 <CompararCarta+0x1e8>)
 800124c:	6812      	ldr	r2, [r2, #0]
 800124e:	320f      	adds	r2, #15
 8001250:	b292      	uxth	r2, r2
 8001252:	fb02 f303 	mul.w	r3, r2, r3
 8001256:	b29a      	uxth	r2, r3
 8001258:	4b21      	ldr	r3, [pc, #132]	; (80012e0 <CompararCarta+0x1e8>)
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	b29b      	uxth	r3, r3
 800125e:	4413      	add	r3, r2
 8001260:	b298      	uxth	r0, r3
 8001262:	4b1e      	ldr	r3, [pc, #120]	; (80012dc <CompararCarta+0x1e4>)
 8001264:	685b      	ldr	r3, [r3, #4]
 8001266:	b29b      	uxth	r3, r3
 8001268:	4a1e      	ldr	r2, [pc, #120]	; (80012e4 <CompararCarta+0x1ec>)
 800126a:	6812      	ldr	r2, [r2, #0]
 800126c:	320f      	adds	r2, #15
 800126e:	b292      	uxth	r2, r2
 8001270:	fb02 f303 	mul.w	r3, r2, r3
 8001274:	b29a      	uxth	r2, r3
 8001276:	4b1b      	ldr	r3, [pc, #108]	; (80012e4 <CompararCarta+0x1ec>)
 8001278:	681b      	ldr	r3, [r3, #0]
 800127a:	b29b      	uxth	r3, r3
 800127c:	4413      	add	r3, r2
 800127e:	b299      	uxth	r1, r3
 8001280:	4b19      	ldr	r3, [pc, #100]	; (80012e8 <CompararCarta+0x1f0>)
 8001282:	9300      	str	r3, [sp, #0]
 8001284:	230f      	movs	r3, #15
 8001286:	220f      	movs	r2, #15
 8001288:	f7ff f9a3 	bl	80005d2 <ST7735_DrawImage>
			}
			pos_selec1[0]= 8;
 800128c:	4b0f      	ldr	r3, [pc, #60]	; (80012cc <CompararCarta+0x1d4>)
 800128e:	2208      	movs	r2, #8
 8001290:	601a      	str	r2, [r3, #0]
			pos_selec1[1]= 8;
 8001292:	4b0e      	ldr	r3, [pc, #56]	; (80012cc <CompararCarta+0x1d4>)
 8001294:	2208      	movs	r2, #8
 8001296:	605a      	str	r2, [r3, #4]
			pos_selec2[0]= 8;
 8001298:	4b10      	ldr	r3, [pc, #64]	; (80012dc <CompararCarta+0x1e4>)
 800129a:	2208      	movs	r2, #8
 800129c:	601a      	str	r2, [r3, #0]
			pos_selec2[1]= 8;
 800129e:	4b0f      	ldr	r3, [pc, #60]	; (80012dc <CompararCarta+0x1e4>)
 80012a0:	2208      	movs	r2, #8
 80012a2:	605a      	str	r2, [r3, #4]
			if(QuantidadeJogadores == 2)
 80012a4:	4b11      	ldr	r3, [pc, #68]	; (80012ec <CompararCarta+0x1f4>)
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	2b02      	cmp	r3, #2
 80012aa:	d102      	bne.n	80012b2 <CompararCarta+0x1ba>
			{
				ModificarJogador();
 80012ac:	f000 fa2a 	bl	8001704 <ModificarJogador>
			if(QuantidadeJogadores == 2)
 80012b0:	e009      	b.n	80012c6 <CompararCarta+0x1ce>
			}
			else
			{
				AtualizarTentativas();
 80012b2:	f000 f85d 	bl	8001370 <AtualizarTentativas>
			if(QuantidadeJogadores == 2)
 80012b6:	e006      	b.n	80012c6 <CompararCarta+0x1ce>
			}
		}
		else
		{
			pos_selec2[0]= 8;
 80012b8:	4b08      	ldr	r3, [pc, #32]	; (80012dc <CompararCarta+0x1e4>)
 80012ba:	2208      	movs	r2, #8
 80012bc:	601a      	str	r2, [r3, #0]
			pos_selec2[1]= 8;
 80012be:	4b07      	ldr	r3, [pc, #28]	; (80012dc <CompararCarta+0x1e4>)
 80012c0:	2208      	movs	r2, #8
 80012c2:	605a      	str	r2, [r3, #4]
		}
	}
}
 80012c4:	e7ff      	b.n	80012c6 <CompararCarta+0x1ce>
 80012c6:	bf00      	nop
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	2000006c 	.word	0x2000006c
 80012d0:	20000128 	.word	0x20000128
 80012d4:	20000124 	.word	0x20000124
 80012d8:	2000002c 	.word	0x2000002c
 80012dc:	20000074 	.word	0x20000074
 80012e0:	2000011c 	.word	0x2000011c
 80012e4:	20000120 	.word	0x20000120
 80012e8:	0800d2ac 	.word	0x0800d2ac
 80012ec:	20000108 	.word	0x20000108

080012f0 <VerificarFimDeJogo>:

void VerificarFimDeJogo()
{
 80012f0:	b480      	push	{r7}
 80012f2:	b085      	sub	sp, #20
 80012f4:	af00      	add	r7, sp, #0
	int ContadorJogadas = 0;
 80012f6:	2300      	movs	r3, #0
 80012f8:	60fb      	str	r3, [r7, #12]
	for(int j = 0; j < ColunaMatriz; j++)
 80012fa:	2300      	movs	r3, #0
 80012fc:	60bb      	str	r3, [r7, #8]
 80012fe:	e019      	b.n	8001334 <VerificarFimDeJogo+0x44>
	{
		for(int i = 0; i < LinhaMatriz; i++)
 8001300:	2300      	movs	r3, #0
 8001302:	607b      	str	r3, [r7, #4]
 8001304:	e00e      	b.n	8001324 <VerificarFimDeJogo+0x34>
		{
			if(posicoes[j][i] == 8)
 8001306:	4916      	ldr	r1, [pc, #88]	; (8001360 <VerificarFimDeJogo+0x70>)
 8001308:	68bb      	ldr	r3, [r7, #8]
 800130a:	009a      	lsls	r2, r3, #2
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	4413      	add	r3, r2
 8001310:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001314:	2b08      	cmp	r3, #8
 8001316:	d102      	bne.n	800131e <VerificarFimDeJogo+0x2e>
			{
				ContadorJogadas++;
 8001318:	68fb      	ldr	r3, [r7, #12]
 800131a:	3301      	adds	r3, #1
 800131c:	60fb      	str	r3, [r7, #12]
		for(int i = 0; i < LinhaMatriz; i++)
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	3301      	adds	r3, #1
 8001322:	607b      	str	r3, [r7, #4]
 8001324:	4b0f      	ldr	r3, [pc, #60]	; (8001364 <VerificarFimDeJogo+0x74>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	687a      	ldr	r2, [r7, #4]
 800132a:	429a      	cmp	r2, r3
 800132c:	dbeb      	blt.n	8001306 <VerificarFimDeJogo+0x16>
	for(int j = 0; j < ColunaMatriz; j++)
 800132e:	68bb      	ldr	r3, [r7, #8]
 8001330:	3301      	adds	r3, #1
 8001332:	60bb      	str	r3, [r7, #8]
 8001334:	4b0c      	ldr	r3, [pc, #48]	; (8001368 <VerificarFimDeJogo+0x78>)
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	68ba      	ldr	r2, [r7, #8]
 800133a:	429a      	cmp	r2, r3
 800133c:	dbe0      	blt.n	8001300 <VerificarFimDeJogo+0x10>
			}
		}
	}
	if(ContadorJogadas == (ColunaMatriz * LinhaMatriz))JogoAndamento = 0;
 800133e:	4b0a      	ldr	r3, [pc, #40]	; (8001368 <VerificarFimDeJogo+0x78>)
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	4a08      	ldr	r2, [pc, #32]	; (8001364 <VerificarFimDeJogo+0x74>)
 8001344:	6812      	ldr	r2, [r2, #0]
 8001346:	fb02 f303 	mul.w	r3, r2, r3
 800134a:	68fa      	ldr	r2, [r7, #12]
 800134c:	429a      	cmp	r2, r3
 800134e:	d102      	bne.n	8001356 <VerificarFimDeJogo+0x66>
 8001350:	4b06      	ldr	r3, [pc, #24]	; (800136c <VerificarFimDeJogo+0x7c>)
 8001352:	2200      	movs	r2, #0
 8001354:	601a      	str	r2, [r3, #0]
}
 8001356:	bf00      	nop
 8001358:	3714      	adds	r7, #20
 800135a:	46bd      	mov	sp, r7
 800135c:	bc80      	pop	{r7}
 800135e:	4770      	bx	lr
 8001360:	2000002c 	.word	0x2000002c
 8001364:	20000118 	.word	0x20000118
 8001368:	20000114 	.word	0x20000114
 800136c:	2000012c 	.word	0x2000012c

08001370 <AtualizarTentativas>:

void AtualizarTentativas()
{
 8001370:	b480      	push	{r7}
 8001372:	af00      	add	r7, sp, #0
	tentativas++;
 8001374:	4b04      	ldr	r3, [pc, #16]	; (8001388 <AtualizarTentativas+0x18>)
 8001376:	681b      	ldr	r3, [r3, #0]
 8001378:	3301      	adds	r3, #1
 800137a:	4a03      	ldr	r2, [pc, #12]	; (8001388 <AtualizarTentativas+0x18>)
 800137c:	6013      	str	r3, [r2, #0]
}
 800137e:	bf00      	nop
 8001380:	46bd      	mov	sp, r7
 8001382:	bc80      	pop	{r7}
 8001384:	4770      	bx	lr
 8001386:	bf00      	nop
 8001388:	20000130 	.word	0x20000130

0800138c <AtualizarRecorde>:

void AtualizarRecorde()
{
 800138c:	b480      	push	{r7}
 800138e:	af00      	add	r7, sp, #0
	if(TentativasRecorde == 0)
 8001390:	4b0b      	ldr	r3, [pc, #44]	; (80013c0 <AtualizarRecorde+0x34>)
 8001392:	681b      	ldr	r3, [r3, #0]
 8001394:	2b00      	cmp	r3, #0
 8001396:	d104      	bne.n	80013a2 <AtualizarRecorde+0x16>
	{
		TentativasRecorde = tentativas;
 8001398:	4b0a      	ldr	r3, [pc, #40]	; (80013c4 <AtualizarRecorde+0x38>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	4a08      	ldr	r2, [pc, #32]	; (80013c0 <AtualizarRecorde+0x34>)
 800139e:	6013      	str	r3, [r2, #0]
	}
	else if(tentativas < TentativasRecorde)
	{
		TentativasRecorde = tentativas;
	}
}
 80013a0:	e009      	b.n	80013b6 <AtualizarRecorde+0x2a>
	else if(tentativas < TentativasRecorde)
 80013a2:	4b08      	ldr	r3, [pc, #32]	; (80013c4 <AtualizarRecorde+0x38>)
 80013a4:	681a      	ldr	r2, [r3, #0]
 80013a6:	4b06      	ldr	r3, [pc, #24]	; (80013c0 <AtualizarRecorde+0x34>)
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	429a      	cmp	r2, r3
 80013ac:	da03      	bge.n	80013b6 <AtualizarRecorde+0x2a>
		TentativasRecorde = tentativas;
 80013ae:	4b05      	ldr	r3, [pc, #20]	; (80013c4 <AtualizarRecorde+0x38>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	4a03      	ldr	r2, [pc, #12]	; (80013c0 <AtualizarRecorde+0x34>)
 80013b4:	6013      	str	r3, [r2, #0]
}
 80013b6:	bf00      	nop
 80013b8:	46bd      	mov	sp, r7
 80013ba:	bc80      	pop	{r7}
 80013bc:	4770      	bx	lr
 80013be:	bf00      	nop
 80013c0:	20000134 	.word	0x20000134
 80013c4:	20000130 	.word	0x20000130

080013c8 <ExibirFimDeJogo>:

void ExibirFimDeJogo()
{
 80013c8:	b580      	push	{r7, lr}
 80013ca:	b084      	sub	sp, #16
 80013cc:	af04      	add	r7, sp, #16
	if(QuantidadeJogadores == 1)
 80013ce:	4b90      	ldr	r3, [pc, #576]	; (8001610 <ExibirFimDeJogo+0x248>)
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	2b01      	cmp	r3, #1
 80013d4:	f040 80bf 	bne.w	8001556 <ExibirFimDeJogo+0x18e>
	{
		while(1)
		{
			ST7735_FillScreen(BLACK);
 80013d8:	2000      	movs	r0, #0
 80013da:	f7ff f8e9 	bl	80005b0 <ST7735_FillScreen>
			ST7735_DrawImage(40, 10, 80, 60, ImagemVitoria1);
 80013de:	4b8d      	ldr	r3, [pc, #564]	; (8001614 <ExibirFimDeJogo+0x24c>)
 80013e0:	9300      	str	r3, [sp, #0]
 80013e2:	233c      	movs	r3, #60	; 0x3c
 80013e4:	2250      	movs	r2, #80	; 0x50
 80013e6:	210a      	movs	r1, #10
 80013e8:	2028      	movs	r0, #40	; 0x28
 80013ea:	f7ff f8f2 	bl	80005d2 <ST7735_DrawImage>
			HAL_Delay(100);
 80013ee:	2064      	movs	r0, #100	; 0x64
 80013f0:	f000 fb1a 	bl	8001a28 <HAL_Delay>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 80013f4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80013f8:	4887      	ldr	r0, [pc, #540]	; (8001618 <ExibirFimDeJogo+0x250>)
 80013fa:	f000 fd75 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80013fe:	4603      	mov	r3, r0
 8001400:	2b00      	cmp	r3, #0
 8001402:	d042      	beq.n	800148a <ExibirFimDeJogo+0xc2>
			ST7735_FillScreen(BLACK);
 8001404:	2000      	movs	r0, #0
 8001406:	f7ff f8d3 	bl	80005b0 <ST7735_FillScreen>
			ST7735_DrawImage(40, 10, 80, 60, ImagemVitoria2);
 800140a:	4b84      	ldr	r3, [pc, #528]	; (800161c <ExibirFimDeJogo+0x254>)
 800140c:	9300      	str	r3, [sp, #0]
 800140e:	233c      	movs	r3, #60	; 0x3c
 8001410:	2250      	movs	r2, #80	; 0x50
 8001412:	210a      	movs	r1, #10
 8001414:	2028      	movs	r0, #40	; 0x28
 8001416:	f7ff f8dc 	bl	80005d2 <ST7735_DrawImage>
			HAL_Delay(100);
 800141a:	2064      	movs	r0, #100	; 0x64
 800141c:	f000 fb04 	bl	8001a28 <HAL_Delay>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 8001420:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001424:	487c      	ldr	r0, [pc, #496]	; (8001618 <ExibirFimDeJogo+0x250>)
 8001426:	f000 fd5f 	bl	8001ee8 <HAL_GPIO_ReadPin>
 800142a:	4603      	mov	r3, r0
 800142c:	2b00      	cmp	r3, #0
 800142e:	d02e      	beq.n	800148e <ExibirFimDeJogo+0xc6>
			ST7735_FillScreen(BLACK);
 8001430:	2000      	movs	r0, #0
 8001432:	f7ff f8bd 	bl	80005b0 <ST7735_FillScreen>
			ST7735_DrawImage(40, 10, 80, 60, ImagemVitoria3);
 8001436:	4b7a      	ldr	r3, [pc, #488]	; (8001620 <ExibirFimDeJogo+0x258>)
 8001438:	9300      	str	r3, [sp, #0]
 800143a:	233c      	movs	r3, #60	; 0x3c
 800143c:	2250      	movs	r2, #80	; 0x50
 800143e:	210a      	movs	r1, #10
 8001440:	2028      	movs	r0, #40	; 0x28
 8001442:	f7ff f8c6 	bl	80005d2 <ST7735_DrawImage>
			HAL_Delay(100);
 8001446:	2064      	movs	r0, #100	; 0x64
 8001448:	f000 faee 	bl	8001a28 <HAL_Delay>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 800144c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001450:	4871      	ldr	r0, [pc, #452]	; (8001618 <ExibirFimDeJogo+0x250>)
 8001452:	f000 fd49 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8001456:	4603      	mov	r3, r0
 8001458:	2b00      	cmp	r3, #0
 800145a:	d01a      	beq.n	8001492 <ExibirFimDeJogo+0xca>
			ST7735_FillScreen(BLACK);
 800145c:	2000      	movs	r0, #0
 800145e:	f7ff f8a7 	bl	80005b0 <ST7735_FillScreen>
			ST7735_DrawImage(40, 10, 80, 60, ImagemVitoria4);
 8001462:	4b70      	ldr	r3, [pc, #448]	; (8001624 <ExibirFimDeJogo+0x25c>)
 8001464:	9300      	str	r3, [sp, #0]
 8001466:	233c      	movs	r3, #60	; 0x3c
 8001468:	2250      	movs	r2, #80	; 0x50
 800146a:	210a      	movs	r1, #10
 800146c:	2028      	movs	r0, #40	; 0x28
 800146e:	f7ff f8b0 	bl	80005d2 <ST7735_DrawImage>
			HAL_Delay(100);
 8001472:	2064      	movs	r0, #100	; 0x64
 8001474:	f000 fad8 	bl	8001a28 <HAL_Delay>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 8001478:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800147c:	4866      	ldr	r0, [pc, #408]	; (8001618 <ExibirFimDeJogo+0x250>)
 800147e:	f000 fd33 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8001482:	4603      	mov	r3, r0
 8001484:	2b00      	cmp	r3, #0
 8001486:	d006      	beq.n	8001496 <ExibirFimDeJogo+0xce>
			ST7735_FillScreen(BLACK);
 8001488:	e7a6      	b.n	80013d8 <ExibirFimDeJogo+0x10>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 800148a:	bf00      	nop
 800148c:	e004      	b.n	8001498 <ExibirFimDeJogo+0xd0>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 800148e:	bf00      	nop
 8001490:	e002      	b.n	8001498 <ExibirFimDeJogo+0xd0>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 8001492:	bf00      	nop
 8001494:	e000      	b.n	8001498 <ExibirFimDeJogo+0xd0>
			if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 0)break;
 8001496:	bf00      	nop
		}
		HAL_Delay(500);
 8001498:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800149c:	f000 fac4 	bl	8001a28 <HAL_Delay>
		itoa(tentativas, po, 10);
 80014a0:	4b61      	ldr	r3, [pc, #388]	; (8001628 <ExibirFimDeJogo+0x260>)
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	220a      	movs	r2, #10
 80014a6:	4961      	ldr	r1, [pc, #388]	; (800162c <ExibirFimDeJogo+0x264>)
 80014a8:	4618      	mov	r0, r3
 80014aa:	f001 fbdf 	bl	8002c6c <itoa>
		ST7735_FillScreen(BLACK);
 80014ae:	2000      	movs	r0, #0
 80014b0:	f7ff f87e 	bl	80005b0 <ST7735_FillScreen>
		ST7735_WriteString(0, 0, "Tentativas:", Font_11x18, WHITE, BLACK);
 80014b4:	4b5e      	ldr	r3, [pc, #376]	; (8001630 <ExibirFimDeJogo+0x268>)
 80014b6:	2200      	movs	r2, #0
 80014b8:	9202      	str	r2, [sp, #8]
 80014ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014be:	9201      	str	r2, [sp, #4]
 80014c0:	685a      	ldr	r2, [r3, #4]
 80014c2:	9200      	str	r2, [sp, #0]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	4a5b      	ldr	r2, [pc, #364]	; (8001634 <ExibirFimDeJogo+0x26c>)
 80014c8:	2100      	movs	r1, #0
 80014ca:	2000      	movs	r0, #0
 80014cc:	f7fe ffb2 	bl	8000434 <ST7735_WriteString>
		ST7735_WriteString(120, 00, po, Font_11x18, WHITE, BLACK);
 80014d0:	4b57      	ldr	r3, [pc, #348]	; (8001630 <ExibirFimDeJogo+0x268>)
 80014d2:	2200      	movs	r2, #0
 80014d4:	9202      	str	r2, [sp, #8]
 80014d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014da:	9201      	str	r2, [sp, #4]
 80014dc:	685a      	ldr	r2, [r3, #4]
 80014de:	9200      	str	r2, [sp, #0]
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	4a52      	ldr	r2, [pc, #328]	; (800162c <ExibirFimDeJogo+0x264>)
 80014e4:	2100      	movs	r1, #0
 80014e6:	2078      	movs	r0, #120	; 0x78
 80014e8:	f7fe ffa4 	bl	8000434 <ST7735_WriteString>
		ST7735_WriteString(0, 20, "Recorde:", Font_11x18, WHITE, BLACK);
 80014ec:	4b50      	ldr	r3, [pc, #320]	; (8001630 <ExibirFimDeJogo+0x268>)
 80014ee:	2200      	movs	r2, #0
 80014f0:	9202      	str	r2, [sp, #8]
 80014f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014f6:	9201      	str	r2, [sp, #4]
 80014f8:	685a      	ldr	r2, [r3, #4]
 80014fa:	9200      	str	r2, [sp, #0]
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	4a4e      	ldr	r2, [pc, #312]	; (8001638 <ExibirFimDeJogo+0x270>)
 8001500:	2114      	movs	r1, #20
 8001502:	2000      	movs	r0, #0
 8001504:	f7fe ff96 	bl	8000434 <ST7735_WriteString>
		itoa(TentativasRecorde, po, 10);
 8001508:	4b4c      	ldr	r3, [pc, #304]	; (800163c <ExibirFimDeJogo+0x274>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	220a      	movs	r2, #10
 800150e:	4947      	ldr	r1, [pc, #284]	; (800162c <ExibirFimDeJogo+0x264>)
 8001510:	4618      	mov	r0, r3
 8001512:	f001 fbab 	bl	8002c6c <itoa>
		ST7735_WriteString(100, 20, po, Font_11x18, WHITE, BLACK);
 8001516:	4b46      	ldr	r3, [pc, #280]	; (8001630 <ExibirFimDeJogo+0x268>)
 8001518:	2200      	movs	r2, #0
 800151a:	9202      	str	r2, [sp, #8]
 800151c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001520:	9201      	str	r2, [sp, #4]
 8001522:	685a      	ldr	r2, [r3, #4]
 8001524:	9200      	str	r2, [sp, #0]
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	4a40      	ldr	r2, [pc, #256]	; (800162c <ExibirFimDeJogo+0x264>)
 800152a:	2114      	movs	r1, #20
 800152c:	2064      	movs	r0, #100	; 0x64
 800152e:	f7fe ff81 	bl	8000434 <ST7735_WriteString>
		HAL_Delay(1000);
 8001532:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001536:	f000 fa77 	bl	8001a28 <HAL_Delay>
		while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 1);
 800153a:	bf00      	nop
 800153c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001540:	4835      	ldr	r0, [pc, #212]	; (8001618 <ExibirFimDeJogo+0x250>)
 8001542:	f000 fcd1 	bl	8001ee8 <HAL_GPIO_ReadPin>
 8001546:	4603      	mov	r3, r0
 8001548:	2b01      	cmp	r3, #1
 800154a:	d0f7      	beq.n	800153c <ExibirFimDeJogo+0x174>
		HAL_Delay(500);
 800154c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001550:	f000 fa6a 	bl	8001a28 <HAL_Delay>
		itoa(PontosJogador2, po, 10);
		ST7735_WriteString(0, 60, po, Font_11x18, WHITE, BLACK);
		while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 1);
		HAL_Delay(500);
	}
}
 8001554:	e058      	b.n	8001608 <ExibirFimDeJogo+0x240>
		ST7735_FillScreen(BLACK);
 8001556:	2000      	movs	r0, #0
 8001558:	f7ff f82a 	bl	80005b0 <ST7735_FillScreen>
		ST7735_FillScreen(BLACK);
 800155c:	2000      	movs	r0, #0
 800155e:	f7ff f827 	bl	80005b0 <ST7735_FillScreen>
		ST7735_WriteString(0, 0, "Tentativas P1:", Font_11x18, WHITE, BLACK);
 8001562:	4b33      	ldr	r3, [pc, #204]	; (8001630 <ExibirFimDeJogo+0x268>)
 8001564:	2200      	movs	r2, #0
 8001566:	9202      	str	r2, [sp, #8]
 8001568:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800156c:	9201      	str	r2, [sp, #4]
 800156e:	685a      	ldr	r2, [r3, #4]
 8001570:	9200      	str	r2, [sp, #0]
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	4a32      	ldr	r2, [pc, #200]	; (8001640 <ExibirFimDeJogo+0x278>)
 8001576:	2100      	movs	r1, #0
 8001578:	2000      	movs	r0, #0
 800157a:	f7fe ff5b 	bl	8000434 <ST7735_WriteString>
		itoa(PontosJogador1, po, 10);
 800157e:	4b31      	ldr	r3, [pc, #196]	; (8001644 <ExibirFimDeJogo+0x27c>)
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	220a      	movs	r2, #10
 8001584:	4929      	ldr	r1, [pc, #164]	; (800162c <ExibirFimDeJogo+0x264>)
 8001586:	4618      	mov	r0, r3
 8001588:	f001 fb70 	bl	8002c6c <itoa>
		ST7735_WriteString(0, 20, po, Font_11x18, WHITE, BLACK);
 800158c:	4b28      	ldr	r3, [pc, #160]	; (8001630 <ExibirFimDeJogo+0x268>)
 800158e:	2200      	movs	r2, #0
 8001590:	9202      	str	r2, [sp, #8]
 8001592:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001596:	9201      	str	r2, [sp, #4]
 8001598:	685a      	ldr	r2, [r3, #4]
 800159a:	9200      	str	r2, [sp, #0]
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	4a23      	ldr	r2, [pc, #140]	; (800162c <ExibirFimDeJogo+0x264>)
 80015a0:	2114      	movs	r1, #20
 80015a2:	2000      	movs	r0, #0
 80015a4:	f7fe ff46 	bl	8000434 <ST7735_WriteString>
		ST7735_WriteString(0, 40, "Tentativas P2:", Font_11x18, WHITE, BLACK);
 80015a8:	4b21      	ldr	r3, [pc, #132]	; (8001630 <ExibirFimDeJogo+0x268>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	9202      	str	r2, [sp, #8]
 80015ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015b2:	9201      	str	r2, [sp, #4]
 80015b4:	685a      	ldr	r2, [r3, #4]
 80015b6:	9200      	str	r2, [sp, #0]
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	4a23      	ldr	r2, [pc, #140]	; (8001648 <ExibirFimDeJogo+0x280>)
 80015bc:	2128      	movs	r1, #40	; 0x28
 80015be:	2000      	movs	r0, #0
 80015c0:	f7fe ff38 	bl	8000434 <ST7735_WriteString>
		itoa(PontosJogador2, po, 10);
 80015c4:	4b21      	ldr	r3, [pc, #132]	; (800164c <ExibirFimDeJogo+0x284>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	220a      	movs	r2, #10
 80015ca:	4918      	ldr	r1, [pc, #96]	; (800162c <ExibirFimDeJogo+0x264>)
 80015cc:	4618      	mov	r0, r3
 80015ce:	f001 fb4d 	bl	8002c6c <itoa>
		ST7735_WriteString(0, 60, po, Font_11x18, WHITE, BLACK);
 80015d2:	4b17      	ldr	r3, [pc, #92]	; (8001630 <ExibirFimDeJogo+0x268>)
 80015d4:	2200      	movs	r2, #0
 80015d6:	9202      	str	r2, [sp, #8]
 80015d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015dc:	9201      	str	r2, [sp, #4]
 80015de:	685a      	ldr	r2, [r3, #4]
 80015e0:	9200      	str	r2, [sp, #0]
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	4a11      	ldr	r2, [pc, #68]	; (800162c <ExibirFimDeJogo+0x264>)
 80015e6:	213c      	movs	r1, #60	; 0x3c
 80015e8:	2000      	movs	r0, #0
 80015ea:	f7fe ff23 	bl	8000434 <ST7735_WriteString>
		while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10) == 1);
 80015ee:	bf00      	nop
 80015f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80015f4:	4808      	ldr	r0, [pc, #32]	; (8001618 <ExibirFimDeJogo+0x250>)
 80015f6:	f000 fc77 	bl	8001ee8 <HAL_GPIO_ReadPin>
 80015fa:	4603      	mov	r3, r0
 80015fc:	2b01      	cmp	r3, #1
 80015fe:	d0f7      	beq.n	80015f0 <ExibirFimDeJogo+0x228>
		HAL_Delay(500);
 8001600:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001604:	f000 fa10 	bl	8001a28 <HAL_Delay>
}
 8001608:	bf00      	nop
 800160a:	46bd      	mov	sp, r7
 800160c:	bd80      	pop	{r7, pc}
 800160e:	bf00      	nop
 8001610:	20000108 	.word	0x20000108
 8001614:	0800ad2c 	.word	0x0800ad2c
 8001618:	40010800 	.word	0x40010800
 800161c:	080087ac 	.word	0x080087ac
 8001620:	0800622c 	.word	0x0800622c
 8001624:	08003cac 	.word	0x08003cac
 8001628:	20000130 	.word	0x20000130
 800162c:	20000144 	.word	0x20000144
 8001630:	20000000 	.word	0x20000000
 8001634:	08002e98 	.word	0x08002e98
 8001638:	08002e74 	.word	0x08002e74
 800163c:	20000134 	.word	0x20000134
 8001640:	08002ea4 	.word	0x08002ea4
 8001644:	2000010c 	.word	0x2000010c
 8001648:	08002eb4 	.word	0x08002eb4
 800164c:	20000110 	.word	0x20000110

08001650 <MostrarCartas>:

void MostrarCartas()
{
 8001650:	b590      	push	{r4, r7, lr}
 8001652:	b085      	sub	sp, #20
 8001654:	af02      	add	r7, sp, #8
	for(int j = 0; j < ColunaMatriz; j++)
 8001656:	2300      	movs	r3, #0
 8001658:	607b      	str	r3, [r7, #4]
 800165a:	e03d      	b.n	80016d8 <MostrarCartas+0x88>
	{
		for(int i = 0; i < LinhaMatriz; i++)
 800165c:	2300      	movs	r3, #0
 800165e:	603b      	str	r3, [r7, #0]
 8001660:	e032      	b.n	80016c8 <MostrarCartas+0x78>
		{
			ST7735_FillRectangle((PaddingX + j*(PaddingX+15)), (i*(15+PaddingY))+PaddingY, 15, 15, cores[posicoes[j][i]]);
 8001662:	4b22      	ldr	r3, [pc, #136]	; (80016ec <MostrarCartas+0x9c>)
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	330f      	adds	r3, #15
 8001668:	b29b      	uxth	r3, r3
 800166a:	687a      	ldr	r2, [r7, #4]
 800166c:	b292      	uxth	r2, r2
 800166e:	fb02 f303 	mul.w	r3, r2, r3
 8001672:	b29a      	uxth	r2, r3
 8001674:	4b1d      	ldr	r3, [pc, #116]	; (80016ec <MostrarCartas+0x9c>)
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	b29b      	uxth	r3, r3
 800167a:	4413      	add	r3, r2
 800167c:	b298      	uxth	r0, r3
 800167e:	4b1c      	ldr	r3, [pc, #112]	; (80016f0 <MostrarCartas+0xa0>)
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	330f      	adds	r3, #15
 8001684:	b29b      	uxth	r3, r3
 8001686:	683a      	ldr	r2, [r7, #0]
 8001688:	b292      	uxth	r2, r2
 800168a:	fb02 f303 	mul.w	r3, r2, r3
 800168e:	b29a      	uxth	r2, r3
 8001690:	4b17      	ldr	r3, [pc, #92]	; (80016f0 <MostrarCartas+0xa0>)
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	b29b      	uxth	r3, r3
 8001696:	4413      	add	r3, r2
 8001698:	b29c      	uxth	r4, r3
 800169a:	4916      	ldr	r1, [pc, #88]	; (80016f4 <MostrarCartas+0xa4>)
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	009a      	lsls	r2, r3, #2
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	4413      	add	r3, r2
 80016a4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80016a8:	4a13      	ldr	r2, [pc, #76]	; (80016f8 <MostrarCartas+0xa8>)
 80016aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80016ae:	b29b      	uxth	r3, r3
 80016b0:	9300      	str	r3, [sp, #0]
 80016b2:	230f      	movs	r3, #15
 80016b4:	220f      	movs	r2, #15
 80016b6:	4621      	mov	r1, r4
 80016b8:	f7fe ff06 	bl	80004c8 <ST7735_FillRectangle>
			HAL_Delay(200);
 80016bc:	20c8      	movs	r0, #200	; 0xc8
 80016be:	f000 f9b3 	bl	8001a28 <HAL_Delay>
		for(int i = 0; i < LinhaMatriz; i++)
 80016c2:	683b      	ldr	r3, [r7, #0]
 80016c4:	3301      	adds	r3, #1
 80016c6:	603b      	str	r3, [r7, #0]
 80016c8:	4b0c      	ldr	r3, [pc, #48]	; (80016fc <MostrarCartas+0xac>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	683a      	ldr	r2, [r7, #0]
 80016ce:	429a      	cmp	r2, r3
 80016d0:	dbc7      	blt.n	8001662 <MostrarCartas+0x12>
	for(int j = 0; j < ColunaMatriz; j++)
 80016d2:	687b      	ldr	r3, [r7, #4]
 80016d4:	3301      	adds	r3, #1
 80016d6:	607b      	str	r3, [r7, #4]
 80016d8:	4b09      	ldr	r3, [pc, #36]	; (8001700 <MostrarCartas+0xb0>)
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	687a      	ldr	r2, [r7, #4]
 80016de:	429a      	cmp	r2, r3
 80016e0:	dbbc      	blt.n	800165c <MostrarCartas+0xc>
		}
	}
}
 80016e2:	bf00      	nop
 80016e4:	370c      	adds	r7, #12
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bd90      	pop	{r4, r7, pc}
 80016ea:	bf00      	nop
 80016ec:	2000011c 	.word	0x2000011c
 80016f0:	20000120 	.word	0x20000120
 80016f4:	2000002c 	.word	0x2000002c
 80016f8:	2000000c 	.word	0x2000000c
 80016fc:	20000118 	.word	0x20000118
 8001700:	20000114 	.word	0x20000114

08001704 <ModificarJogador>:

void ModificarJogador()
{
 8001704:	b580      	push	{r7, lr}
 8001706:	af00      	add	r7, sp, #0
	if(VerificarJogador % 2 == 0)
 8001708:	4b12      	ldr	r3, [pc, #72]	; (8001754 <ModificarJogador+0x50>)
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	f003 0301 	and.w	r3, r3, #1
 8001710:	2b00      	cmp	r3, #0
 8001712:	d10a      	bne.n	800172a <ModificarJogador+0x26>
	{
		PontosJogador2++;
 8001714:	4b10      	ldr	r3, [pc, #64]	; (8001758 <ModificarJogador+0x54>)
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	3301      	adds	r3, #1
 800171a:	4a0f      	ldr	r2, [pc, #60]	; (8001758 <ModificarJogador+0x54>)
 800171c:	6013      	str	r3, [r2, #0]
		VerificarJogador++;
 800171e:	4b0d      	ldr	r3, [pc, #52]	; (8001754 <ModificarJogador+0x50>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	3301      	adds	r3, #1
 8001724:	4a0b      	ldr	r2, [pc, #44]	; (8001754 <ModificarJogador+0x50>)
 8001726:	6013      	str	r3, [r2, #0]
 8001728:	e009      	b.n	800173e <ModificarJogador+0x3a>
	}
	else
	{
		PontosJogador1++;
 800172a:	4b0c      	ldr	r3, [pc, #48]	; (800175c <ModificarJogador+0x58>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	3301      	adds	r3, #1
 8001730:	4a0a      	ldr	r2, [pc, #40]	; (800175c <ModificarJogador+0x58>)
 8001732:	6013      	str	r3, [r2, #0]
		VerificarJogador++;
 8001734:	4b07      	ldr	r3, [pc, #28]	; (8001754 <ModificarJogador+0x50>)
 8001736:	681b      	ldr	r3, [r3, #0]
 8001738:	3301      	adds	r3, #1
 800173a:	4a06      	ldr	r2, [pc, #24]	; (8001754 <ModificarJogador+0x50>)
 800173c:	6013      	str	r3, [r2, #0]
	}
	linha = 0;
 800173e:	4b08      	ldr	r3, [pc, #32]	; (8001760 <ModificarJogador+0x5c>)
 8001740:	2200      	movs	r2, #0
 8001742:	601a      	str	r2, [r3, #0]
	coluna = 0;
 8001744:	4b07      	ldr	r3, [pc, #28]	; (8001764 <ModificarJogador+0x60>)
 8001746:	2200      	movs	r2, #0
 8001748:	601a      	str	r2, [r3, #0]
	NavegarCursor(0);
 800174a:	2000      	movs	r0, #0
 800174c:	f7ff fbcc 	bl	8000ee8 <NavegarCursor>
}
 8001750:	bf00      	nop
 8001752:	bd80      	pop	{r7, pc}
 8001754:	20000008 	.word	0x20000008
 8001758:	20000110 	.word	0x20000110
 800175c:	2000010c 	.word	0x2000010c
 8001760:	20000124 	.word	0x20000124
 8001764:	20000128 	.word	0x20000128

08001768 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001768:	b480      	push	{r7}
 800176a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800176c:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800176e:	e7fe      	b.n	800176e <Error_Handler+0x6>

08001770 <HAL_MspInit>:
 8001770:	b480      	push	{r7}
 8001772:	b085      	sub	sp, #20
 8001774:	af00      	add	r7, sp, #0
 8001776:	4b15      	ldr	r3, [pc, #84]	; (80017cc <HAL_MspInit+0x5c>)
 8001778:	699b      	ldr	r3, [r3, #24]
 800177a:	4a14      	ldr	r2, [pc, #80]	; (80017cc <HAL_MspInit+0x5c>)
 800177c:	f043 0301 	orr.w	r3, r3, #1
 8001780:	6193      	str	r3, [r2, #24]
 8001782:	4b12      	ldr	r3, [pc, #72]	; (80017cc <HAL_MspInit+0x5c>)
 8001784:	699b      	ldr	r3, [r3, #24]
 8001786:	f003 0301 	and.w	r3, r3, #1
 800178a:	60bb      	str	r3, [r7, #8]
 800178c:	68bb      	ldr	r3, [r7, #8]
 800178e:	4b0f      	ldr	r3, [pc, #60]	; (80017cc <HAL_MspInit+0x5c>)
 8001790:	69db      	ldr	r3, [r3, #28]
 8001792:	4a0e      	ldr	r2, [pc, #56]	; (80017cc <HAL_MspInit+0x5c>)
 8001794:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001798:	61d3      	str	r3, [r2, #28]
 800179a:	4b0c      	ldr	r3, [pc, #48]	; (80017cc <HAL_MspInit+0x5c>)
 800179c:	69db      	ldr	r3, [r3, #28]
 800179e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017a2:	607b      	str	r3, [r7, #4]
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	4b0a      	ldr	r3, [pc, #40]	; (80017d0 <HAL_MspInit+0x60>)
 80017a8:	685b      	ldr	r3, [r3, #4]
 80017aa:	60fb      	str	r3, [r7, #12]
 80017ac:	68fb      	ldr	r3, [r7, #12]
 80017ae:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80017b2:	60fb      	str	r3, [r7, #12]
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80017ba:	60fb      	str	r3, [r7, #12]
 80017bc:	4a04      	ldr	r2, [pc, #16]	; (80017d0 <HAL_MspInit+0x60>)
 80017be:	68fb      	ldr	r3, [r7, #12]
 80017c0:	6053      	str	r3, [r2, #4]
 80017c2:	bf00      	nop
 80017c4:	3714      	adds	r7, #20
 80017c6:	46bd      	mov	sp, r7
 80017c8:	bc80      	pop	{r7}
 80017ca:	4770      	bx	lr
 80017cc:	40021000 	.word	0x40021000
 80017d0:	40010000 	.word	0x40010000

080017d4 <HAL_SPI_MspInit>:
 80017d4:	b580      	push	{r7, lr}
 80017d6:	b088      	sub	sp, #32
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
 80017dc:	f107 0310 	add.w	r3, r7, #16
 80017e0:	2200      	movs	r2, #0
 80017e2:	601a      	str	r2, [r3, #0]
 80017e4:	605a      	str	r2, [r3, #4]
 80017e6:	609a      	str	r2, [r3, #8]
 80017e8:	60da      	str	r2, [r3, #12]
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	4a15      	ldr	r2, [pc, #84]	; (8001844 <HAL_SPI_MspInit+0x70>)
 80017f0:	4293      	cmp	r3, r2
 80017f2:	d123      	bne.n	800183c <HAL_SPI_MspInit+0x68>
 80017f4:	4b14      	ldr	r3, [pc, #80]	; (8001848 <HAL_SPI_MspInit+0x74>)
 80017f6:	699b      	ldr	r3, [r3, #24]
 80017f8:	4a13      	ldr	r2, [pc, #76]	; (8001848 <HAL_SPI_MspInit+0x74>)
 80017fa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80017fe:	6193      	str	r3, [r2, #24]
 8001800:	4b11      	ldr	r3, [pc, #68]	; (8001848 <HAL_SPI_MspInit+0x74>)
 8001802:	699b      	ldr	r3, [r3, #24]
 8001804:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001808:	60fb      	str	r3, [r7, #12]
 800180a:	68fb      	ldr	r3, [r7, #12]
 800180c:	4b0e      	ldr	r3, [pc, #56]	; (8001848 <HAL_SPI_MspInit+0x74>)
 800180e:	699b      	ldr	r3, [r3, #24]
 8001810:	4a0d      	ldr	r2, [pc, #52]	; (8001848 <HAL_SPI_MspInit+0x74>)
 8001812:	f043 0304 	orr.w	r3, r3, #4
 8001816:	6193      	str	r3, [r2, #24]
 8001818:	4b0b      	ldr	r3, [pc, #44]	; (8001848 <HAL_SPI_MspInit+0x74>)
 800181a:	699b      	ldr	r3, [r3, #24]
 800181c:	f003 0304 	and.w	r3, r3, #4
 8001820:	60bb      	str	r3, [r7, #8]
 8001822:	68bb      	ldr	r3, [r7, #8]
 8001824:	23a0      	movs	r3, #160	; 0xa0
 8001826:	613b      	str	r3, [r7, #16]
 8001828:	2302      	movs	r3, #2
 800182a:	617b      	str	r3, [r7, #20]
 800182c:	2303      	movs	r3, #3
 800182e:	61fb      	str	r3, [r7, #28]
 8001830:	f107 0310 	add.w	r3, r7, #16
 8001834:	4619      	mov	r1, r3
 8001836:	4805      	ldr	r0, [pc, #20]	; (800184c <HAL_SPI_MspInit+0x78>)
 8001838:	f000 f9fc 	bl	8001c34 <HAL_GPIO_Init>
 800183c:	bf00      	nop
 800183e:	3720      	adds	r7, #32
 8001840:	46bd      	mov	sp, r7
 8001842:	bd80      	pop	{r7, pc}
 8001844:	40013000 	.word	0x40013000
 8001848:	40021000 	.word	0x40021000
 800184c:	40010800 	.word	0x40010800

08001850 <NMI_Handler>:
 8001850:	b480      	push	{r7}
 8001852:	af00      	add	r7, sp, #0
 8001854:	e7fe      	b.n	8001854 <NMI_Handler+0x4>

08001856 <HardFault_Handler>:
 8001856:	b480      	push	{r7}
 8001858:	af00      	add	r7, sp, #0
 800185a:	e7fe      	b.n	800185a <HardFault_Handler+0x4>

0800185c <MemManage_Handler>:
 800185c:	b480      	push	{r7}
 800185e:	af00      	add	r7, sp, #0
 8001860:	e7fe      	b.n	8001860 <MemManage_Handler+0x4>

08001862 <BusFault_Handler>:
 8001862:	b480      	push	{r7}
 8001864:	af00      	add	r7, sp, #0
 8001866:	e7fe      	b.n	8001866 <BusFault_Handler+0x4>

08001868 <UsageFault_Handler>:
 8001868:	b480      	push	{r7}
 800186a:	af00      	add	r7, sp, #0
 800186c:	e7fe      	b.n	800186c <UsageFault_Handler+0x4>

0800186e <SVC_Handler>:
 800186e:	b480      	push	{r7}
 8001870:	af00      	add	r7, sp, #0
 8001872:	bf00      	nop
 8001874:	46bd      	mov	sp, r7
 8001876:	bc80      	pop	{r7}
 8001878:	4770      	bx	lr

0800187a <DebugMon_Handler>:
 800187a:	b480      	push	{r7}
 800187c:	af00      	add	r7, sp, #0
 800187e:	bf00      	nop
 8001880:	46bd      	mov	sp, r7
 8001882:	bc80      	pop	{r7}
 8001884:	4770      	bx	lr

08001886 <PendSV_Handler>:
 8001886:	b480      	push	{r7}
 8001888:	af00      	add	r7, sp, #0
 800188a:	bf00      	nop
 800188c:	46bd      	mov	sp, r7
 800188e:	bc80      	pop	{r7}
 8001890:	4770      	bx	lr

08001892 <SysTick_Handler>:
 8001892:	b580      	push	{r7, lr}
 8001894:	af00      	add	r7, sp, #0
 8001896:	f000 f8ab 	bl	80019f0 <HAL_IncTick>
 800189a:	bf00      	nop
 800189c:	bd80      	pop	{r7, pc}
	...

080018a0 <_sbrk>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b086      	sub	sp, #24
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	4a14      	ldr	r2, [pc, #80]	; (80018fc <_sbrk+0x5c>)
 80018aa:	4b15      	ldr	r3, [pc, #84]	; (8001900 <_sbrk+0x60>)
 80018ac:	1ad3      	subs	r3, r2, r3
 80018ae:	617b      	str	r3, [r7, #20]
 80018b0:	697b      	ldr	r3, [r7, #20]
 80018b2:	613b      	str	r3, [r7, #16]
 80018b4:	4b13      	ldr	r3, [pc, #76]	; (8001904 <_sbrk+0x64>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d102      	bne.n	80018c2 <_sbrk+0x22>
 80018bc:	4b11      	ldr	r3, [pc, #68]	; (8001904 <_sbrk+0x64>)
 80018be:	4a12      	ldr	r2, [pc, #72]	; (8001908 <_sbrk+0x68>)
 80018c0:	601a      	str	r2, [r3, #0]
 80018c2:	4b10      	ldr	r3, [pc, #64]	; (8001904 <_sbrk+0x64>)
 80018c4:	681a      	ldr	r2, [r3, #0]
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	4413      	add	r3, r2
 80018ca:	693a      	ldr	r2, [r7, #16]
 80018cc:	429a      	cmp	r2, r3
 80018ce:	d207      	bcs.n	80018e0 <_sbrk+0x40>
 80018d0:	f001 f98a 	bl	8002be8 <__errno>
 80018d4:	4602      	mov	r2, r0
 80018d6:	230c      	movs	r3, #12
 80018d8:	6013      	str	r3, [r2, #0]
 80018da:	f04f 33ff 	mov.w	r3, #4294967295
 80018de:	e009      	b.n	80018f4 <_sbrk+0x54>
 80018e0:	4b08      	ldr	r3, [pc, #32]	; (8001904 <_sbrk+0x64>)
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	60fb      	str	r3, [r7, #12]
 80018e6:	4b07      	ldr	r3, [pc, #28]	; (8001904 <_sbrk+0x64>)
 80018e8:	681a      	ldr	r2, [r3, #0]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	4413      	add	r3, r2
 80018ee:	4a05      	ldr	r2, [pc, #20]	; (8001904 <_sbrk+0x64>)
 80018f0:	6013      	str	r3, [r2, #0]
 80018f2:	68fb      	ldr	r3, [r7, #12]
 80018f4:	4618      	mov	r0, r3
 80018f6:	3718      	adds	r7, #24
 80018f8:	46bd      	mov	sp, r7
 80018fa:	bd80      	pop	{r7, pc}
 80018fc:	20005000 	.word	0x20005000
 8001900:	00000400 	.word	0x00000400
 8001904:	20000138 	.word	0x20000138
 8001908:	200001a8 	.word	0x200001a8

0800190c <SystemInit>:
 800190c:	b480      	push	{r7}
 800190e:	af00      	add	r7, sp, #0
 8001910:	bf00      	nop
 8001912:	46bd      	mov	sp, r7
 8001914:	bc80      	pop	{r7}
 8001916:	4770      	bx	lr

08001918 <Reset_Handler>:
 8001918:	480c      	ldr	r0, [pc, #48]	; (800194c <LoopFillZerobss+0x12>)
 800191a:	490d      	ldr	r1, [pc, #52]	; (8001950 <LoopFillZerobss+0x16>)
 800191c:	4a0d      	ldr	r2, [pc, #52]	; (8001954 <LoopFillZerobss+0x1a>)
 800191e:	2300      	movs	r3, #0
 8001920:	e002      	b.n	8001928 <LoopCopyDataInit>

08001922 <CopyDataInit>:
 8001922:	58d4      	ldr	r4, [r2, r3]
 8001924:	50c4      	str	r4, [r0, r3]
 8001926:	3304      	adds	r3, #4

08001928 <LoopCopyDataInit>:
 8001928:	18c4      	adds	r4, r0, r3
 800192a:	428c      	cmp	r4, r1
 800192c:	d3f9      	bcc.n	8001922 <CopyDataInit>
 800192e:	4a0a      	ldr	r2, [pc, #40]	; (8001958 <LoopFillZerobss+0x1e>)
 8001930:	4c0a      	ldr	r4, [pc, #40]	; (800195c <LoopFillZerobss+0x22>)
 8001932:	2300      	movs	r3, #0
 8001934:	e001      	b.n	800193a <LoopFillZerobss>

08001936 <FillZerobss>:
 8001936:	6013      	str	r3, [r2, #0]
 8001938:	3204      	adds	r2, #4

0800193a <LoopFillZerobss>:
 800193a:	42a2      	cmp	r2, r4
 800193c:	d3fb      	bcc.n	8001936 <FillZerobss>
 800193e:	f7ff ffe5 	bl	800190c <SystemInit>
 8001942:	f001 f957 	bl	8002bf4 <__libc_init_array>
 8001946:	f7fe fe93 	bl	8000670 <main>
 800194a:	4770      	bx	lr
 800194c:	20000000 	.word	0x20000000
 8001950:	200000ec 	.word	0x200000ec
 8001954:	0800d58c 	.word	0x0800d58c
 8001958:	200000ec 	.word	0x200000ec
 800195c:	200001a8 	.word	0x200001a8

08001960 <ADC1_2_IRQHandler>:
 8001960:	e7fe      	b.n	8001960 <ADC1_2_IRQHandler>
	...

08001964 <HAL_Init>:
 8001964:	b580      	push	{r7, lr}
 8001966:	af00      	add	r7, sp, #0
 8001968:	4b08      	ldr	r3, [pc, #32]	; (800198c <HAL_Init+0x28>)
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	4a07      	ldr	r2, [pc, #28]	; (800198c <HAL_Init+0x28>)
 800196e:	f043 0310 	orr.w	r3, r3, #16
 8001972:	6013      	str	r3, [r2, #0]
 8001974:	2003      	movs	r0, #3
 8001976:	f000 f929 	bl	8001bcc <HAL_NVIC_SetPriorityGrouping>
 800197a:	2000      	movs	r0, #0
 800197c:	f000 f808 	bl	8001990 <HAL_InitTick>
 8001980:	f7ff fef6 	bl	8001770 <HAL_MspInit>
 8001984:	2300      	movs	r3, #0
 8001986:	4618      	mov	r0, r3
 8001988:	bd80      	pop	{r7, pc}
 800198a:	bf00      	nop
 800198c:	40022000 	.word	0x40022000

08001990 <HAL_InitTick>:
 8001990:	b580      	push	{r7, lr}
 8001992:	b082      	sub	sp, #8
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
 8001998:	4b12      	ldr	r3, [pc, #72]	; (80019e4 <HAL_InitTick+0x54>)
 800199a:	681a      	ldr	r2, [r3, #0]
 800199c:	4b12      	ldr	r3, [pc, #72]	; (80019e8 <HAL_InitTick+0x58>)
 800199e:	781b      	ldrb	r3, [r3, #0]
 80019a0:	4619      	mov	r1, r3
 80019a2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80019a6:	fbb3 f3f1 	udiv	r3, r3, r1
 80019aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80019ae:	4618      	mov	r0, r3
 80019b0:	f000 f933 	bl	8001c1a <HAL_SYSTICK_Config>
 80019b4:	4603      	mov	r3, r0
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	d001      	beq.n	80019be <HAL_InitTick+0x2e>
 80019ba:	2301      	movs	r3, #1
 80019bc:	e00e      	b.n	80019dc <HAL_InitTick+0x4c>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	2b0f      	cmp	r3, #15
 80019c2:	d80a      	bhi.n	80019da <HAL_InitTick+0x4a>
 80019c4:	2200      	movs	r2, #0
 80019c6:	6879      	ldr	r1, [r7, #4]
 80019c8:	f04f 30ff 	mov.w	r0, #4294967295
 80019cc:	f000 f909 	bl	8001be2 <HAL_NVIC_SetPriority>
 80019d0:	4a06      	ldr	r2, [pc, #24]	; (80019ec <HAL_InitTick+0x5c>)
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	6013      	str	r3, [r2, #0]
 80019d6:	2300      	movs	r3, #0
 80019d8:	e000      	b.n	80019dc <HAL_InitTick+0x4c>
 80019da:	2301      	movs	r3, #1
 80019dc:	4618      	mov	r0, r3
 80019de:	3708      	adds	r7, #8
 80019e0:	46bd      	mov	sp, r7
 80019e2:	bd80      	pop	{r7, pc}
 80019e4:	2000007c 	.word	0x2000007c
 80019e8:	20000084 	.word	0x20000084
 80019ec:	20000080 	.word	0x20000080

080019f0 <HAL_IncTick>:
 80019f0:	b480      	push	{r7}
 80019f2:	af00      	add	r7, sp, #0
 80019f4:	4b05      	ldr	r3, [pc, #20]	; (8001a0c <HAL_IncTick+0x1c>)
 80019f6:	781b      	ldrb	r3, [r3, #0]
 80019f8:	461a      	mov	r2, r3
 80019fa:	4b05      	ldr	r3, [pc, #20]	; (8001a10 <HAL_IncTick+0x20>)
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	4413      	add	r3, r2
 8001a00:	4a03      	ldr	r2, [pc, #12]	; (8001a10 <HAL_IncTick+0x20>)
 8001a02:	6013      	str	r3, [r2, #0]
 8001a04:	bf00      	nop
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bc80      	pop	{r7}
 8001a0a:	4770      	bx	lr
 8001a0c:	20000084 	.word	0x20000084
 8001a10:	200001a0 	.word	0x200001a0

08001a14 <HAL_GetTick>:
 8001a14:	b480      	push	{r7}
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	4b02      	ldr	r3, [pc, #8]	; (8001a24 <HAL_GetTick+0x10>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	4618      	mov	r0, r3
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	bc80      	pop	{r7}
 8001a22:	4770      	bx	lr
 8001a24:	200001a0 	.word	0x200001a0

08001a28 <HAL_Delay>:
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	b084      	sub	sp, #16
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
 8001a30:	f7ff fff0 	bl	8001a14 <HAL_GetTick>
 8001a34:	60b8      	str	r0, [r7, #8]
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	60fb      	str	r3, [r7, #12]
 8001a3a:	68fb      	ldr	r3, [r7, #12]
 8001a3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a40:	d005      	beq.n	8001a4e <HAL_Delay+0x26>
 8001a42:	4b09      	ldr	r3, [pc, #36]	; (8001a68 <HAL_Delay+0x40>)
 8001a44:	781b      	ldrb	r3, [r3, #0]
 8001a46:	461a      	mov	r2, r3
 8001a48:	68fb      	ldr	r3, [r7, #12]
 8001a4a:	4413      	add	r3, r2
 8001a4c:	60fb      	str	r3, [r7, #12]
 8001a4e:	bf00      	nop
 8001a50:	f7ff ffe0 	bl	8001a14 <HAL_GetTick>
 8001a54:	4602      	mov	r2, r0
 8001a56:	68bb      	ldr	r3, [r7, #8]
 8001a58:	1ad3      	subs	r3, r2, r3
 8001a5a:	68fa      	ldr	r2, [r7, #12]
 8001a5c:	429a      	cmp	r2, r3
 8001a5e:	d8f7      	bhi.n	8001a50 <HAL_Delay+0x28>
 8001a60:	bf00      	nop
 8001a62:	3710      	adds	r7, #16
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}
 8001a68:	20000084 	.word	0x20000084

08001a6c <__NVIC_SetPriorityGrouping>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	b085      	sub	sp, #20
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	f003 0307 	and.w	r3, r3, #7
 8001a7a:	60fb      	str	r3, [r7, #12]
 8001a7c:	4b0c      	ldr	r3, [pc, #48]	; (8001ab0 <__NVIC_SetPriorityGrouping+0x44>)
 8001a7e:	68db      	ldr	r3, [r3, #12]
 8001a80:	60bb      	str	r3, [r7, #8]
 8001a82:	68ba      	ldr	r2, [r7, #8]
 8001a84:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001a88:	4013      	ands	r3, r2
 8001a8a:	60bb      	str	r3, [r7, #8]
 8001a8c:	68fb      	ldr	r3, [r7, #12]
 8001a8e:	021a      	lsls	r2, r3, #8
 8001a90:	68bb      	ldr	r3, [r7, #8]
 8001a92:	4313      	orrs	r3, r2
 8001a94:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001a98:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a9c:	60bb      	str	r3, [r7, #8]
 8001a9e:	4a04      	ldr	r2, [pc, #16]	; (8001ab0 <__NVIC_SetPriorityGrouping+0x44>)
 8001aa0:	68bb      	ldr	r3, [r7, #8]
 8001aa2:	60d3      	str	r3, [r2, #12]
 8001aa4:	bf00      	nop
 8001aa6:	3714      	adds	r7, #20
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bc80      	pop	{r7}
 8001aac:	4770      	bx	lr
 8001aae:	bf00      	nop
 8001ab0:	e000ed00 	.word	0xe000ed00

08001ab4 <__NVIC_GetPriorityGrouping>:
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	4b04      	ldr	r3, [pc, #16]	; (8001acc <__NVIC_GetPriorityGrouping+0x18>)
 8001aba:	68db      	ldr	r3, [r3, #12]
 8001abc:	0a1b      	lsrs	r3, r3, #8
 8001abe:	f003 0307 	and.w	r3, r3, #7
 8001ac2:	4618      	mov	r0, r3
 8001ac4:	46bd      	mov	sp, r7
 8001ac6:	bc80      	pop	{r7}
 8001ac8:	4770      	bx	lr
 8001aca:	bf00      	nop
 8001acc:	e000ed00 	.word	0xe000ed00

08001ad0 <__NVIC_SetPriority>:
 8001ad0:	b480      	push	{r7}
 8001ad2:	b083      	sub	sp, #12
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	4603      	mov	r3, r0
 8001ad8:	6039      	str	r1, [r7, #0]
 8001ada:	71fb      	strb	r3, [r7, #7]
 8001adc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	db0a      	blt.n	8001afa <__NVIC_SetPriority+0x2a>
 8001ae4:	683b      	ldr	r3, [r7, #0]
 8001ae6:	b2da      	uxtb	r2, r3
 8001ae8:	490c      	ldr	r1, [pc, #48]	; (8001b1c <__NVIC_SetPriority+0x4c>)
 8001aea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001aee:	0112      	lsls	r2, r2, #4
 8001af0:	b2d2      	uxtb	r2, r2
 8001af2:	440b      	add	r3, r1
 8001af4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001af8:	e00a      	b.n	8001b10 <__NVIC_SetPriority+0x40>
 8001afa:	683b      	ldr	r3, [r7, #0]
 8001afc:	b2da      	uxtb	r2, r3
 8001afe:	4908      	ldr	r1, [pc, #32]	; (8001b20 <__NVIC_SetPriority+0x50>)
 8001b00:	79fb      	ldrb	r3, [r7, #7]
 8001b02:	f003 030f 	and.w	r3, r3, #15
 8001b06:	3b04      	subs	r3, #4
 8001b08:	0112      	lsls	r2, r2, #4
 8001b0a:	b2d2      	uxtb	r2, r2
 8001b0c:	440b      	add	r3, r1
 8001b0e:	761a      	strb	r2, [r3, #24]
 8001b10:	bf00      	nop
 8001b12:	370c      	adds	r7, #12
 8001b14:	46bd      	mov	sp, r7
 8001b16:	bc80      	pop	{r7}
 8001b18:	4770      	bx	lr
 8001b1a:	bf00      	nop
 8001b1c:	e000e100 	.word	0xe000e100
 8001b20:	e000ed00 	.word	0xe000ed00

08001b24 <NVIC_EncodePriority>:
 8001b24:	b480      	push	{r7}
 8001b26:	b089      	sub	sp, #36	; 0x24
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	60f8      	str	r0, [r7, #12]
 8001b2c:	60b9      	str	r1, [r7, #8]
 8001b2e:	607a      	str	r2, [r7, #4]
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	f003 0307 	and.w	r3, r3, #7
 8001b36:	61fb      	str	r3, [r7, #28]
 8001b38:	69fb      	ldr	r3, [r7, #28]
 8001b3a:	f1c3 0307 	rsb	r3, r3, #7
 8001b3e:	2b04      	cmp	r3, #4
 8001b40:	bf28      	it	cs
 8001b42:	2304      	movcs	r3, #4
 8001b44:	61bb      	str	r3, [r7, #24]
 8001b46:	69fb      	ldr	r3, [r7, #28]
 8001b48:	3304      	adds	r3, #4
 8001b4a:	2b06      	cmp	r3, #6
 8001b4c:	d902      	bls.n	8001b54 <NVIC_EncodePriority+0x30>
 8001b4e:	69fb      	ldr	r3, [r7, #28]
 8001b50:	3b03      	subs	r3, #3
 8001b52:	e000      	b.n	8001b56 <NVIC_EncodePriority+0x32>
 8001b54:	2300      	movs	r3, #0
 8001b56:	617b      	str	r3, [r7, #20]
 8001b58:	f04f 32ff 	mov.w	r2, #4294967295
 8001b5c:	69bb      	ldr	r3, [r7, #24]
 8001b5e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b62:	43da      	mvns	r2, r3
 8001b64:	68bb      	ldr	r3, [r7, #8]
 8001b66:	401a      	ands	r2, r3
 8001b68:	697b      	ldr	r3, [r7, #20]
 8001b6a:	409a      	lsls	r2, r3
 8001b6c:	f04f 31ff 	mov.w	r1, #4294967295
 8001b70:	697b      	ldr	r3, [r7, #20]
 8001b72:	fa01 f303 	lsl.w	r3, r1, r3
 8001b76:	43d9      	mvns	r1, r3
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	400b      	ands	r3, r1
 8001b7c:	4313      	orrs	r3, r2
 8001b7e:	4618      	mov	r0, r3
 8001b80:	3724      	adds	r7, #36	; 0x24
 8001b82:	46bd      	mov	sp, r7
 8001b84:	bc80      	pop	{r7}
 8001b86:	4770      	bx	lr

08001b88 <SysTick_Config>:
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b082      	sub	sp, #8
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	3b01      	subs	r3, #1
 8001b94:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001b98:	d301      	bcc.n	8001b9e <SysTick_Config+0x16>
 8001b9a:	2301      	movs	r3, #1
 8001b9c:	e00f      	b.n	8001bbe <SysTick_Config+0x36>
 8001b9e:	4a0a      	ldr	r2, [pc, #40]	; (8001bc8 <SysTick_Config+0x40>)
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	3b01      	subs	r3, #1
 8001ba4:	6053      	str	r3, [r2, #4]
 8001ba6:	210f      	movs	r1, #15
 8001ba8:	f04f 30ff 	mov.w	r0, #4294967295
 8001bac:	f7ff ff90 	bl	8001ad0 <__NVIC_SetPriority>
 8001bb0:	4b05      	ldr	r3, [pc, #20]	; (8001bc8 <SysTick_Config+0x40>)
 8001bb2:	2200      	movs	r2, #0
 8001bb4:	609a      	str	r2, [r3, #8]
 8001bb6:	4b04      	ldr	r3, [pc, #16]	; (8001bc8 <SysTick_Config+0x40>)
 8001bb8:	2207      	movs	r2, #7
 8001bba:	601a      	str	r2, [r3, #0]
 8001bbc:	2300      	movs	r3, #0
 8001bbe:	4618      	mov	r0, r3
 8001bc0:	3708      	adds	r7, #8
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	bd80      	pop	{r7, pc}
 8001bc6:	bf00      	nop
 8001bc8:	e000e010 	.word	0xe000e010

08001bcc <HAL_NVIC_SetPriorityGrouping>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	b082      	sub	sp, #8
 8001bd0:	af00      	add	r7, sp, #0
 8001bd2:	6078      	str	r0, [r7, #4]
 8001bd4:	6878      	ldr	r0, [r7, #4]
 8001bd6:	f7ff ff49 	bl	8001a6c <__NVIC_SetPriorityGrouping>
 8001bda:	bf00      	nop
 8001bdc:	3708      	adds	r7, #8
 8001bde:	46bd      	mov	sp, r7
 8001be0:	bd80      	pop	{r7, pc}

08001be2 <HAL_NVIC_SetPriority>:
 8001be2:	b580      	push	{r7, lr}
 8001be4:	b086      	sub	sp, #24
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	4603      	mov	r3, r0
 8001bea:	60b9      	str	r1, [r7, #8]
 8001bec:	607a      	str	r2, [r7, #4]
 8001bee:	73fb      	strb	r3, [r7, #15]
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	617b      	str	r3, [r7, #20]
 8001bf4:	f7ff ff5e 	bl	8001ab4 <__NVIC_GetPriorityGrouping>
 8001bf8:	6178      	str	r0, [r7, #20]
 8001bfa:	687a      	ldr	r2, [r7, #4]
 8001bfc:	68b9      	ldr	r1, [r7, #8]
 8001bfe:	6978      	ldr	r0, [r7, #20]
 8001c00:	f7ff ff90 	bl	8001b24 <NVIC_EncodePriority>
 8001c04:	4602      	mov	r2, r0
 8001c06:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c0a:	4611      	mov	r1, r2
 8001c0c:	4618      	mov	r0, r3
 8001c0e:	f7ff ff5f 	bl	8001ad0 <__NVIC_SetPriority>
 8001c12:	bf00      	nop
 8001c14:	3718      	adds	r7, #24
 8001c16:	46bd      	mov	sp, r7
 8001c18:	bd80      	pop	{r7, pc}

08001c1a <HAL_SYSTICK_Config>:
 8001c1a:	b580      	push	{r7, lr}
 8001c1c:	b082      	sub	sp, #8
 8001c1e:	af00      	add	r7, sp, #0
 8001c20:	6078      	str	r0, [r7, #4]
 8001c22:	6878      	ldr	r0, [r7, #4]
 8001c24:	f7ff ffb0 	bl	8001b88 <SysTick_Config>
 8001c28:	4603      	mov	r3, r0
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	3708      	adds	r7, #8
 8001c2e:	46bd      	mov	sp, r7
 8001c30:	bd80      	pop	{r7, pc}
	...

08001c34 <HAL_GPIO_Init>:
 8001c34:	b480      	push	{r7}
 8001c36:	b08b      	sub	sp, #44	; 0x2c
 8001c38:	af00      	add	r7, sp, #0
 8001c3a:	6078      	str	r0, [r7, #4]
 8001c3c:	6039      	str	r1, [r7, #0]
 8001c3e:	2300      	movs	r3, #0
 8001c40:	627b      	str	r3, [r7, #36]	; 0x24
 8001c42:	2300      	movs	r3, #0
 8001c44:	623b      	str	r3, [r7, #32]
 8001c46:	e127      	b.n	8001e98 <HAL_GPIO_Init+0x264>
 8001c48:	2201      	movs	r2, #1
 8001c4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c50:	61fb      	str	r3, [r7, #28]
 8001c52:	683b      	ldr	r3, [r7, #0]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	69fa      	ldr	r2, [r7, #28]
 8001c58:	4013      	ands	r3, r2
 8001c5a:	61bb      	str	r3, [r7, #24]
 8001c5c:	69ba      	ldr	r2, [r7, #24]
 8001c5e:	69fb      	ldr	r3, [r7, #28]
 8001c60:	429a      	cmp	r2, r3
 8001c62:	f040 8116 	bne.w	8001e92 <HAL_GPIO_Init+0x25e>
 8001c66:	683b      	ldr	r3, [r7, #0]
 8001c68:	685b      	ldr	r3, [r3, #4]
 8001c6a:	2b12      	cmp	r3, #18
 8001c6c:	d034      	beq.n	8001cd8 <HAL_GPIO_Init+0xa4>
 8001c6e:	2b12      	cmp	r3, #18
 8001c70:	d80d      	bhi.n	8001c8e <HAL_GPIO_Init+0x5a>
 8001c72:	2b02      	cmp	r3, #2
 8001c74:	d02b      	beq.n	8001cce <HAL_GPIO_Init+0x9a>
 8001c76:	2b02      	cmp	r3, #2
 8001c78:	d804      	bhi.n	8001c84 <HAL_GPIO_Init+0x50>
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d031      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001c7e:	2b01      	cmp	r3, #1
 8001c80:	d01c      	beq.n	8001cbc <HAL_GPIO_Init+0x88>
 8001c82:	e048      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001c84:	2b03      	cmp	r3, #3
 8001c86:	d043      	beq.n	8001d10 <HAL_GPIO_Init+0xdc>
 8001c88:	2b11      	cmp	r3, #17
 8001c8a:	d01b      	beq.n	8001cc4 <HAL_GPIO_Init+0x90>
 8001c8c:	e043      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001c8e:	4a89      	ldr	r2, [pc, #548]	; (8001eb4 <HAL_GPIO_Init+0x280>)
 8001c90:	4293      	cmp	r3, r2
 8001c92:	d026      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001c94:	4a87      	ldr	r2, [pc, #540]	; (8001eb4 <HAL_GPIO_Init+0x280>)
 8001c96:	4293      	cmp	r3, r2
 8001c98:	d806      	bhi.n	8001ca8 <HAL_GPIO_Init+0x74>
 8001c9a:	4a87      	ldr	r2, [pc, #540]	; (8001eb8 <HAL_GPIO_Init+0x284>)
 8001c9c:	4293      	cmp	r3, r2
 8001c9e:	d020      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001ca0:	4a86      	ldr	r2, [pc, #536]	; (8001ebc <HAL_GPIO_Init+0x288>)
 8001ca2:	4293      	cmp	r3, r2
 8001ca4:	d01d      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001ca6:	e036      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001ca8:	4a85      	ldr	r2, [pc, #532]	; (8001ec0 <HAL_GPIO_Init+0x28c>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d019      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001cae:	4a85      	ldr	r2, [pc, #532]	; (8001ec4 <HAL_GPIO_Init+0x290>)
 8001cb0:	4293      	cmp	r3, r2
 8001cb2:	d016      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001cb4:	4a84      	ldr	r2, [pc, #528]	; (8001ec8 <HAL_GPIO_Init+0x294>)
 8001cb6:	4293      	cmp	r3, r2
 8001cb8:	d013      	beq.n	8001ce2 <HAL_GPIO_Init+0xae>
 8001cba:	e02c      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001cbc:	683b      	ldr	r3, [r7, #0]
 8001cbe:	68db      	ldr	r3, [r3, #12]
 8001cc0:	623b      	str	r3, [r7, #32]
 8001cc2:	e028      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001cc4:	683b      	ldr	r3, [r7, #0]
 8001cc6:	68db      	ldr	r3, [r3, #12]
 8001cc8:	3304      	adds	r3, #4
 8001cca:	623b      	str	r3, [r7, #32]
 8001ccc:	e023      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001cce:	683b      	ldr	r3, [r7, #0]
 8001cd0:	68db      	ldr	r3, [r3, #12]
 8001cd2:	3308      	adds	r3, #8
 8001cd4:	623b      	str	r3, [r7, #32]
 8001cd6:	e01e      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001cd8:	683b      	ldr	r3, [r7, #0]
 8001cda:	68db      	ldr	r3, [r3, #12]
 8001cdc:	330c      	adds	r3, #12
 8001cde:	623b      	str	r3, [r7, #32]
 8001ce0:	e019      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001ce2:	683b      	ldr	r3, [r7, #0]
 8001ce4:	689b      	ldr	r3, [r3, #8]
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d102      	bne.n	8001cf0 <HAL_GPIO_Init+0xbc>
 8001cea:	2304      	movs	r3, #4
 8001cec:	623b      	str	r3, [r7, #32]
 8001cee:	e012      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001cf0:	683b      	ldr	r3, [r7, #0]
 8001cf2:	689b      	ldr	r3, [r3, #8]
 8001cf4:	2b01      	cmp	r3, #1
 8001cf6:	d105      	bne.n	8001d04 <HAL_GPIO_Init+0xd0>
 8001cf8:	2308      	movs	r3, #8
 8001cfa:	623b      	str	r3, [r7, #32]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	69fa      	ldr	r2, [r7, #28]
 8001d00:	611a      	str	r2, [r3, #16]
 8001d02:	e008      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001d04:	2308      	movs	r3, #8
 8001d06:	623b      	str	r3, [r7, #32]
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	69fa      	ldr	r2, [r7, #28]
 8001d0c:	615a      	str	r2, [r3, #20]
 8001d0e:	e002      	b.n	8001d16 <HAL_GPIO_Init+0xe2>
 8001d10:	2300      	movs	r3, #0
 8001d12:	623b      	str	r3, [r7, #32]
 8001d14:	bf00      	nop
 8001d16:	69bb      	ldr	r3, [r7, #24]
 8001d18:	2bff      	cmp	r3, #255	; 0xff
 8001d1a:	d801      	bhi.n	8001d20 <HAL_GPIO_Init+0xec>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	e001      	b.n	8001d24 <HAL_GPIO_Init+0xf0>
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	3304      	adds	r3, #4
 8001d24:	617b      	str	r3, [r7, #20]
 8001d26:	69bb      	ldr	r3, [r7, #24]
 8001d28:	2bff      	cmp	r3, #255	; 0xff
 8001d2a:	d802      	bhi.n	8001d32 <HAL_GPIO_Init+0xfe>
 8001d2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d2e:	009b      	lsls	r3, r3, #2
 8001d30:	e002      	b.n	8001d38 <HAL_GPIO_Init+0x104>
 8001d32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d34:	3b08      	subs	r3, #8
 8001d36:	009b      	lsls	r3, r3, #2
 8001d38:	613b      	str	r3, [r7, #16]
 8001d3a:	697b      	ldr	r3, [r7, #20]
 8001d3c:	681a      	ldr	r2, [r3, #0]
 8001d3e:	210f      	movs	r1, #15
 8001d40:	693b      	ldr	r3, [r7, #16]
 8001d42:	fa01 f303 	lsl.w	r3, r1, r3
 8001d46:	43db      	mvns	r3, r3
 8001d48:	401a      	ands	r2, r3
 8001d4a:	6a39      	ldr	r1, [r7, #32]
 8001d4c:	693b      	ldr	r3, [r7, #16]
 8001d4e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d52:	431a      	orrs	r2, r3
 8001d54:	697b      	ldr	r3, [r7, #20]
 8001d56:	601a      	str	r2, [r3, #0]
 8001d58:	683b      	ldr	r3, [r7, #0]
 8001d5a:	685b      	ldr	r3, [r3, #4]
 8001d5c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	f000 8096 	beq.w	8001e92 <HAL_GPIO_Init+0x25e>
 8001d66:	4b59      	ldr	r3, [pc, #356]	; (8001ecc <HAL_GPIO_Init+0x298>)
 8001d68:	699b      	ldr	r3, [r3, #24]
 8001d6a:	4a58      	ldr	r2, [pc, #352]	; (8001ecc <HAL_GPIO_Init+0x298>)
 8001d6c:	f043 0301 	orr.w	r3, r3, #1
 8001d70:	6193      	str	r3, [r2, #24]
 8001d72:	4b56      	ldr	r3, [pc, #344]	; (8001ecc <HAL_GPIO_Init+0x298>)
 8001d74:	699b      	ldr	r3, [r3, #24]
 8001d76:	f003 0301 	and.w	r3, r3, #1
 8001d7a:	60bb      	str	r3, [r7, #8]
 8001d7c:	68bb      	ldr	r3, [r7, #8]
 8001d7e:	4a54      	ldr	r2, [pc, #336]	; (8001ed0 <HAL_GPIO_Init+0x29c>)
 8001d80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d82:	089b      	lsrs	r3, r3, #2
 8001d84:	3302      	adds	r3, #2
 8001d86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d8a:	60fb      	str	r3, [r7, #12]
 8001d8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d8e:	f003 0303 	and.w	r3, r3, #3
 8001d92:	009b      	lsls	r3, r3, #2
 8001d94:	220f      	movs	r2, #15
 8001d96:	fa02 f303 	lsl.w	r3, r2, r3
 8001d9a:	43db      	mvns	r3, r3
 8001d9c:	68fa      	ldr	r2, [r7, #12]
 8001d9e:	4013      	ands	r3, r2
 8001da0:	60fb      	str	r3, [r7, #12]
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	4a4b      	ldr	r2, [pc, #300]	; (8001ed4 <HAL_GPIO_Init+0x2a0>)
 8001da6:	4293      	cmp	r3, r2
 8001da8:	d013      	beq.n	8001dd2 <HAL_GPIO_Init+0x19e>
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	4a4a      	ldr	r2, [pc, #296]	; (8001ed8 <HAL_GPIO_Init+0x2a4>)
 8001dae:	4293      	cmp	r3, r2
 8001db0:	d00d      	beq.n	8001dce <HAL_GPIO_Init+0x19a>
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	4a49      	ldr	r2, [pc, #292]	; (8001edc <HAL_GPIO_Init+0x2a8>)
 8001db6:	4293      	cmp	r3, r2
 8001db8:	d007      	beq.n	8001dca <HAL_GPIO_Init+0x196>
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	4a48      	ldr	r2, [pc, #288]	; (8001ee0 <HAL_GPIO_Init+0x2ac>)
 8001dbe:	4293      	cmp	r3, r2
 8001dc0:	d101      	bne.n	8001dc6 <HAL_GPIO_Init+0x192>
 8001dc2:	2303      	movs	r3, #3
 8001dc4:	e006      	b.n	8001dd4 <HAL_GPIO_Init+0x1a0>
 8001dc6:	2304      	movs	r3, #4
 8001dc8:	e004      	b.n	8001dd4 <HAL_GPIO_Init+0x1a0>
 8001dca:	2302      	movs	r3, #2
 8001dcc:	e002      	b.n	8001dd4 <HAL_GPIO_Init+0x1a0>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	e000      	b.n	8001dd4 <HAL_GPIO_Init+0x1a0>
 8001dd2:	2300      	movs	r3, #0
 8001dd4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001dd6:	f002 0203 	and.w	r2, r2, #3
 8001dda:	0092      	lsls	r2, r2, #2
 8001ddc:	4093      	lsls	r3, r2
 8001dde:	68fa      	ldr	r2, [r7, #12]
 8001de0:	4313      	orrs	r3, r2
 8001de2:	60fb      	str	r3, [r7, #12]
 8001de4:	493a      	ldr	r1, [pc, #232]	; (8001ed0 <HAL_GPIO_Init+0x29c>)
 8001de6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001de8:	089b      	lsrs	r3, r3, #2
 8001dea:	3302      	adds	r3, #2
 8001dec:	68fa      	ldr	r2, [r7, #12]
 8001dee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001df2:	683b      	ldr	r3, [r7, #0]
 8001df4:	685b      	ldr	r3, [r3, #4]
 8001df6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d006      	beq.n	8001e0c <HAL_GPIO_Init+0x1d8>
 8001dfe:	4b39      	ldr	r3, [pc, #228]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e00:	681a      	ldr	r2, [r3, #0]
 8001e02:	4938      	ldr	r1, [pc, #224]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e04:	69bb      	ldr	r3, [r7, #24]
 8001e06:	4313      	orrs	r3, r2
 8001e08:	600b      	str	r3, [r1, #0]
 8001e0a:	e006      	b.n	8001e1a <HAL_GPIO_Init+0x1e6>
 8001e0c:	4b35      	ldr	r3, [pc, #212]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e0e:	681a      	ldr	r2, [r3, #0]
 8001e10:	69bb      	ldr	r3, [r7, #24]
 8001e12:	43db      	mvns	r3, r3
 8001e14:	4933      	ldr	r1, [pc, #204]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e16:	4013      	ands	r3, r2
 8001e18:	600b      	str	r3, [r1, #0]
 8001e1a:	683b      	ldr	r3, [r7, #0]
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d006      	beq.n	8001e34 <HAL_GPIO_Init+0x200>
 8001e26:	4b2f      	ldr	r3, [pc, #188]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e28:	685a      	ldr	r2, [r3, #4]
 8001e2a:	492e      	ldr	r1, [pc, #184]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e2c:	69bb      	ldr	r3, [r7, #24]
 8001e2e:	4313      	orrs	r3, r2
 8001e30:	604b      	str	r3, [r1, #4]
 8001e32:	e006      	b.n	8001e42 <HAL_GPIO_Init+0x20e>
 8001e34:	4b2b      	ldr	r3, [pc, #172]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e36:	685a      	ldr	r2, [r3, #4]
 8001e38:	69bb      	ldr	r3, [r7, #24]
 8001e3a:	43db      	mvns	r3, r3
 8001e3c:	4929      	ldr	r1, [pc, #164]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e3e:	4013      	ands	r3, r2
 8001e40:	604b      	str	r3, [r1, #4]
 8001e42:	683b      	ldr	r3, [r7, #0]
 8001e44:	685b      	ldr	r3, [r3, #4]
 8001e46:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d006      	beq.n	8001e5c <HAL_GPIO_Init+0x228>
 8001e4e:	4b25      	ldr	r3, [pc, #148]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e50:	689a      	ldr	r2, [r3, #8]
 8001e52:	4924      	ldr	r1, [pc, #144]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e54:	69bb      	ldr	r3, [r7, #24]
 8001e56:	4313      	orrs	r3, r2
 8001e58:	608b      	str	r3, [r1, #8]
 8001e5a:	e006      	b.n	8001e6a <HAL_GPIO_Init+0x236>
 8001e5c:	4b21      	ldr	r3, [pc, #132]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e5e:	689a      	ldr	r2, [r3, #8]
 8001e60:	69bb      	ldr	r3, [r7, #24]
 8001e62:	43db      	mvns	r3, r3
 8001e64:	491f      	ldr	r1, [pc, #124]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e66:	4013      	ands	r3, r2
 8001e68:	608b      	str	r3, [r1, #8]
 8001e6a:	683b      	ldr	r3, [r7, #0]
 8001e6c:	685b      	ldr	r3, [r3, #4]
 8001e6e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d006      	beq.n	8001e84 <HAL_GPIO_Init+0x250>
 8001e76:	4b1b      	ldr	r3, [pc, #108]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e78:	68da      	ldr	r2, [r3, #12]
 8001e7a:	491a      	ldr	r1, [pc, #104]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e7c:	69bb      	ldr	r3, [r7, #24]
 8001e7e:	4313      	orrs	r3, r2
 8001e80:	60cb      	str	r3, [r1, #12]
 8001e82:	e006      	b.n	8001e92 <HAL_GPIO_Init+0x25e>
 8001e84:	4b17      	ldr	r3, [pc, #92]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e86:	68da      	ldr	r2, [r3, #12]
 8001e88:	69bb      	ldr	r3, [r7, #24]
 8001e8a:	43db      	mvns	r3, r3
 8001e8c:	4915      	ldr	r1, [pc, #84]	; (8001ee4 <HAL_GPIO_Init+0x2b0>)
 8001e8e:	4013      	ands	r3, r2
 8001e90:	60cb      	str	r3, [r1, #12]
 8001e92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e94:	3301      	adds	r3, #1
 8001e96:	627b      	str	r3, [r7, #36]	; 0x24
 8001e98:	683b      	ldr	r3, [r7, #0]
 8001e9a:	681a      	ldr	r2, [r3, #0]
 8001e9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e9e:	fa22 f303 	lsr.w	r3, r2, r3
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	f47f aed0 	bne.w	8001c48 <HAL_GPIO_Init+0x14>
 8001ea8:	bf00      	nop
 8001eaa:	372c      	adds	r7, #44	; 0x2c
 8001eac:	46bd      	mov	sp, r7
 8001eae:	bc80      	pop	{r7}
 8001eb0:	4770      	bx	lr
 8001eb2:	bf00      	nop
 8001eb4:	10210000 	.word	0x10210000
 8001eb8:	10110000 	.word	0x10110000
 8001ebc:	10120000 	.word	0x10120000
 8001ec0:	10310000 	.word	0x10310000
 8001ec4:	10320000 	.word	0x10320000
 8001ec8:	10220000 	.word	0x10220000
 8001ecc:	40021000 	.word	0x40021000
 8001ed0:	40010000 	.word	0x40010000
 8001ed4:	40010800 	.word	0x40010800
 8001ed8:	40010c00 	.word	0x40010c00
 8001edc:	40011000 	.word	0x40011000
 8001ee0:	40011400 	.word	0x40011400
 8001ee4:	40010400 	.word	0x40010400

08001ee8 <HAL_GPIO_ReadPin>:
 8001ee8:	b480      	push	{r7}
 8001eea:	b085      	sub	sp, #20
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]
 8001ef0:	460b      	mov	r3, r1
 8001ef2:	807b      	strh	r3, [r7, #2]
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	689a      	ldr	r2, [r3, #8]
 8001ef8:	887b      	ldrh	r3, [r7, #2]
 8001efa:	4013      	ands	r3, r2
 8001efc:	2b00      	cmp	r3, #0
 8001efe:	d002      	beq.n	8001f06 <HAL_GPIO_ReadPin+0x1e>
 8001f00:	2301      	movs	r3, #1
 8001f02:	73fb      	strb	r3, [r7, #15]
 8001f04:	e001      	b.n	8001f0a <HAL_GPIO_ReadPin+0x22>
 8001f06:	2300      	movs	r3, #0
 8001f08:	73fb      	strb	r3, [r7, #15]
 8001f0a:	7bfb      	ldrb	r3, [r7, #15]
 8001f0c:	4618      	mov	r0, r3
 8001f0e:	3714      	adds	r7, #20
 8001f10:	46bd      	mov	sp, r7
 8001f12:	bc80      	pop	{r7}
 8001f14:	4770      	bx	lr

08001f16 <HAL_GPIO_WritePin>:
 8001f16:	b480      	push	{r7}
 8001f18:	b083      	sub	sp, #12
 8001f1a:	af00      	add	r7, sp, #0
 8001f1c:	6078      	str	r0, [r7, #4]
 8001f1e:	460b      	mov	r3, r1
 8001f20:	807b      	strh	r3, [r7, #2]
 8001f22:	4613      	mov	r3, r2
 8001f24:	707b      	strb	r3, [r7, #1]
 8001f26:	787b      	ldrb	r3, [r7, #1]
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d003      	beq.n	8001f34 <HAL_GPIO_WritePin+0x1e>
 8001f2c:	887a      	ldrh	r2, [r7, #2]
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	611a      	str	r2, [r3, #16]
 8001f32:	e003      	b.n	8001f3c <HAL_GPIO_WritePin+0x26>
 8001f34:	887b      	ldrh	r3, [r7, #2]
 8001f36:	041a      	lsls	r2, r3, #16
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	611a      	str	r2, [r3, #16]
 8001f3c:	bf00      	nop
 8001f3e:	370c      	adds	r7, #12
 8001f40:	46bd      	mov	sp, r7
 8001f42:	bc80      	pop	{r7}
 8001f44:	4770      	bx	lr
	...

08001f48 <HAL_RCC_OscConfig>:
 8001f48:	b580      	push	{r7, lr}
 8001f4a:	b086      	sub	sp, #24
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	6078      	str	r0, [r7, #4]
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	2b00      	cmp	r3, #0
 8001f54:	d101      	bne.n	8001f5a <HAL_RCC_OscConfig+0x12>
 8001f56:	2301      	movs	r3, #1
 8001f58:	e26c      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f003 0301 	and.w	r3, r3, #1
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	f000 8087 	beq.w	8002076 <HAL_RCC_OscConfig+0x12e>
 8001f68:	4b92      	ldr	r3, [pc, #584]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001f6a:	685b      	ldr	r3, [r3, #4]
 8001f6c:	f003 030c 	and.w	r3, r3, #12
 8001f70:	2b04      	cmp	r3, #4
 8001f72:	d00c      	beq.n	8001f8e <HAL_RCC_OscConfig+0x46>
 8001f74:	4b8f      	ldr	r3, [pc, #572]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001f76:	685b      	ldr	r3, [r3, #4]
 8001f78:	f003 030c 	and.w	r3, r3, #12
 8001f7c:	2b08      	cmp	r3, #8
 8001f7e:	d112      	bne.n	8001fa6 <HAL_RCC_OscConfig+0x5e>
 8001f80:	4b8c      	ldr	r3, [pc, #560]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001f82:	685b      	ldr	r3, [r3, #4]
 8001f84:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f88:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f8c:	d10b      	bne.n	8001fa6 <HAL_RCC_OscConfig+0x5e>
 8001f8e:	4b89      	ldr	r3, [pc, #548]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d06c      	beq.n	8002074 <HAL_RCC_OscConfig+0x12c>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	685b      	ldr	r3, [r3, #4]
 8001f9e:	2b00      	cmp	r3, #0
 8001fa0:	d168      	bne.n	8002074 <HAL_RCC_OscConfig+0x12c>
 8001fa2:	2301      	movs	r3, #1
 8001fa4:	e246      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	685b      	ldr	r3, [r3, #4]
 8001faa:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001fae:	d106      	bne.n	8001fbe <HAL_RCC_OscConfig+0x76>
 8001fb0:	4b80      	ldr	r3, [pc, #512]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	4a7f      	ldr	r2, [pc, #508]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fb6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fba:	6013      	str	r3, [r2, #0]
 8001fbc:	e02e      	b.n	800201c <HAL_RCC_OscConfig+0xd4>
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	685b      	ldr	r3, [r3, #4]
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d10c      	bne.n	8001fe0 <HAL_RCC_OscConfig+0x98>
 8001fc6:	4b7b      	ldr	r3, [pc, #492]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	4a7a      	ldr	r2, [pc, #488]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fcc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001fd0:	6013      	str	r3, [r2, #0]
 8001fd2:	4b78      	ldr	r3, [pc, #480]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	4a77      	ldr	r2, [pc, #476]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fd8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001fdc:	6013      	str	r3, [r2, #0]
 8001fde:	e01d      	b.n	800201c <HAL_RCC_OscConfig+0xd4>
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	685b      	ldr	r3, [r3, #4]
 8001fe4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001fe8:	d10c      	bne.n	8002004 <HAL_RCC_OscConfig+0xbc>
 8001fea:	4b72      	ldr	r3, [pc, #456]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	4a71      	ldr	r2, [pc, #452]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001ff0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ff4:	6013      	str	r3, [r2, #0]
 8001ff6:	4b6f      	ldr	r3, [pc, #444]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	4a6e      	ldr	r2, [pc, #440]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8001ffc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002000:	6013      	str	r3, [r2, #0]
 8002002:	e00b      	b.n	800201c <HAL_RCC_OscConfig+0xd4>
 8002004:	4b6b      	ldr	r3, [pc, #428]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	4a6a      	ldr	r2, [pc, #424]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 800200a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800200e:	6013      	str	r3, [r2, #0]
 8002010:	4b68      	ldr	r3, [pc, #416]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	4a67      	ldr	r2, [pc, #412]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002016:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800201a:	6013      	str	r3, [r2, #0]
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	685b      	ldr	r3, [r3, #4]
 8002020:	2b00      	cmp	r3, #0
 8002022:	d013      	beq.n	800204c <HAL_RCC_OscConfig+0x104>
 8002024:	f7ff fcf6 	bl	8001a14 <HAL_GetTick>
 8002028:	6138      	str	r0, [r7, #16]
 800202a:	e008      	b.n	800203e <HAL_RCC_OscConfig+0xf6>
 800202c:	f7ff fcf2 	bl	8001a14 <HAL_GetTick>
 8002030:	4602      	mov	r2, r0
 8002032:	693b      	ldr	r3, [r7, #16]
 8002034:	1ad3      	subs	r3, r2, r3
 8002036:	2b64      	cmp	r3, #100	; 0x64
 8002038:	d901      	bls.n	800203e <HAL_RCC_OscConfig+0xf6>
 800203a:	2303      	movs	r3, #3
 800203c:	e1fa      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 800203e:	4b5d      	ldr	r3, [pc, #372]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002046:	2b00      	cmp	r3, #0
 8002048:	d0f0      	beq.n	800202c <HAL_RCC_OscConfig+0xe4>
 800204a:	e014      	b.n	8002076 <HAL_RCC_OscConfig+0x12e>
 800204c:	f7ff fce2 	bl	8001a14 <HAL_GetTick>
 8002050:	6138      	str	r0, [r7, #16]
 8002052:	e008      	b.n	8002066 <HAL_RCC_OscConfig+0x11e>
 8002054:	f7ff fcde 	bl	8001a14 <HAL_GetTick>
 8002058:	4602      	mov	r2, r0
 800205a:	693b      	ldr	r3, [r7, #16]
 800205c:	1ad3      	subs	r3, r2, r3
 800205e:	2b64      	cmp	r3, #100	; 0x64
 8002060:	d901      	bls.n	8002066 <HAL_RCC_OscConfig+0x11e>
 8002062:	2303      	movs	r3, #3
 8002064:	e1e6      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8002066:	4b53      	ldr	r3, [pc, #332]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800206e:	2b00      	cmp	r3, #0
 8002070:	d1f0      	bne.n	8002054 <HAL_RCC_OscConfig+0x10c>
 8002072:	e000      	b.n	8002076 <HAL_RCC_OscConfig+0x12e>
 8002074:	bf00      	nop
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	f003 0302 	and.w	r3, r3, #2
 800207e:	2b00      	cmp	r3, #0
 8002080:	d063      	beq.n	800214a <HAL_RCC_OscConfig+0x202>
 8002082:	4b4c      	ldr	r3, [pc, #304]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002084:	685b      	ldr	r3, [r3, #4]
 8002086:	f003 030c 	and.w	r3, r3, #12
 800208a:	2b00      	cmp	r3, #0
 800208c:	d00b      	beq.n	80020a6 <HAL_RCC_OscConfig+0x15e>
 800208e:	4b49      	ldr	r3, [pc, #292]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002090:	685b      	ldr	r3, [r3, #4]
 8002092:	f003 030c 	and.w	r3, r3, #12
 8002096:	2b08      	cmp	r3, #8
 8002098:	d11c      	bne.n	80020d4 <HAL_RCC_OscConfig+0x18c>
 800209a:	4b46      	ldr	r3, [pc, #280]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 800209c:	685b      	ldr	r3, [r3, #4]
 800209e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d116      	bne.n	80020d4 <HAL_RCC_OscConfig+0x18c>
 80020a6:	4b43      	ldr	r3, [pc, #268]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	f003 0302 	and.w	r3, r3, #2
 80020ae:	2b00      	cmp	r3, #0
 80020b0:	d005      	beq.n	80020be <HAL_RCC_OscConfig+0x176>
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	691b      	ldr	r3, [r3, #16]
 80020b6:	2b01      	cmp	r3, #1
 80020b8:	d001      	beq.n	80020be <HAL_RCC_OscConfig+0x176>
 80020ba:	2301      	movs	r3, #1
 80020bc:	e1ba      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80020be:	4b3d      	ldr	r3, [pc, #244]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80020c6:	687b      	ldr	r3, [r7, #4]
 80020c8:	695b      	ldr	r3, [r3, #20]
 80020ca:	00db      	lsls	r3, r3, #3
 80020cc:	4939      	ldr	r1, [pc, #228]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 80020ce:	4313      	orrs	r3, r2
 80020d0:	600b      	str	r3, [r1, #0]
 80020d2:	e03a      	b.n	800214a <HAL_RCC_OscConfig+0x202>
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	691b      	ldr	r3, [r3, #16]
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d020      	beq.n	800211e <HAL_RCC_OscConfig+0x1d6>
 80020dc:	4b36      	ldr	r3, [pc, #216]	; (80021b8 <HAL_RCC_OscConfig+0x270>)
 80020de:	2201      	movs	r2, #1
 80020e0:	601a      	str	r2, [r3, #0]
 80020e2:	f7ff fc97 	bl	8001a14 <HAL_GetTick>
 80020e6:	6138      	str	r0, [r7, #16]
 80020e8:	e008      	b.n	80020fc <HAL_RCC_OscConfig+0x1b4>
 80020ea:	f7ff fc93 	bl	8001a14 <HAL_GetTick>
 80020ee:	4602      	mov	r2, r0
 80020f0:	693b      	ldr	r3, [r7, #16]
 80020f2:	1ad3      	subs	r3, r2, r3
 80020f4:	2b02      	cmp	r3, #2
 80020f6:	d901      	bls.n	80020fc <HAL_RCC_OscConfig+0x1b4>
 80020f8:	2303      	movs	r3, #3
 80020fa:	e19b      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80020fc:	4b2d      	ldr	r3, [pc, #180]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	f003 0302 	and.w	r3, r3, #2
 8002104:	2b00      	cmp	r3, #0
 8002106:	d0f0      	beq.n	80020ea <HAL_RCC_OscConfig+0x1a2>
 8002108:	4b2a      	ldr	r3, [pc, #168]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	695b      	ldr	r3, [r3, #20]
 8002114:	00db      	lsls	r3, r3, #3
 8002116:	4927      	ldr	r1, [pc, #156]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002118:	4313      	orrs	r3, r2
 800211a:	600b      	str	r3, [r1, #0]
 800211c:	e015      	b.n	800214a <HAL_RCC_OscConfig+0x202>
 800211e:	4b26      	ldr	r3, [pc, #152]	; (80021b8 <HAL_RCC_OscConfig+0x270>)
 8002120:	2200      	movs	r2, #0
 8002122:	601a      	str	r2, [r3, #0]
 8002124:	f7ff fc76 	bl	8001a14 <HAL_GetTick>
 8002128:	6138      	str	r0, [r7, #16]
 800212a:	e008      	b.n	800213e <HAL_RCC_OscConfig+0x1f6>
 800212c:	f7ff fc72 	bl	8001a14 <HAL_GetTick>
 8002130:	4602      	mov	r2, r0
 8002132:	693b      	ldr	r3, [r7, #16]
 8002134:	1ad3      	subs	r3, r2, r3
 8002136:	2b02      	cmp	r3, #2
 8002138:	d901      	bls.n	800213e <HAL_RCC_OscConfig+0x1f6>
 800213a:	2303      	movs	r3, #3
 800213c:	e17a      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 800213e:	4b1d      	ldr	r3, [pc, #116]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	f003 0302 	and.w	r3, r3, #2
 8002146:	2b00      	cmp	r3, #0
 8002148:	d1f0      	bne.n	800212c <HAL_RCC_OscConfig+0x1e4>
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	f003 0308 	and.w	r3, r3, #8
 8002152:	2b00      	cmp	r3, #0
 8002154:	d03a      	beq.n	80021cc <HAL_RCC_OscConfig+0x284>
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	699b      	ldr	r3, [r3, #24]
 800215a:	2b00      	cmp	r3, #0
 800215c:	d019      	beq.n	8002192 <HAL_RCC_OscConfig+0x24a>
 800215e:	4b17      	ldr	r3, [pc, #92]	; (80021bc <HAL_RCC_OscConfig+0x274>)
 8002160:	2201      	movs	r2, #1
 8002162:	601a      	str	r2, [r3, #0]
 8002164:	f7ff fc56 	bl	8001a14 <HAL_GetTick>
 8002168:	6138      	str	r0, [r7, #16]
 800216a:	e008      	b.n	800217e <HAL_RCC_OscConfig+0x236>
 800216c:	f7ff fc52 	bl	8001a14 <HAL_GetTick>
 8002170:	4602      	mov	r2, r0
 8002172:	693b      	ldr	r3, [r7, #16]
 8002174:	1ad3      	subs	r3, r2, r3
 8002176:	2b02      	cmp	r3, #2
 8002178:	d901      	bls.n	800217e <HAL_RCC_OscConfig+0x236>
 800217a:	2303      	movs	r3, #3
 800217c:	e15a      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 800217e:	4b0d      	ldr	r3, [pc, #52]	; (80021b4 <HAL_RCC_OscConfig+0x26c>)
 8002180:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002182:	f003 0302 	and.w	r3, r3, #2
 8002186:	2b00      	cmp	r3, #0
 8002188:	d0f0      	beq.n	800216c <HAL_RCC_OscConfig+0x224>
 800218a:	2001      	movs	r0, #1
 800218c:	f000 faa8 	bl	80026e0 <RCC_Delay>
 8002190:	e01c      	b.n	80021cc <HAL_RCC_OscConfig+0x284>
 8002192:	4b0a      	ldr	r3, [pc, #40]	; (80021bc <HAL_RCC_OscConfig+0x274>)
 8002194:	2200      	movs	r2, #0
 8002196:	601a      	str	r2, [r3, #0]
 8002198:	f7ff fc3c 	bl	8001a14 <HAL_GetTick>
 800219c:	6138      	str	r0, [r7, #16]
 800219e:	e00f      	b.n	80021c0 <HAL_RCC_OscConfig+0x278>
 80021a0:	f7ff fc38 	bl	8001a14 <HAL_GetTick>
 80021a4:	4602      	mov	r2, r0
 80021a6:	693b      	ldr	r3, [r7, #16]
 80021a8:	1ad3      	subs	r3, r2, r3
 80021aa:	2b02      	cmp	r3, #2
 80021ac:	d908      	bls.n	80021c0 <HAL_RCC_OscConfig+0x278>
 80021ae:	2303      	movs	r3, #3
 80021b0:	e140      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80021b2:	bf00      	nop
 80021b4:	40021000 	.word	0x40021000
 80021b8:	42420000 	.word	0x42420000
 80021bc:	42420480 	.word	0x42420480
 80021c0:	4b9e      	ldr	r3, [pc, #632]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80021c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021c4:	f003 0302 	and.w	r3, r3, #2
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d1e9      	bne.n	80021a0 <HAL_RCC_OscConfig+0x258>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	f003 0304 	and.w	r3, r3, #4
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	f000 80a6 	beq.w	8002326 <HAL_RCC_OscConfig+0x3de>
 80021da:	2300      	movs	r3, #0
 80021dc:	75fb      	strb	r3, [r7, #23]
 80021de:	4b97      	ldr	r3, [pc, #604]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80021e0:	69db      	ldr	r3, [r3, #28]
 80021e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d10d      	bne.n	8002206 <HAL_RCC_OscConfig+0x2be>
 80021ea:	4b94      	ldr	r3, [pc, #592]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80021ec:	69db      	ldr	r3, [r3, #28]
 80021ee:	4a93      	ldr	r2, [pc, #588]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80021f0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80021f4:	61d3      	str	r3, [r2, #28]
 80021f6:	4b91      	ldr	r3, [pc, #580]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80021f8:	69db      	ldr	r3, [r3, #28]
 80021fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021fe:	60bb      	str	r3, [r7, #8]
 8002200:	68bb      	ldr	r3, [r7, #8]
 8002202:	2301      	movs	r3, #1
 8002204:	75fb      	strb	r3, [r7, #23]
 8002206:	4b8e      	ldr	r3, [pc, #568]	; (8002440 <HAL_RCC_OscConfig+0x4f8>)
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800220e:	2b00      	cmp	r3, #0
 8002210:	d118      	bne.n	8002244 <HAL_RCC_OscConfig+0x2fc>
 8002212:	4b8b      	ldr	r3, [pc, #556]	; (8002440 <HAL_RCC_OscConfig+0x4f8>)
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	4a8a      	ldr	r2, [pc, #552]	; (8002440 <HAL_RCC_OscConfig+0x4f8>)
 8002218:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800221c:	6013      	str	r3, [r2, #0]
 800221e:	f7ff fbf9 	bl	8001a14 <HAL_GetTick>
 8002222:	6138      	str	r0, [r7, #16]
 8002224:	e008      	b.n	8002238 <HAL_RCC_OscConfig+0x2f0>
 8002226:	f7ff fbf5 	bl	8001a14 <HAL_GetTick>
 800222a:	4602      	mov	r2, r0
 800222c:	693b      	ldr	r3, [r7, #16]
 800222e:	1ad3      	subs	r3, r2, r3
 8002230:	2b64      	cmp	r3, #100	; 0x64
 8002232:	d901      	bls.n	8002238 <HAL_RCC_OscConfig+0x2f0>
 8002234:	2303      	movs	r3, #3
 8002236:	e0fd      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8002238:	4b81      	ldr	r3, [pc, #516]	; (8002440 <HAL_RCC_OscConfig+0x4f8>)
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002240:	2b00      	cmp	r3, #0
 8002242:	d0f0      	beq.n	8002226 <HAL_RCC_OscConfig+0x2de>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	68db      	ldr	r3, [r3, #12]
 8002248:	2b01      	cmp	r3, #1
 800224a:	d106      	bne.n	800225a <HAL_RCC_OscConfig+0x312>
 800224c:	4b7b      	ldr	r3, [pc, #492]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800224e:	6a1b      	ldr	r3, [r3, #32]
 8002250:	4a7a      	ldr	r2, [pc, #488]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002252:	f043 0301 	orr.w	r3, r3, #1
 8002256:	6213      	str	r3, [r2, #32]
 8002258:	e02d      	b.n	80022b6 <HAL_RCC_OscConfig+0x36e>
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	68db      	ldr	r3, [r3, #12]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d10c      	bne.n	800227c <HAL_RCC_OscConfig+0x334>
 8002262:	4b76      	ldr	r3, [pc, #472]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002264:	6a1b      	ldr	r3, [r3, #32]
 8002266:	4a75      	ldr	r2, [pc, #468]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002268:	f023 0301 	bic.w	r3, r3, #1
 800226c:	6213      	str	r3, [r2, #32]
 800226e:	4b73      	ldr	r3, [pc, #460]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002270:	6a1b      	ldr	r3, [r3, #32]
 8002272:	4a72      	ldr	r2, [pc, #456]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002274:	f023 0304 	bic.w	r3, r3, #4
 8002278:	6213      	str	r3, [r2, #32]
 800227a:	e01c      	b.n	80022b6 <HAL_RCC_OscConfig+0x36e>
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	68db      	ldr	r3, [r3, #12]
 8002280:	2b05      	cmp	r3, #5
 8002282:	d10c      	bne.n	800229e <HAL_RCC_OscConfig+0x356>
 8002284:	4b6d      	ldr	r3, [pc, #436]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002286:	6a1b      	ldr	r3, [r3, #32]
 8002288:	4a6c      	ldr	r2, [pc, #432]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800228a:	f043 0304 	orr.w	r3, r3, #4
 800228e:	6213      	str	r3, [r2, #32]
 8002290:	4b6a      	ldr	r3, [pc, #424]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002292:	6a1b      	ldr	r3, [r3, #32]
 8002294:	4a69      	ldr	r2, [pc, #420]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002296:	f043 0301 	orr.w	r3, r3, #1
 800229a:	6213      	str	r3, [r2, #32]
 800229c:	e00b      	b.n	80022b6 <HAL_RCC_OscConfig+0x36e>
 800229e:	4b67      	ldr	r3, [pc, #412]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80022a0:	6a1b      	ldr	r3, [r3, #32]
 80022a2:	4a66      	ldr	r2, [pc, #408]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80022a4:	f023 0301 	bic.w	r3, r3, #1
 80022a8:	6213      	str	r3, [r2, #32]
 80022aa:	4b64      	ldr	r3, [pc, #400]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80022ac:	6a1b      	ldr	r3, [r3, #32]
 80022ae:	4a63      	ldr	r2, [pc, #396]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80022b0:	f023 0304 	bic.w	r3, r3, #4
 80022b4:	6213      	str	r3, [r2, #32]
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	68db      	ldr	r3, [r3, #12]
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d015      	beq.n	80022ea <HAL_RCC_OscConfig+0x3a2>
 80022be:	f7ff fba9 	bl	8001a14 <HAL_GetTick>
 80022c2:	6138      	str	r0, [r7, #16]
 80022c4:	e00a      	b.n	80022dc <HAL_RCC_OscConfig+0x394>
 80022c6:	f7ff fba5 	bl	8001a14 <HAL_GetTick>
 80022ca:	4602      	mov	r2, r0
 80022cc:	693b      	ldr	r3, [r7, #16]
 80022ce:	1ad3      	subs	r3, r2, r3
 80022d0:	f241 3288 	movw	r2, #5000	; 0x1388
 80022d4:	4293      	cmp	r3, r2
 80022d6:	d901      	bls.n	80022dc <HAL_RCC_OscConfig+0x394>
 80022d8:	2303      	movs	r3, #3
 80022da:	e0ab      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80022dc:	4b57      	ldr	r3, [pc, #348]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80022de:	6a1b      	ldr	r3, [r3, #32]
 80022e0:	f003 0302 	and.w	r3, r3, #2
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	d0ee      	beq.n	80022c6 <HAL_RCC_OscConfig+0x37e>
 80022e8:	e014      	b.n	8002314 <HAL_RCC_OscConfig+0x3cc>
 80022ea:	f7ff fb93 	bl	8001a14 <HAL_GetTick>
 80022ee:	6138      	str	r0, [r7, #16]
 80022f0:	e00a      	b.n	8002308 <HAL_RCC_OscConfig+0x3c0>
 80022f2:	f7ff fb8f 	bl	8001a14 <HAL_GetTick>
 80022f6:	4602      	mov	r2, r0
 80022f8:	693b      	ldr	r3, [r7, #16]
 80022fa:	1ad3      	subs	r3, r2, r3
 80022fc:	f241 3288 	movw	r2, #5000	; 0x1388
 8002300:	4293      	cmp	r3, r2
 8002302:	d901      	bls.n	8002308 <HAL_RCC_OscConfig+0x3c0>
 8002304:	2303      	movs	r3, #3
 8002306:	e095      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8002308:	4b4c      	ldr	r3, [pc, #304]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800230a:	6a1b      	ldr	r3, [r3, #32]
 800230c:	f003 0302 	and.w	r3, r3, #2
 8002310:	2b00      	cmp	r3, #0
 8002312:	d1ee      	bne.n	80022f2 <HAL_RCC_OscConfig+0x3aa>
 8002314:	7dfb      	ldrb	r3, [r7, #23]
 8002316:	2b01      	cmp	r3, #1
 8002318:	d105      	bne.n	8002326 <HAL_RCC_OscConfig+0x3de>
 800231a:	4b48      	ldr	r3, [pc, #288]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800231c:	69db      	ldr	r3, [r3, #28]
 800231e:	4a47      	ldr	r2, [pc, #284]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002320:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002324:	61d3      	str	r3, [r2, #28]
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	69db      	ldr	r3, [r3, #28]
 800232a:	2b00      	cmp	r3, #0
 800232c:	f000 8081 	beq.w	8002432 <HAL_RCC_OscConfig+0x4ea>
 8002330:	4b42      	ldr	r3, [pc, #264]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002332:	685b      	ldr	r3, [r3, #4]
 8002334:	f003 030c 	and.w	r3, r3, #12
 8002338:	2b08      	cmp	r3, #8
 800233a:	d061      	beq.n	8002400 <HAL_RCC_OscConfig+0x4b8>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	69db      	ldr	r3, [r3, #28]
 8002340:	2b02      	cmp	r3, #2
 8002342:	d146      	bne.n	80023d2 <HAL_RCC_OscConfig+0x48a>
 8002344:	4b3f      	ldr	r3, [pc, #252]	; (8002444 <HAL_RCC_OscConfig+0x4fc>)
 8002346:	2200      	movs	r2, #0
 8002348:	601a      	str	r2, [r3, #0]
 800234a:	f7ff fb63 	bl	8001a14 <HAL_GetTick>
 800234e:	6138      	str	r0, [r7, #16]
 8002350:	e008      	b.n	8002364 <HAL_RCC_OscConfig+0x41c>
 8002352:	f7ff fb5f 	bl	8001a14 <HAL_GetTick>
 8002356:	4602      	mov	r2, r0
 8002358:	693b      	ldr	r3, [r7, #16]
 800235a:	1ad3      	subs	r3, r2, r3
 800235c:	2b02      	cmp	r3, #2
 800235e:	d901      	bls.n	8002364 <HAL_RCC_OscConfig+0x41c>
 8002360:	2303      	movs	r3, #3
 8002362:	e067      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8002364:	4b35      	ldr	r3, [pc, #212]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800236c:	2b00      	cmp	r3, #0
 800236e:	d1f0      	bne.n	8002352 <HAL_RCC_OscConfig+0x40a>
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	6a1b      	ldr	r3, [r3, #32]
 8002374:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002378:	d108      	bne.n	800238c <HAL_RCC_OscConfig+0x444>
 800237a:	4b30      	ldr	r3, [pc, #192]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800237c:	685b      	ldr	r3, [r3, #4]
 800237e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	689b      	ldr	r3, [r3, #8]
 8002386:	492d      	ldr	r1, [pc, #180]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 8002388:	4313      	orrs	r3, r2
 800238a:	604b      	str	r3, [r1, #4]
 800238c:	4b2b      	ldr	r3, [pc, #172]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800238e:	685b      	ldr	r3, [r3, #4]
 8002390:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	6a19      	ldr	r1, [r3, #32]
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800239c:	430b      	orrs	r3, r1
 800239e:	4927      	ldr	r1, [pc, #156]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80023a0:	4313      	orrs	r3, r2
 80023a2:	604b      	str	r3, [r1, #4]
 80023a4:	4b27      	ldr	r3, [pc, #156]	; (8002444 <HAL_RCC_OscConfig+0x4fc>)
 80023a6:	2201      	movs	r2, #1
 80023a8:	601a      	str	r2, [r3, #0]
 80023aa:	f7ff fb33 	bl	8001a14 <HAL_GetTick>
 80023ae:	6138      	str	r0, [r7, #16]
 80023b0:	e008      	b.n	80023c4 <HAL_RCC_OscConfig+0x47c>
 80023b2:	f7ff fb2f 	bl	8001a14 <HAL_GetTick>
 80023b6:	4602      	mov	r2, r0
 80023b8:	693b      	ldr	r3, [r7, #16]
 80023ba:	1ad3      	subs	r3, r2, r3
 80023bc:	2b02      	cmp	r3, #2
 80023be:	d901      	bls.n	80023c4 <HAL_RCC_OscConfig+0x47c>
 80023c0:	2303      	movs	r3, #3
 80023c2:	e037      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80023c4:	4b1d      	ldr	r3, [pc, #116]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80023c6:	681b      	ldr	r3, [r3, #0]
 80023c8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d0f0      	beq.n	80023b2 <HAL_RCC_OscConfig+0x46a>
 80023d0:	e02f      	b.n	8002432 <HAL_RCC_OscConfig+0x4ea>
 80023d2:	4b1c      	ldr	r3, [pc, #112]	; (8002444 <HAL_RCC_OscConfig+0x4fc>)
 80023d4:	2200      	movs	r2, #0
 80023d6:	601a      	str	r2, [r3, #0]
 80023d8:	f7ff fb1c 	bl	8001a14 <HAL_GetTick>
 80023dc:	6138      	str	r0, [r7, #16]
 80023de:	e008      	b.n	80023f2 <HAL_RCC_OscConfig+0x4aa>
 80023e0:	f7ff fb18 	bl	8001a14 <HAL_GetTick>
 80023e4:	4602      	mov	r2, r0
 80023e6:	693b      	ldr	r3, [r7, #16]
 80023e8:	1ad3      	subs	r3, r2, r3
 80023ea:	2b02      	cmp	r3, #2
 80023ec:	d901      	bls.n	80023f2 <HAL_RCC_OscConfig+0x4aa>
 80023ee:	2303      	movs	r3, #3
 80023f0:	e020      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 80023f2:	4b12      	ldr	r3, [pc, #72]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d1f0      	bne.n	80023e0 <HAL_RCC_OscConfig+0x498>
 80023fe:	e018      	b.n	8002432 <HAL_RCC_OscConfig+0x4ea>
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	69db      	ldr	r3, [r3, #28]
 8002404:	2b01      	cmp	r3, #1
 8002406:	d101      	bne.n	800240c <HAL_RCC_OscConfig+0x4c4>
 8002408:	2301      	movs	r3, #1
 800240a:	e013      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 800240c:	4b0b      	ldr	r3, [pc, #44]	; (800243c <HAL_RCC_OscConfig+0x4f4>)
 800240e:	685b      	ldr	r3, [r3, #4]
 8002410:	60fb      	str	r3, [r7, #12]
 8002412:	68fb      	ldr	r3, [r7, #12]
 8002414:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	6a1b      	ldr	r3, [r3, #32]
 800241c:	429a      	cmp	r2, r3
 800241e:	d106      	bne.n	800242e <HAL_RCC_OscConfig+0x4e6>
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800242a:	429a      	cmp	r2, r3
 800242c:	d001      	beq.n	8002432 <HAL_RCC_OscConfig+0x4ea>
 800242e:	2301      	movs	r3, #1
 8002430:	e000      	b.n	8002434 <HAL_RCC_OscConfig+0x4ec>
 8002432:	2300      	movs	r3, #0
 8002434:	4618      	mov	r0, r3
 8002436:	3718      	adds	r7, #24
 8002438:	46bd      	mov	sp, r7
 800243a:	bd80      	pop	{r7, pc}
 800243c:	40021000 	.word	0x40021000
 8002440:	40007000 	.word	0x40007000
 8002444:	42420060 	.word	0x42420060

08002448 <HAL_RCC_ClockConfig>:
 8002448:	b580      	push	{r7, lr}
 800244a:	b084      	sub	sp, #16
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	6039      	str	r1, [r7, #0]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	2b00      	cmp	r3, #0
 8002456:	d101      	bne.n	800245c <HAL_RCC_ClockConfig+0x14>
 8002458:	2301      	movs	r3, #1
 800245a:	e0d0      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 800245c:	4b6a      	ldr	r3, [pc, #424]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	f003 0307 	and.w	r3, r3, #7
 8002464:	683a      	ldr	r2, [r7, #0]
 8002466:	429a      	cmp	r2, r3
 8002468:	d910      	bls.n	800248c <HAL_RCC_ClockConfig+0x44>
 800246a:	4b67      	ldr	r3, [pc, #412]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	f023 0207 	bic.w	r2, r3, #7
 8002472:	4965      	ldr	r1, [pc, #404]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 8002474:	683b      	ldr	r3, [r7, #0]
 8002476:	4313      	orrs	r3, r2
 8002478:	600b      	str	r3, [r1, #0]
 800247a:	4b63      	ldr	r3, [pc, #396]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	f003 0307 	and.w	r3, r3, #7
 8002482:	683a      	ldr	r2, [r7, #0]
 8002484:	429a      	cmp	r2, r3
 8002486:	d001      	beq.n	800248c <HAL_RCC_ClockConfig+0x44>
 8002488:	2301      	movs	r3, #1
 800248a:	e0b8      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	f003 0302 	and.w	r3, r3, #2
 8002494:	2b00      	cmp	r3, #0
 8002496:	d020      	beq.n	80024da <HAL_RCC_ClockConfig+0x92>
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	f003 0304 	and.w	r3, r3, #4
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d005      	beq.n	80024b0 <HAL_RCC_ClockConfig+0x68>
 80024a4:	4b59      	ldr	r3, [pc, #356]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024a6:	685b      	ldr	r3, [r3, #4]
 80024a8:	4a58      	ldr	r2, [pc, #352]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024aa:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80024ae:	6053      	str	r3, [r2, #4]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	f003 0308 	and.w	r3, r3, #8
 80024b8:	2b00      	cmp	r3, #0
 80024ba:	d005      	beq.n	80024c8 <HAL_RCC_ClockConfig+0x80>
 80024bc:	4b53      	ldr	r3, [pc, #332]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024be:	685b      	ldr	r3, [r3, #4]
 80024c0:	4a52      	ldr	r2, [pc, #328]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024c2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80024c6:	6053      	str	r3, [r2, #4]
 80024c8:	4b50      	ldr	r3, [pc, #320]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024ca:	685b      	ldr	r3, [r3, #4]
 80024cc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	689b      	ldr	r3, [r3, #8]
 80024d4:	494d      	ldr	r1, [pc, #308]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024d6:	4313      	orrs	r3, r2
 80024d8:	604b      	str	r3, [r1, #4]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f003 0301 	and.w	r3, r3, #1
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d040      	beq.n	8002568 <HAL_RCC_ClockConfig+0x120>
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	685b      	ldr	r3, [r3, #4]
 80024ea:	2b01      	cmp	r3, #1
 80024ec:	d107      	bne.n	80024fe <HAL_RCC_ClockConfig+0xb6>
 80024ee:	4b47      	ldr	r3, [pc, #284]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d115      	bne.n	8002526 <HAL_RCC_ClockConfig+0xde>
 80024fa:	2301      	movs	r3, #1
 80024fc:	e07f      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	685b      	ldr	r3, [r3, #4]
 8002502:	2b02      	cmp	r3, #2
 8002504:	d107      	bne.n	8002516 <HAL_RCC_ClockConfig+0xce>
 8002506:	4b41      	ldr	r3, [pc, #260]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800250e:	2b00      	cmp	r3, #0
 8002510:	d109      	bne.n	8002526 <HAL_RCC_ClockConfig+0xde>
 8002512:	2301      	movs	r3, #1
 8002514:	e073      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 8002516:	4b3d      	ldr	r3, [pc, #244]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	f003 0302 	and.w	r3, r3, #2
 800251e:	2b00      	cmp	r3, #0
 8002520:	d101      	bne.n	8002526 <HAL_RCC_ClockConfig+0xde>
 8002522:	2301      	movs	r3, #1
 8002524:	e06b      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 8002526:	4b39      	ldr	r3, [pc, #228]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 8002528:	685b      	ldr	r3, [r3, #4]
 800252a:	f023 0203 	bic.w	r2, r3, #3
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	685b      	ldr	r3, [r3, #4]
 8002532:	4936      	ldr	r1, [pc, #216]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 8002534:	4313      	orrs	r3, r2
 8002536:	604b      	str	r3, [r1, #4]
 8002538:	f7ff fa6c 	bl	8001a14 <HAL_GetTick>
 800253c:	60f8      	str	r0, [r7, #12]
 800253e:	e00a      	b.n	8002556 <HAL_RCC_ClockConfig+0x10e>
 8002540:	f7ff fa68 	bl	8001a14 <HAL_GetTick>
 8002544:	4602      	mov	r2, r0
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	1ad3      	subs	r3, r2, r3
 800254a:	f241 3288 	movw	r2, #5000	; 0x1388
 800254e:	4293      	cmp	r3, r2
 8002550:	d901      	bls.n	8002556 <HAL_RCC_ClockConfig+0x10e>
 8002552:	2303      	movs	r3, #3
 8002554:	e053      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 8002556:	4b2d      	ldr	r3, [pc, #180]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 8002558:	685b      	ldr	r3, [r3, #4]
 800255a:	f003 020c 	and.w	r2, r3, #12
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	685b      	ldr	r3, [r3, #4]
 8002562:	009b      	lsls	r3, r3, #2
 8002564:	429a      	cmp	r2, r3
 8002566:	d1eb      	bne.n	8002540 <HAL_RCC_ClockConfig+0xf8>
 8002568:	4b27      	ldr	r3, [pc, #156]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f003 0307 	and.w	r3, r3, #7
 8002570:	683a      	ldr	r2, [r7, #0]
 8002572:	429a      	cmp	r2, r3
 8002574:	d210      	bcs.n	8002598 <HAL_RCC_ClockConfig+0x150>
 8002576:	4b24      	ldr	r3, [pc, #144]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	f023 0207 	bic.w	r2, r3, #7
 800257e:	4922      	ldr	r1, [pc, #136]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 8002580:	683b      	ldr	r3, [r7, #0]
 8002582:	4313      	orrs	r3, r2
 8002584:	600b      	str	r3, [r1, #0]
 8002586:	4b20      	ldr	r3, [pc, #128]	; (8002608 <HAL_RCC_ClockConfig+0x1c0>)
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	f003 0307 	and.w	r3, r3, #7
 800258e:	683a      	ldr	r2, [r7, #0]
 8002590:	429a      	cmp	r2, r3
 8002592:	d001      	beq.n	8002598 <HAL_RCC_ClockConfig+0x150>
 8002594:	2301      	movs	r3, #1
 8002596:	e032      	b.n	80025fe <HAL_RCC_ClockConfig+0x1b6>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	f003 0304 	and.w	r3, r3, #4
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d008      	beq.n	80025b6 <HAL_RCC_ClockConfig+0x16e>
 80025a4:	4b19      	ldr	r3, [pc, #100]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80025a6:	685b      	ldr	r3, [r3, #4]
 80025a8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	68db      	ldr	r3, [r3, #12]
 80025b0:	4916      	ldr	r1, [pc, #88]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80025b2:	4313      	orrs	r3, r2
 80025b4:	604b      	str	r3, [r1, #4]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f003 0308 	and.w	r3, r3, #8
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d009      	beq.n	80025d6 <HAL_RCC_ClockConfig+0x18e>
 80025c2:	4b12      	ldr	r3, [pc, #72]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	691b      	ldr	r3, [r3, #16]
 80025ce:	00db      	lsls	r3, r3, #3
 80025d0:	490e      	ldr	r1, [pc, #56]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80025d2:	4313      	orrs	r3, r2
 80025d4:	604b      	str	r3, [r1, #4]
 80025d6:	f000 f821 	bl	800261c <HAL_RCC_GetSysClockFreq>
 80025da:	4601      	mov	r1, r0
 80025dc:	4b0b      	ldr	r3, [pc, #44]	; (800260c <HAL_RCC_ClockConfig+0x1c4>)
 80025de:	685b      	ldr	r3, [r3, #4]
 80025e0:	091b      	lsrs	r3, r3, #4
 80025e2:	f003 030f 	and.w	r3, r3, #15
 80025e6:	4a0a      	ldr	r2, [pc, #40]	; (8002610 <HAL_RCC_ClockConfig+0x1c8>)
 80025e8:	5cd3      	ldrb	r3, [r2, r3]
 80025ea:	fa21 f303 	lsr.w	r3, r1, r3
 80025ee:	4a09      	ldr	r2, [pc, #36]	; (8002614 <HAL_RCC_ClockConfig+0x1cc>)
 80025f0:	6013      	str	r3, [r2, #0]
 80025f2:	4b09      	ldr	r3, [pc, #36]	; (8002618 <HAL_RCC_ClockConfig+0x1d0>)
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	4618      	mov	r0, r3
 80025f8:	f7ff f9ca 	bl	8001990 <HAL_InitTick>
 80025fc:	2300      	movs	r3, #0
 80025fe:	4618      	mov	r0, r3
 8002600:	3710      	adds	r7, #16
 8002602:	46bd      	mov	sp, r7
 8002604:	bd80      	pop	{r7, pc}
 8002606:	bf00      	nop
 8002608:	40022000 	.word	0x40022000
 800260c:	40021000 	.word	0x40021000
 8002610:	0800d54c 	.word	0x0800d54c
 8002614:	2000007c 	.word	0x2000007c
 8002618:	20000080 	.word	0x20000080

0800261c <HAL_RCC_GetSysClockFreq>:
 800261c:	b490      	push	{r4, r7}
 800261e:	b08a      	sub	sp, #40	; 0x28
 8002620:	af00      	add	r7, sp, #0
 8002622:	4b2a      	ldr	r3, [pc, #168]	; (80026cc <HAL_RCC_GetSysClockFreq+0xb0>)
 8002624:	1d3c      	adds	r4, r7, #4
 8002626:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002628:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800262c:	4b28      	ldr	r3, [pc, #160]	; (80026d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 800262e:	881b      	ldrh	r3, [r3, #0]
 8002630:	803b      	strh	r3, [r7, #0]
 8002632:	2300      	movs	r3, #0
 8002634:	61fb      	str	r3, [r7, #28]
 8002636:	2300      	movs	r3, #0
 8002638:	61bb      	str	r3, [r7, #24]
 800263a:	2300      	movs	r3, #0
 800263c:	627b      	str	r3, [r7, #36]	; 0x24
 800263e:	2300      	movs	r3, #0
 8002640:	617b      	str	r3, [r7, #20]
 8002642:	2300      	movs	r3, #0
 8002644:	623b      	str	r3, [r7, #32]
 8002646:	4b23      	ldr	r3, [pc, #140]	; (80026d4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002648:	685b      	ldr	r3, [r3, #4]
 800264a:	61fb      	str	r3, [r7, #28]
 800264c:	69fb      	ldr	r3, [r7, #28]
 800264e:	f003 030c 	and.w	r3, r3, #12
 8002652:	2b04      	cmp	r3, #4
 8002654:	d002      	beq.n	800265c <HAL_RCC_GetSysClockFreq+0x40>
 8002656:	2b08      	cmp	r3, #8
 8002658:	d003      	beq.n	8002662 <HAL_RCC_GetSysClockFreq+0x46>
 800265a:	e02d      	b.n	80026b8 <HAL_RCC_GetSysClockFreq+0x9c>
 800265c:	4b1e      	ldr	r3, [pc, #120]	; (80026d8 <HAL_RCC_GetSysClockFreq+0xbc>)
 800265e:	623b      	str	r3, [r7, #32]
 8002660:	e02d      	b.n	80026be <HAL_RCC_GetSysClockFreq+0xa2>
 8002662:	69fb      	ldr	r3, [r7, #28]
 8002664:	0c9b      	lsrs	r3, r3, #18
 8002666:	f003 030f 	and.w	r3, r3, #15
 800266a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800266e:	4413      	add	r3, r2
 8002670:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002674:	617b      	str	r3, [r7, #20]
 8002676:	69fb      	ldr	r3, [r7, #28]
 8002678:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800267c:	2b00      	cmp	r3, #0
 800267e:	d013      	beq.n	80026a8 <HAL_RCC_GetSysClockFreq+0x8c>
 8002680:	4b14      	ldr	r3, [pc, #80]	; (80026d4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002682:	685b      	ldr	r3, [r3, #4]
 8002684:	0c5b      	lsrs	r3, r3, #17
 8002686:	f003 0301 	and.w	r3, r3, #1
 800268a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800268e:	4413      	add	r3, r2
 8002690:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002694:	61bb      	str	r3, [r7, #24]
 8002696:	697b      	ldr	r3, [r7, #20]
 8002698:	4a0f      	ldr	r2, [pc, #60]	; (80026d8 <HAL_RCC_GetSysClockFreq+0xbc>)
 800269a:	fb02 f203 	mul.w	r2, r2, r3
 800269e:	69bb      	ldr	r3, [r7, #24]
 80026a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80026a4:	627b      	str	r3, [r7, #36]	; 0x24
 80026a6:	e004      	b.n	80026b2 <HAL_RCC_GetSysClockFreq+0x96>
 80026a8:	697b      	ldr	r3, [r7, #20]
 80026aa:	4a0c      	ldr	r2, [pc, #48]	; (80026dc <HAL_RCC_GetSysClockFreq+0xc0>)
 80026ac:	fb02 f303 	mul.w	r3, r2, r3
 80026b0:	627b      	str	r3, [r7, #36]	; 0x24
 80026b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80026b4:	623b      	str	r3, [r7, #32]
 80026b6:	e002      	b.n	80026be <HAL_RCC_GetSysClockFreq+0xa2>
 80026b8:	4b07      	ldr	r3, [pc, #28]	; (80026d8 <HAL_RCC_GetSysClockFreq+0xbc>)
 80026ba:	623b      	str	r3, [r7, #32]
 80026bc:	bf00      	nop
 80026be:	6a3b      	ldr	r3, [r7, #32]
 80026c0:	4618      	mov	r0, r3
 80026c2:	3728      	adds	r7, #40	; 0x28
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bc90      	pop	{r4, r7}
 80026c8:	4770      	bx	lr
 80026ca:	bf00      	nop
 80026cc:	08002ec4 	.word	0x08002ec4
 80026d0:	08002ed4 	.word	0x08002ed4
 80026d4:	40021000 	.word	0x40021000
 80026d8:	007a1200 	.word	0x007a1200
 80026dc:	003d0900 	.word	0x003d0900

080026e0 <RCC_Delay>:
 80026e0:	b480      	push	{r7}
 80026e2:	b085      	sub	sp, #20
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	6078      	str	r0, [r7, #4]
 80026e8:	4b0a      	ldr	r3, [pc, #40]	; (8002714 <RCC_Delay+0x34>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	4a0a      	ldr	r2, [pc, #40]	; (8002718 <RCC_Delay+0x38>)
 80026ee:	fba2 2303 	umull	r2, r3, r2, r3
 80026f2:	0a5b      	lsrs	r3, r3, #9
 80026f4:	687a      	ldr	r2, [r7, #4]
 80026f6:	fb02 f303 	mul.w	r3, r2, r3
 80026fa:	60fb      	str	r3, [r7, #12]
 80026fc:	bf00      	nop
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	1e5a      	subs	r2, r3, #1
 8002702:	60fa      	str	r2, [r7, #12]
 8002704:	2b00      	cmp	r3, #0
 8002706:	d1f9      	bne.n	80026fc <RCC_Delay+0x1c>
 8002708:	bf00      	nop
 800270a:	3714      	adds	r7, #20
 800270c:	46bd      	mov	sp, r7
 800270e:	bc80      	pop	{r7}
 8002710:	4770      	bx	lr
 8002712:	bf00      	nop
 8002714:	2000007c 	.word	0x2000007c
 8002718:	10624dd3 	.word	0x10624dd3

0800271c <HAL_SPI_Init>:
 800271c:	b580      	push	{r7, lr}
 800271e:	b082      	sub	sp, #8
 8002720:	af00      	add	r7, sp, #0
 8002722:	6078      	str	r0, [r7, #4]
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	2b00      	cmp	r3, #0
 8002728:	d101      	bne.n	800272e <HAL_SPI_Init+0x12>
 800272a:	2301      	movs	r3, #1
 800272c:	e076      	b.n	800281c <HAL_SPI_Init+0x100>
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002732:	2b00      	cmp	r3, #0
 8002734:	d108      	bne.n	8002748 <HAL_SPI_Init+0x2c>
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	685b      	ldr	r3, [r3, #4]
 800273a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800273e:	d009      	beq.n	8002754 <HAL_SPI_Init+0x38>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2200      	movs	r2, #0
 8002744:	61da      	str	r2, [r3, #28]
 8002746:	e005      	b.n	8002754 <HAL_SPI_Init+0x38>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2200      	movs	r2, #0
 800274c:	611a      	str	r2, [r3, #16]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	2200      	movs	r2, #0
 8002752:	615a      	str	r2, [r3, #20]
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	2200      	movs	r2, #0
 8002758:	629a      	str	r2, [r3, #40]	; 0x28
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002760:	b2db      	uxtb	r3, r3
 8002762:	2b00      	cmp	r3, #0
 8002764:	d106      	bne.n	8002774 <HAL_SPI_Init+0x58>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	2200      	movs	r2, #0
 800276a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800276e:	6878      	ldr	r0, [r7, #4]
 8002770:	f7ff f830 	bl	80017d4 <HAL_SPI_MspInit>
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	2202      	movs	r2, #2
 8002778:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	681a      	ldr	r2, [r3, #0]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800278a:	601a      	str	r2, [r3, #0]
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	685b      	ldr	r3, [r3, #4]
 8002790:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	689b      	ldr	r3, [r3, #8]
 8002798:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800279c:	431a      	orrs	r2, r3
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	68db      	ldr	r3, [r3, #12]
 80027a2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80027a6:	431a      	orrs	r2, r3
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	691b      	ldr	r3, [r3, #16]
 80027ac:	f003 0302 	and.w	r3, r3, #2
 80027b0:	431a      	orrs	r2, r3
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	695b      	ldr	r3, [r3, #20]
 80027b6:	f003 0301 	and.w	r3, r3, #1
 80027ba:	431a      	orrs	r2, r3
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	699b      	ldr	r3, [r3, #24]
 80027c0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80027c4:	431a      	orrs	r2, r3
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	69db      	ldr	r3, [r3, #28]
 80027ca:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80027ce:	431a      	orrs	r2, r3
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	6a1b      	ldr	r3, [r3, #32]
 80027d4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80027d8:	ea42 0103 	orr.w	r1, r2, r3
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027e0:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	430a      	orrs	r2, r1
 80027ea:	601a      	str	r2, [r3, #0]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	699b      	ldr	r3, [r3, #24]
 80027f0:	0c1a      	lsrs	r2, r3, #16
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	f002 0204 	and.w	r2, r2, #4
 80027fa:	605a      	str	r2, [r3, #4]
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	69da      	ldr	r2, [r3, #28]
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800280a:	61da      	str	r2, [r3, #28]
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	2200      	movs	r2, #0
 8002810:	655a      	str	r2, [r3, #84]	; 0x54
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	2201      	movs	r2, #1
 8002816:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800281a:	2300      	movs	r3, #0
 800281c:	4618      	mov	r0, r3
 800281e:	3708      	adds	r7, #8
 8002820:	46bd      	mov	sp, r7
 8002822:	bd80      	pop	{r7, pc}

08002824 <HAL_SPI_Transmit>:
 8002824:	b580      	push	{r7, lr}
 8002826:	b088      	sub	sp, #32
 8002828:	af00      	add	r7, sp, #0
 800282a:	60f8      	str	r0, [r7, #12]
 800282c:	60b9      	str	r1, [r7, #8]
 800282e:	603b      	str	r3, [r7, #0]
 8002830:	4613      	mov	r3, r2
 8002832:	80fb      	strh	r3, [r7, #6]
 8002834:	2300      	movs	r3, #0
 8002836:	77fb      	strb	r3, [r7, #31]
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800283e:	2b01      	cmp	r3, #1
 8002840:	d101      	bne.n	8002846 <HAL_SPI_Transmit+0x22>
 8002842:	2302      	movs	r3, #2
 8002844:	e126      	b.n	8002a94 <HAL_SPI_Transmit+0x270>
 8002846:	68fb      	ldr	r3, [r7, #12]
 8002848:	2201      	movs	r2, #1
 800284a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800284e:	f7ff f8e1 	bl	8001a14 <HAL_GetTick>
 8002852:	61b8      	str	r0, [r7, #24]
 8002854:	88fb      	ldrh	r3, [r7, #6]
 8002856:	82fb      	strh	r3, [r7, #22]
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800285e:	b2db      	uxtb	r3, r3
 8002860:	2b01      	cmp	r3, #1
 8002862:	d002      	beq.n	800286a <HAL_SPI_Transmit+0x46>
 8002864:	2302      	movs	r3, #2
 8002866:	77fb      	strb	r3, [r7, #31]
 8002868:	e10b      	b.n	8002a82 <HAL_SPI_Transmit+0x25e>
 800286a:	68bb      	ldr	r3, [r7, #8]
 800286c:	2b00      	cmp	r3, #0
 800286e:	d002      	beq.n	8002876 <HAL_SPI_Transmit+0x52>
 8002870:	88fb      	ldrh	r3, [r7, #6]
 8002872:	2b00      	cmp	r3, #0
 8002874:	d102      	bne.n	800287c <HAL_SPI_Transmit+0x58>
 8002876:	2301      	movs	r3, #1
 8002878:	77fb      	strb	r3, [r7, #31]
 800287a:	e102      	b.n	8002a82 <HAL_SPI_Transmit+0x25e>
 800287c:	68fb      	ldr	r3, [r7, #12]
 800287e:	2203      	movs	r2, #3
 8002880:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	2200      	movs	r2, #0
 8002888:	655a      	str	r2, [r3, #84]	; 0x54
 800288a:	68fb      	ldr	r3, [r7, #12]
 800288c:	68ba      	ldr	r2, [r7, #8]
 800288e:	631a      	str	r2, [r3, #48]	; 0x30
 8002890:	68fb      	ldr	r3, [r7, #12]
 8002892:	88fa      	ldrh	r2, [r7, #6]
 8002894:	869a      	strh	r2, [r3, #52]	; 0x34
 8002896:	68fb      	ldr	r3, [r7, #12]
 8002898:	88fa      	ldrh	r2, [r7, #6]
 800289a:	86da      	strh	r2, [r3, #54]	; 0x36
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	2200      	movs	r2, #0
 80028a0:	639a      	str	r2, [r3, #56]	; 0x38
 80028a2:	68fb      	ldr	r3, [r7, #12]
 80028a4:	2200      	movs	r2, #0
 80028a6:	879a      	strh	r2, [r3, #60]	; 0x3c
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	2200      	movs	r2, #0
 80028ac:	87da      	strh	r2, [r3, #62]	; 0x3e
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	2200      	movs	r2, #0
 80028b2:	645a      	str	r2, [r3, #68]	; 0x44
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	2200      	movs	r2, #0
 80028b8:	641a      	str	r2, [r3, #64]	; 0x40
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	689b      	ldr	r3, [r3, #8]
 80028be:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80028c2:	d10f      	bne.n	80028e4 <HAL_SPI_Transmit+0xc0>
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	681a      	ldr	r2, [r3, #0]
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80028d2:	601a      	str	r2, [r3, #0]
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	681a      	ldr	r2, [r3, #0]
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	681b      	ldr	r3, [r3, #0]
 80028de:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80028e2:	601a      	str	r2, [r3, #0]
 80028e4:	68fb      	ldr	r3, [r7, #12]
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80028ee:	2b40      	cmp	r3, #64	; 0x40
 80028f0:	d007      	beq.n	8002902 <HAL_SPI_Transmit+0xde>
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	681a      	ldr	r2, [r3, #0]
 80028f8:	68fb      	ldr	r3, [r7, #12]
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	68fb      	ldr	r3, [r7, #12]
 8002904:	68db      	ldr	r3, [r3, #12]
 8002906:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800290a:	d14b      	bne.n	80029a4 <HAL_SPI_Transmit+0x180>
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	685b      	ldr	r3, [r3, #4]
 8002910:	2b00      	cmp	r3, #0
 8002912:	d002      	beq.n	800291a <HAL_SPI_Transmit+0xf6>
 8002914:	8afb      	ldrh	r3, [r7, #22]
 8002916:	2b01      	cmp	r3, #1
 8002918:	d13e      	bne.n	8002998 <HAL_SPI_Transmit+0x174>
 800291a:	68fb      	ldr	r3, [r7, #12]
 800291c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800291e:	881a      	ldrh	r2, [r3, #0]
 8002920:	68fb      	ldr	r3, [r7, #12]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	60da      	str	r2, [r3, #12]
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800292a:	1c9a      	adds	r2, r3, #2
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	631a      	str	r2, [r3, #48]	; 0x30
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002934:	b29b      	uxth	r3, r3
 8002936:	3b01      	subs	r3, #1
 8002938:	b29a      	uxth	r2, r3
 800293a:	68fb      	ldr	r3, [r7, #12]
 800293c:	86da      	strh	r2, [r3, #54]	; 0x36
 800293e:	e02b      	b.n	8002998 <HAL_SPI_Transmit+0x174>
 8002940:	68fb      	ldr	r3, [r7, #12]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	689b      	ldr	r3, [r3, #8]
 8002946:	f003 0302 	and.w	r3, r3, #2
 800294a:	2b02      	cmp	r3, #2
 800294c:	d112      	bne.n	8002974 <HAL_SPI_Transmit+0x150>
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002952:	881a      	ldrh	r2, [r3, #0]
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	60da      	str	r2, [r3, #12]
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800295e:	1c9a      	adds	r2, r3, #2
 8002960:	68fb      	ldr	r3, [r7, #12]
 8002962:	631a      	str	r2, [r3, #48]	; 0x30
 8002964:	68fb      	ldr	r3, [r7, #12]
 8002966:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002968:	b29b      	uxth	r3, r3
 800296a:	3b01      	subs	r3, #1
 800296c:	b29a      	uxth	r2, r3
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	86da      	strh	r2, [r3, #54]	; 0x36
 8002972:	e011      	b.n	8002998 <HAL_SPI_Transmit+0x174>
 8002974:	f7ff f84e 	bl	8001a14 <HAL_GetTick>
 8002978:	4602      	mov	r2, r0
 800297a:	69bb      	ldr	r3, [r7, #24]
 800297c:	1ad3      	subs	r3, r2, r3
 800297e:	683a      	ldr	r2, [r7, #0]
 8002980:	429a      	cmp	r2, r3
 8002982:	d803      	bhi.n	800298c <HAL_SPI_Transmit+0x168>
 8002984:	683b      	ldr	r3, [r7, #0]
 8002986:	f1b3 3fff 	cmp.w	r3, #4294967295
 800298a:	d102      	bne.n	8002992 <HAL_SPI_Transmit+0x16e>
 800298c:	683b      	ldr	r3, [r7, #0]
 800298e:	2b00      	cmp	r3, #0
 8002990:	d102      	bne.n	8002998 <HAL_SPI_Transmit+0x174>
 8002992:	2303      	movs	r3, #3
 8002994:	77fb      	strb	r3, [r7, #31]
 8002996:	e074      	b.n	8002a82 <HAL_SPI_Transmit+0x25e>
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800299c:	b29b      	uxth	r3, r3
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d1ce      	bne.n	8002940 <HAL_SPI_Transmit+0x11c>
 80029a2:	e04c      	b.n	8002a3e <HAL_SPI_Transmit+0x21a>
 80029a4:	68fb      	ldr	r3, [r7, #12]
 80029a6:	685b      	ldr	r3, [r3, #4]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d002      	beq.n	80029b2 <HAL_SPI_Transmit+0x18e>
 80029ac:	8afb      	ldrh	r3, [r7, #22]
 80029ae:	2b01      	cmp	r3, #1
 80029b0:	d140      	bne.n	8002a34 <HAL_SPI_Transmit+0x210>
 80029b2:	68fb      	ldr	r3, [r7, #12]
 80029b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	330c      	adds	r3, #12
 80029bc:	7812      	ldrb	r2, [r2, #0]
 80029be:	701a      	strb	r2, [r3, #0]
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029c4:	1c5a      	adds	r2, r3, #1
 80029c6:	68fb      	ldr	r3, [r7, #12]
 80029c8:	631a      	str	r2, [r3, #48]	; 0x30
 80029ca:	68fb      	ldr	r3, [r7, #12]
 80029cc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80029ce:	b29b      	uxth	r3, r3
 80029d0:	3b01      	subs	r3, #1
 80029d2:	b29a      	uxth	r2, r3
 80029d4:	68fb      	ldr	r3, [r7, #12]
 80029d6:	86da      	strh	r2, [r3, #54]	; 0x36
 80029d8:	e02c      	b.n	8002a34 <HAL_SPI_Transmit+0x210>
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	689b      	ldr	r3, [r3, #8]
 80029e0:	f003 0302 	and.w	r3, r3, #2
 80029e4:	2b02      	cmp	r3, #2
 80029e6:	d113      	bne.n	8002a10 <HAL_SPI_Transmit+0x1ec>
 80029e8:	68fb      	ldr	r3, [r7, #12]
 80029ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	330c      	adds	r3, #12
 80029f2:	7812      	ldrb	r2, [r2, #0]
 80029f4:	701a      	strb	r2, [r3, #0]
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029fa:	1c5a      	adds	r2, r3, #1
 80029fc:	68fb      	ldr	r3, [r7, #12]
 80029fe:	631a      	str	r2, [r3, #48]	; 0x30
 8002a00:	68fb      	ldr	r3, [r7, #12]
 8002a02:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a04:	b29b      	uxth	r3, r3
 8002a06:	3b01      	subs	r3, #1
 8002a08:	b29a      	uxth	r2, r3
 8002a0a:	68fb      	ldr	r3, [r7, #12]
 8002a0c:	86da      	strh	r2, [r3, #54]	; 0x36
 8002a0e:	e011      	b.n	8002a34 <HAL_SPI_Transmit+0x210>
 8002a10:	f7ff f800 	bl	8001a14 <HAL_GetTick>
 8002a14:	4602      	mov	r2, r0
 8002a16:	69bb      	ldr	r3, [r7, #24]
 8002a18:	1ad3      	subs	r3, r2, r3
 8002a1a:	683a      	ldr	r2, [r7, #0]
 8002a1c:	429a      	cmp	r2, r3
 8002a1e:	d803      	bhi.n	8002a28 <HAL_SPI_Transmit+0x204>
 8002a20:	683b      	ldr	r3, [r7, #0]
 8002a22:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a26:	d102      	bne.n	8002a2e <HAL_SPI_Transmit+0x20a>
 8002a28:	683b      	ldr	r3, [r7, #0]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d102      	bne.n	8002a34 <HAL_SPI_Transmit+0x210>
 8002a2e:	2303      	movs	r3, #3
 8002a30:	77fb      	strb	r3, [r7, #31]
 8002a32:	e026      	b.n	8002a82 <HAL_SPI_Transmit+0x25e>
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a38:	b29b      	uxth	r3, r3
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d1cd      	bne.n	80029da <HAL_SPI_Transmit+0x1b6>
 8002a3e:	69ba      	ldr	r2, [r7, #24]
 8002a40:	6839      	ldr	r1, [r7, #0]
 8002a42:	68f8      	ldr	r0, [r7, #12]
 8002a44:	f000 f8b2 	bl	8002bac <SPI_EndRxTxTransaction>
 8002a48:	4603      	mov	r3, r0
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d002      	beq.n	8002a54 <HAL_SPI_Transmit+0x230>
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	2220      	movs	r2, #32
 8002a52:	655a      	str	r2, [r3, #84]	; 0x54
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	689b      	ldr	r3, [r3, #8]
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	d10a      	bne.n	8002a72 <HAL_SPI_Transmit+0x24e>
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	613b      	str	r3, [r7, #16]
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	68db      	ldr	r3, [r3, #12]
 8002a66:	613b      	str	r3, [r7, #16]
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	689b      	ldr	r3, [r3, #8]
 8002a6e:	613b      	str	r3, [r7, #16]
 8002a70:	693b      	ldr	r3, [r7, #16]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d002      	beq.n	8002a80 <HAL_SPI_Transmit+0x25c>
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	77fb      	strb	r3, [r7, #31]
 8002a7e:	e000      	b.n	8002a82 <HAL_SPI_Transmit+0x25e>
 8002a80:	bf00      	nop
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	2201      	movs	r2, #1
 8002a86:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002a92:	7ffb      	ldrb	r3, [r7, #31]
 8002a94:	4618      	mov	r0, r3
 8002a96:	3720      	adds	r7, #32
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bd80      	pop	{r7, pc}

08002a9c <SPI_WaitFlagStateUntilTimeout>:
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b088      	sub	sp, #32
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	60f8      	str	r0, [r7, #12]
 8002aa4:	60b9      	str	r1, [r7, #8]
 8002aa6:	603b      	str	r3, [r7, #0]
 8002aa8:	4613      	mov	r3, r2
 8002aaa:	71fb      	strb	r3, [r7, #7]
 8002aac:	f7fe ffb2 	bl	8001a14 <HAL_GetTick>
 8002ab0:	4602      	mov	r2, r0
 8002ab2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ab4:	1a9b      	subs	r3, r3, r2
 8002ab6:	683a      	ldr	r2, [r7, #0]
 8002ab8:	4413      	add	r3, r2
 8002aba:	61fb      	str	r3, [r7, #28]
 8002abc:	f7fe ffaa 	bl	8001a14 <HAL_GetTick>
 8002ac0:	61b8      	str	r0, [r7, #24]
 8002ac2:	4b39      	ldr	r3, [pc, #228]	; (8002ba8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	015b      	lsls	r3, r3, #5
 8002ac8:	0d1b      	lsrs	r3, r3, #20
 8002aca:	69fa      	ldr	r2, [r7, #28]
 8002acc:	fb02 f303 	mul.w	r3, r2, r3
 8002ad0:	617b      	str	r3, [r7, #20]
 8002ad2:	e054      	b.n	8002b7e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002ad4:	683b      	ldr	r3, [r7, #0]
 8002ad6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ada:	d050      	beq.n	8002b7e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8002adc:	f7fe ff9a 	bl	8001a14 <HAL_GetTick>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	69bb      	ldr	r3, [r7, #24]
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	69fa      	ldr	r2, [r7, #28]
 8002ae8:	429a      	cmp	r2, r3
 8002aea:	d902      	bls.n	8002af2 <SPI_WaitFlagStateUntilTimeout+0x56>
 8002aec:	69fb      	ldr	r3, [r7, #28]
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d13d      	bne.n	8002b6e <SPI_WaitFlagStateUntilTimeout+0xd2>
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	685a      	ldr	r2, [r3, #4]
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002b00:	605a      	str	r2, [r3, #4]
 8002b02:	68fb      	ldr	r3, [r7, #12]
 8002b04:	685b      	ldr	r3, [r3, #4]
 8002b06:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002b0a:	d111      	bne.n	8002b30 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	689b      	ldr	r3, [r3, #8]
 8002b10:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002b14:	d004      	beq.n	8002b20 <SPI_WaitFlagStateUntilTimeout+0x84>
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	689b      	ldr	r3, [r3, #8]
 8002b1a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b1e:	d107      	bne.n	8002b30 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	681a      	ldr	r2, [r3, #0]
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002b2e:	601a      	str	r2, [r3, #0]
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b34:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002b38:	d10f      	bne.n	8002b5a <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	681a      	ldr	r2, [r3, #0]
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002b48:	601a      	str	r2, [r3, #0]
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	681a      	ldr	r2, [r3, #0]
 8002b50:	68fb      	ldr	r3, [r7, #12]
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002b58:	601a      	str	r2, [r3, #0]
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	2201      	movs	r2, #1
 8002b5e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	2200      	movs	r2, #0
 8002b66:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002b6a:	2303      	movs	r3, #3
 8002b6c:	e017      	b.n	8002b9e <SPI_WaitFlagStateUntilTimeout+0x102>
 8002b6e:	697b      	ldr	r3, [r7, #20]
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d101      	bne.n	8002b78 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8002b74:	2300      	movs	r3, #0
 8002b76:	61fb      	str	r3, [r7, #28]
 8002b78:	697b      	ldr	r3, [r7, #20]
 8002b7a:	3b01      	subs	r3, #1
 8002b7c:	617b      	str	r3, [r7, #20]
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	689a      	ldr	r2, [r3, #8]
 8002b84:	68bb      	ldr	r3, [r7, #8]
 8002b86:	4013      	ands	r3, r2
 8002b88:	68ba      	ldr	r2, [r7, #8]
 8002b8a:	429a      	cmp	r2, r3
 8002b8c:	bf0c      	ite	eq
 8002b8e:	2301      	moveq	r3, #1
 8002b90:	2300      	movne	r3, #0
 8002b92:	b2db      	uxtb	r3, r3
 8002b94:	461a      	mov	r2, r3
 8002b96:	79fb      	ldrb	r3, [r7, #7]
 8002b98:	429a      	cmp	r2, r3
 8002b9a:	d19b      	bne.n	8002ad4 <SPI_WaitFlagStateUntilTimeout+0x38>
 8002b9c:	2300      	movs	r3, #0
 8002b9e:	4618      	mov	r0, r3
 8002ba0:	3720      	adds	r7, #32
 8002ba2:	46bd      	mov	sp, r7
 8002ba4:	bd80      	pop	{r7, pc}
 8002ba6:	bf00      	nop
 8002ba8:	2000007c 	.word	0x2000007c

08002bac <SPI_EndRxTxTransaction>:
 8002bac:	b580      	push	{r7, lr}
 8002bae:	b086      	sub	sp, #24
 8002bb0:	af02      	add	r7, sp, #8
 8002bb2:	60f8      	str	r0, [r7, #12]
 8002bb4:	60b9      	str	r1, [r7, #8]
 8002bb6:	607a      	str	r2, [r7, #4]
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	9300      	str	r3, [sp, #0]
 8002bbc:	68bb      	ldr	r3, [r7, #8]
 8002bbe:	2200      	movs	r2, #0
 8002bc0:	2180      	movs	r1, #128	; 0x80
 8002bc2:	68f8      	ldr	r0, [r7, #12]
 8002bc4:	f7ff ff6a 	bl	8002a9c <SPI_WaitFlagStateUntilTimeout>
 8002bc8:	4603      	mov	r3, r0
 8002bca:	2b00      	cmp	r3, #0
 8002bcc:	d007      	beq.n	8002bde <SPI_EndRxTxTransaction+0x32>
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002bd2:	f043 0220 	orr.w	r2, r3, #32
 8002bd6:	68fb      	ldr	r3, [r7, #12]
 8002bd8:	655a      	str	r2, [r3, #84]	; 0x54
 8002bda:	2303      	movs	r3, #3
 8002bdc:	e000      	b.n	8002be0 <SPI_EndRxTxTransaction+0x34>
 8002bde:	2300      	movs	r3, #0
 8002be0:	4618      	mov	r0, r3
 8002be2:	3710      	adds	r7, #16
 8002be4:	46bd      	mov	sp, r7
 8002be6:	bd80      	pop	{r7, pc}

08002be8 <__errno>:
 8002be8:	4b01      	ldr	r3, [pc, #4]	; (8002bf0 <__errno+0x8>)
 8002bea:	6818      	ldr	r0, [r3, #0]
 8002bec:	4770      	bx	lr
 8002bee:	bf00      	nop
 8002bf0:	20000088 	.word	0x20000088

08002bf4 <__libc_init_array>:
 8002bf4:	b570      	push	{r4, r5, r6, lr}
 8002bf6:	2500      	movs	r5, #0
 8002bf8:	4e0c      	ldr	r6, [pc, #48]	; (8002c2c <__libc_init_array+0x38>)
 8002bfa:	4c0d      	ldr	r4, [pc, #52]	; (8002c30 <__libc_init_array+0x3c>)
 8002bfc:	1ba4      	subs	r4, r4, r6
 8002bfe:	10a4      	asrs	r4, r4, #2
 8002c00:	42a5      	cmp	r5, r4
 8002c02:	d109      	bne.n	8002c18 <__libc_init_array+0x24>
 8002c04:	f000 f922 	bl	8002e4c <_init>
 8002c08:	2500      	movs	r5, #0
 8002c0a:	4e0a      	ldr	r6, [pc, #40]	; (8002c34 <__libc_init_array+0x40>)
 8002c0c:	4c0a      	ldr	r4, [pc, #40]	; (8002c38 <__libc_init_array+0x44>)
 8002c0e:	1ba4      	subs	r4, r4, r6
 8002c10:	10a4      	asrs	r4, r4, #2
 8002c12:	42a5      	cmp	r5, r4
 8002c14:	d105      	bne.n	8002c22 <__libc_init_array+0x2e>
 8002c16:	bd70      	pop	{r4, r5, r6, pc}
 8002c18:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002c1c:	4798      	blx	r3
 8002c1e:	3501      	adds	r5, #1
 8002c20:	e7ee      	b.n	8002c00 <__libc_init_array+0xc>
 8002c22:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002c26:	4798      	blx	r3
 8002c28:	3501      	adds	r5, #1
 8002c2a:	e7f2      	b.n	8002c12 <__libc_init_array+0x1e>
 8002c2c:	0800d584 	.word	0x0800d584
 8002c30:	0800d584 	.word	0x0800d584
 8002c34:	0800d584 	.word	0x0800d584
 8002c38:	0800d588 	.word	0x0800d588

08002c3c <__itoa>:
 8002c3c:	1e93      	subs	r3, r2, #2
 8002c3e:	2b22      	cmp	r3, #34	; 0x22
 8002c40:	b510      	push	{r4, lr}
 8002c42:	460c      	mov	r4, r1
 8002c44:	d904      	bls.n	8002c50 <__itoa+0x14>
 8002c46:	2300      	movs	r3, #0
 8002c48:	461c      	mov	r4, r3
 8002c4a:	700b      	strb	r3, [r1, #0]
 8002c4c:	4620      	mov	r0, r4
 8002c4e:	bd10      	pop	{r4, pc}
 8002c50:	2a0a      	cmp	r2, #10
 8002c52:	d109      	bne.n	8002c68 <__itoa+0x2c>
 8002c54:	2800      	cmp	r0, #0
 8002c56:	da07      	bge.n	8002c68 <__itoa+0x2c>
 8002c58:	232d      	movs	r3, #45	; 0x2d
 8002c5a:	700b      	strb	r3, [r1, #0]
 8002c5c:	2101      	movs	r1, #1
 8002c5e:	4240      	negs	r0, r0
 8002c60:	4421      	add	r1, r4
 8002c62:	f000 f8b3 	bl	8002dcc <__utoa>
 8002c66:	e7f1      	b.n	8002c4c <__itoa+0x10>
 8002c68:	2100      	movs	r1, #0
 8002c6a:	e7f9      	b.n	8002c60 <__itoa+0x24>

08002c6c <itoa>:
 8002c6c:	f7ff bfe6 	b.w	8002c3c <__itoa>

08002c70 <malloc>:
 8002c70:	4b02      	ldr	r3, [pc, #8]	; (8002c7c <malloc+0xc>)
 8002c72:	4601      	mov	r1, r0
 8002c74:	6818      	ldr	r0, [r3, #0]
 8002c76:	f000 b80b 	b.w	8002c90 <_malloc_r>
 8002c7a:	bf00      	nop
 8002c7c:	20000088 	.word	0x20000088

08002c80 <memset>:
 8002c80:	4603      	mov	r3, r0
 8002c82:	4402      	add	r2, r0
 8002c84:	4293      	cmp	r3, r2
 8002c86:	d100      	bne.n	8002c8a <memset+0xa>
 8002c88:	4770      	bx	lr
 8002c8a:	f803 1b01 	strb.w	r1, [r3], #1
 8002c8e:	e7f9      	b.n	8002c84 <memset+0x4>

08002c90 <_malloc_r>:
 8002c90:	b570      	push	{r4, r5, r6, lr}
 8002c92:	1ccd      	adds	r5, r1, #3
 8002c94:	f025 0503 	bic.w	r5, r5, #3
 8002c98:	3508      	adds	r5, #8
 8002c9a:	2d0c      	cmp	r5, #12
 8002c9c:	bf38      	it	cc
 8002c9e:	250c      	movcc	r5, #12
 8002ca0:	2d00      	cmp	r5, #0
 8002ca2:	4606      	mov	r6, r0
 8002ca4:	db01      	blt.n	8002caa <_malloc_r+0x1a>
 8002ca6:	42a9      	cmp	r1, r5
 8002ca8:	d903      	bls.n	8002cb2 <_malloc_r+0x22>
 8002caa:	230c      	movs	r3, #12
 8002cac:	6033      	str	r3, [r6, #0]
 8002cae:	2000      	movs	r0, #0
 8002cb0:	bd70      	pop	{r4, r5, r6, pc}
 8002cb2:	f000 f8c9 	bl	8002e48 <__malloc_lock>
 8002cb6:	4a21      	ldr	r2, [pc, #132]	; (8002d3c <_malloc_r+0xac>)
 8002cb8:	6814      	ldr	r4, [r2, #0]
 8002cba:	4621      	mov	r1, r4
 8002cbc:	b991      	cbnz	r1, 8002ce4 <_malloc_r+0x54>
 8002cbe:	4c20      	ldr	r4, [pc, #128]	; (8002d40 <_malloc_r+0xb0>)
 8002cc0:	6823      	ldr	r3, [r4, #0]
 8002cc2:	b91b      	cbnz	r3, 8002ccc <_malloc_r+0x3c>
 8002cc4:	4630      	mov	r0, r6
 8002cc6:	f000 f871 	bl	8002dac <_sbrk_r>
 8002cca:	6020      	str	r0, [r4, #0]
 8002ccc:	4629      	mov	r1, r5
 8002cce:	4630      	mov	r0, r6
 8002cd0:	f000 f86c 	bl	8002dac <_sbrk_r>
 8002cd4:	1c43      	adds	r3, r0, #1
 8002cd6:	d124      	bne.n	8002d22 <_malloc_r+0x92>
 8002cd8:	230c      	movs	r3, #12
 8002cda:	4630      	mov	r0, r6
 8002cdc:	6033      	str	r3, [r6, #0]
 8002cde:	f000 f8b4 	bl	8002e4a <__malloc_unlock>
 8002ce2:	e7e4      	b.n	8002cae <_malloc_r+0x1e>
 8002ce4:	680b      	ldr	r3, [r1, #0]
 8002ce6:	1b5b      	subs	r3, r3, r5
 8002ce8:	d418      	bmi.n	8002d1c <_malloc_r+0x8c>
 8002cea:	2b0b      	cmp	r3, #11
 8002cec:	d90f      	bls.n	8002d0e <_malloc_r+0x7e>
 8002cee:	600b      	str	r3, [r1, #0]
 8002cf0:	18cc      	adds	r4, r1, r3
 8002cf2:	50cd      	str	r5, [r1, r3]
 8002cf4:	4630      	mov	r0, r6
 8002cf6:	f000 f8a8 	bl	8002e4a <__malloc_unlock>
 8002cfa:	f104 000b 	add.w	r0, r4, #11
 8002cfe:	1d23      	adds	r3, r4, #4
 8002d00:	f020 0007 	bic.w	r0, r0, #7
 8002d04:	1ac3      	subs	r3, r0, r3
 8002d06:	d0d3      	beq.n	8002cb0 <_malloc_r+0x20>
 8002d08:	425a      	negs	r2, r3
 8002d0a:	50e2      	str	r2, [r4, r3]
 8002d0c:	e7d0      	b.n	8002cb0 <_malloc_r+0x20>
 8002d0e:	684b      	ldr	r3, [r1, #4]
 8002d10:	428c      	cmp	r4, r1
 8002d12:	bf16      	itet	ne
 8002d14:	6063      	strne	r3, [r4, #4]
 8002d16:	6013      	streq	r3, [r2, #0]
 8002d18:	460c      	movne	r4, r1
 8002d1a:	e7eb      	b.n	8002cf4 <_malloc_r+0x64>
 8002d1c:	460c      	mov	r4, r1
 8002d1e:	6849      	ldr	r1, [r1, #4]
 8002d20:	e7cc      	b.n	8002cbc <_malloc_r+0x2c>
 8002d22:	1cc4      	adds	r4, r0, #3
 8002d24:	f024 0403 	bic.w	r4, r4, #3
 8002d28:	42a0      	cmp	r0, r4
 8002d2a:	d005      	beq.n	8002d38 <_malloc_r+0xa8>
 8002d2c:	1a21      	subs	r1, r4, r0
 8002d2e:	4630      	mov	r0, r6
 8002d30:	f000 f83c 	bl	8002dac <_sbrk_r>
 8002d34:	3001      	adds	r0, #1
 8002d36:	d0cf      	beq.n	8002cd8 <_malloc_r+0x48>
 8002d38:	6025      	str	r5, [r4, #0]
 8002d3a:	e7db      	b.n	8002cf4 <_malloc_r+0x64>
 8002d3c:	2000013c 	.word	0x2000013c
 8002d40:	20000140 	.word	0x20000140

08002d44 <rand>:
 8002d44:	b538      	push	{r3, r4, r5, lr}
 8002d46:	4b13      	ldr	r3, [pc, #76]	; (8002d94 <rand+0x50>)
 8002d48:	681c      	ldr	r4, [r3, #0]
 8002d4a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002d4c:	b97b      	cbnz	r3, 8002d6e <rand+0x2a>
 8002d4e:	2018      	movs	r0, #24
 8002d50:	f7ff ff8e 	bl	8002c70 <malloc>
 8002d54:	4a10      	ldr	r2, [pc, #64]	; (8002d98 <rand+0x54>)
 8002d56:	4b11      	ldr	r3, [pc, #68]	; (8002d9c <rand+0x58>)
 8002d58:	63a0      	str	r0, [r4, #56]	; 0x38
 8002d5a:	e9c0 2300 	strd	r2, r3, [r0]
 8002d5e:	4b10      	ldr	r3, [pc, #64]	; (8002da0 <rand+0x5c>)
 8002d60:	2201      	movs	r2, #1
 8002d62:	6083      	str	r3, [r0, #8]
 8002d64:	230b      	movs	r3, #11
 8002d66:	8183      	strh	r3, [r0, #12]
 8002d68:	2300      	movs	r3, #0
 8002d6a:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8002d6e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8002d70:	480c      	ldr	r0, [pc, #48]	; (8002da4 <rand+0x60>)
 8002d72:	690a      	ldr	r2, [r1, #16]
 8002d74:	694b      	ldr	r3, [r1, #20]
 8002d76:	4350      	muls	r0, r2
 8002d78:	4c0b      	ldr	r4, [pc, #44]	; (8002da8 <rand+0x64>)
 8002d7a:	fb04 0003 	mla	r0, r4, r3, r0
 8002d7e:	fba2 2304 	umull	r2, r3, r2, r4
 8002d82:	4403      	add	r3, r0
 8002d84:	1c54      	adds	r4, r2, #1
 8002d86:	f143 0500 	adc.w	r5, r3, #0
 8002d8a:	e9c1 4504 	strd	r4, r5, [r1, #16]
 8002d8e:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 8002d92:	bd38      	pop	{r3, r4, r5, pc}
 8002d94:	20000088 	.word	0x20000088
 8002d98:	abcd330e 	.word	0xabcd330e
 8002d9c:	e66d1234 	.word	0xe66d1234
 8002da0:	0005deec 	.word	0x0005deec
 8002da4:	5851f42d 	.word	0x5851f42d
 8002da8:	4c957f2d 	.word	0x4c957f2d

08002dac <_sbrk_r>:
 8002dac:	b538      	push	{r3, r4, r5, lr}
 8002dae:	2300      	movs	r3, #0
 8002db0:	4c05      	ldr	r4, [pc, #20]	; (8002dc8 <_sbrk_r+0x1c>)
 8002db2:	4605      	mov	r5, r0
 8002db4:	4608      	mov	r0, r1
 8002db6:	6023      	str	r3, [r4, #0]
 8002db8:	f7fe fd72 	bl	80018a0 <_sbrk>
 8002dbc:	1c43      	adds	r3, r0, #1
 8002dbe:	d102      	bne.n	8002dc6 <_sbrk_r+0x1a>
 8002dc0:	6823      	ldr	r3, [r4, #0]
 8002dc2:	b103      	cbz	r3, 8002dc6 <_sbrk_r+0x1a>
 8002dc4:	602b      	str	r3, [r5, #0]
 8002dc6:	bd38      	pop	{r3, r4, r5, pc}
 8002dc8:	200001a4 	.word	0x200001a4

08002dcc <__utoa>:
 8002dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002dce:	b08b      	sub	sp, #44	; 0x2c
 8002dd0:	4605      	mov	r5, r0
 8002dd2:	460c      	mov	r4, r1
 8002dd4:	466e      	mov	r6, sp
 8002dd6:	4b1b      	ldr	r3, [pc, #108]	; (8002e44 <__utoa+0x78>)
 8002dd8:	f103 0c20 	add.w	ip, r3, #32
 8002ddc:	4637      	mov	r7, r6
 8002dde:	6818      	ldr	r0, [r3, #0]
 8002de0:	6859      	ldr	r1, [r3, #4]
 8002de2:	3308      	adds	r3, #8
 8002de4:	c703      	stmia	r7!, {r0, r1}
 8002de6:	4563      	cmp	r3, ip
 8002de8:	463e      	mov	r6, r7
 8002dea:	d1f7      	bne.n	8002ddc <__utoa+0x10>
 8002dec:	6818      	ldr	r0, [r3, #0]
 8002dee:	791b      	ldrb	r3, [r3, #4]
 8002df0:	6038      	str	r0, [r7, #0]
 8002df2:	713b      	strb	r3, [r7, #4]
 8002df4:	1e93      	subs	r3, r2, #2
 8002df6:	2b22      	cmp	r3, #34	; 0x22
 8002df8:	f04f 0300 	mov.w	r3, #0
 8002dfc:	d904      	bls.n	8002e08 <__utoa+0x3c>
 8002dfe:	7023      	strb	r3, [r4, #0]
 8002e00:	461c      	mov	r4, r3
 8002e02:	4620      	mov	r0, r4
 8002e04:	b00b      	add	sp, #44	; 0x2c
 8002e06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e08:	1e66      	subs	r6, r4, #1
 8002e0a:	fbb5 f0f2 	udiv	r0, r5, r2
 8002e0e:	fb02 5510 	mls	r5, r2, r0, r5
 8002e12:	af0a      	add	r7, sp, #40	; 0x28
 8002e14:	443d      	add	r5, r7
 8002e16:	f815 5c28 	ldrb.w	r5, [r5, #-40]
 8002e1a:	1c59      	adds	r1, r3, #1
 8002e1c:	f806 5f01 	strb.w	r5, [r6, #1]!
 8002e20:	4605      	mov	r5, r0
 8002e22:	b968      	cbnz	r0, 8002e40 <__utoa+0x74>
 8002e24:	4622      	mov	r2, r4
 8002e26:	5460      	strb	r0, [r4, r1]
 8002e28:	4423      	add	r3, r4
 8002e2a:	1b19      	subs	r1, r3, r4
 8002e2c:	1b10      	subs	r0, r2, r4
 8002e2e:	4281      	cmp	r1, r0
 8002e30:	dde7      	ble.n	8002e02 <__utoa+0x36>
 8002e32:	7811      	ldrb	r1, [r2, #0]
 8002e34:	7818      	ldrb	r0, [r3, #0]
 8002e36:	f802 0b01 	strb.w	r0, [r2], #1
 8002e3a:	f803 1901 	strb.w	r1, [r3], #-1
 8002e3e:	e7f4      	b.n	8002e2a <__utoa+0x5e>
 8002e40:	460b      	mov	r3, r1
 8002e42:	e7e2      	b.n	8002e0a <__utoa+0x3e>
 8002e44:	0800d55c 	.word	0x0800d55c

08002e48 <__malloc_lock>:
 8002e48:	4770      	bx	lr

08002e4a <__malloc_unlock>:
 8002e4a:	4770      	bx	lr

08002e4c <_init>:
 8002e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e4e:	bf00      	nop
 8002e50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002e52:	bc08      	pop	{r3}
 8002e54:	469e      	mov	lr, r3
 8002e56:	4770      	bx	lr

08002e58 <_fini>:
 8002e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e5a:	bf00      	nop
 8002e5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002e5e:	bc08      	pop	{r3}
 8002e60:	469e      	mov	lr, r3
 8002e62:	4770      	bx	lr
